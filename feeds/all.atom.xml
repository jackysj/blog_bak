<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Jacky MSC</title><link href="//jacky-sj/" rel="alternate"></link><link href="//jacky-sj/feeds/all.atom.xml" rel="self"></link><id>//jacky-sj/</id><updated>2017-04-01T16:55:00+08:00</updated><entry><title>关于博客重开</title><link href="//jacky-sj/reopen-blog.html" rel="alternate"></link><published>2017-04-01T16:55:00+08:00</published><updated>2017-04-01T16:55:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2017-04-01:/reopen-blog.html</id><summary type="html">&lt;p&gt;说说博客重开以及数据迁移&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;很久没有写过博客了，有点不大适应。自老博客停更之后，自己写的东西都偏向于记录，没怎么考虑别人是否能看懂，这个可能需要一些时间去转变。&lt;/p&gt;
&lt;p&gt;重新开启这个博客的原因，很大部分是因为收到了不少的反馈和鼓舞。从开始写博客开始，哪怕是后来停更之后，都能经常性地收到一些邮件。有很会提问的同学，能够很清楚详细地列出跟问题出现相关的种种信息；当然也有不太会提问的，比如发过来就说，『我用这段代码跑出来的结果为什么不一样』，这种我心情比较好的时候会搭理，不是那么好就直接移到已处理里面了；还要一种，比较神奇，直接发邮件说『这是我的微信号，有事请教，麻烦加下』，还好这种邮件占比很低。&lt;/p&gt;
&lt;p&gt;我欢迎发邮件来跟我讨论一些问题，只是我希望收到的邮件是比较完整的，内容上至少可以把问题描述清楚。一般来说，如果你的邮件正常，我回复邮件还是比较快的。另外，我跟你不熟的话，就不要让我加微信之类的。（当然，我的能力和精力都很有限，很多问题我都无法解决，邮件只是用来交流讨论，不是大学教授设置的答疑信箱，谢谢。）&lt;/p&gt;
&lt;p&gt;由于自己现在主要使用 Python，所以博客采用了 Pelican。还是与以前一样搭建在 GitHub 上，不过这次我申请了自己的域名，也添加了 SSL，毕竟是自己的地盘，还是尽量弄得像那么回事吧。&lt;/p&gt;
&lt;p&gt;旧博客的站点我考虑了一下，最后还是保留了，只是新建了一个二级域名指向它。不过旧博客里面的内容有一些显示存在问题，所以还是花了点时间重新整理并发到了新的站点，方便查看(不过，之前故意留下的错误我并没有修改，认真看的同学肯定是可以发现的)。&lt;/p&gt;
&lt;p&gt;对于新站点，我的定位就是我的一个公开的笔记本，发的东西大都可能不再是强整理的系列性文章（系列性的文章应该还是会有的），更多的是一种零散的记录。&lt;/p&gt;</content><category term="record"></category></entry><entry><title>吃鸡蛋想到的一个小问题</title><link href="//jacky-sj/egg-probability.html" rel="alternate"></link><published>2014-08-18T15:14:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-08-18:/egg-probability.html</id><summary type="html">&lt;p&gt;吃个鸡蛋引发的概率问题&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;最近好久没有更新，实在是有点小忙。因为这是在学校的最后一个暑假，光是写论文就蛮耗脑子的，每每想写点什么的时候，总是提不起劲来。&lt;/p&gt;
&lt;p&gt;今天早上吃鸡蛋的时候，想到了一个问题，觉得还蛮有意思的，就说说吧。话说，我早上煮鸡蛋吃，共拿了4个鸡蛋，两个是上个星期买的（旧），两个是昨天买的（新）。鸡蛋烧好后，从外观上是无法分辨哪个是旧的，哪个是新的。那么，在我吃第二个鸡蛋的时候，我就想说，这个鸡蛋是旧的的概率是多少。&lt;/p&gt;
&lt;p&gt;这个问题其实很简单，答案肯定是1/2。我们从一开始的开始看：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;吃第一个鸡蛋，吃的是旧的的概率必然是 &lt;span class="math"&gt;\( \frac{2}{4}=0.5\)&lt;/span&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;吃第二个鸡蛋，吃的是旧的概率是 &lt;span class="math"&gt;\( \frac{2}{4} \frac{1}{3} + \frac{2}{4} \frac{2}{3} = 0.5\)&lt;/span&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;吃第三个鸡蛋，吃的是旧的的概率是 &lt;span class="math"&gt;\( \frac{2}{4} \frac{2}{3} \frac{1}{2} + \frac{2}{4} \frac{2}{3} \frac{1}{2} + \frac{2}{4} \frac{1}{3} \frac{2}{2} = 0.5\)&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;吃第四个鸡蛋，吃的是旧的的概率是0.5。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;发现，所有的值都是0.5。也就是说，无论是吃了几（1-3）个鸡蛋，下一个鸡蛋是旧的的概率依旧是0.5。其实，这个很容易理解，以吃第二个鸡蛋为例，我不知道第一个鸡蛋吃的是旧的还是新的。所以，我在吃第二个鸡蛋的时候，实际上还是从或新或旧两个等可能性的选项中选择，所以是0.5。&lt;/p&gt;
&lt;p&gt;又或者，你比较熟悉概率论，那么这个更容易说，这其实就是等概率无放回的独立重复试验，同样以吃第二个鸡蛋为例，由于不知道第一次取出的鸡蛋是新的还是旧的，那就没有先验信息，没有先验信息，那么概率不变，依旧是0.5。&lt;/p&gt;
&lt;p&gt;说到这，不由得想起来抓阄。现在来看的话，一场公平的抓阄，需要保证的不是谁先谁后去抓，而是要保证，后面抓的人不知道前面抓的人手中的阄是什么。也就是要保证每一个人都没有了解先验信息，那么，每个人抓到目标的可能性就是相同的。&lt;/p&gt;
&lt;p&gt;好吧，我承认好久没有看概率论了，说起概率论的术语有点儿怪怪的。说到如何公平地抓阄，让我想起在概率论里面有一个很出名的经典问题，三门问题，也就是蒙提霍尔悖论：&lt;/p&gt;
&lt;p&gt;大致的意思是：有三个关着的门，其中一扇门后面是一辆汽车，另外两扇门后各是一只山羊，选中后面有车的那扇门就可以获得那辆汽车。当参赛的人选定了一扇门，但未去开启它的时候，主持人会开启剩下两扇门中的其中一扇，露出一只山羊。然后，主持人会问参赛者要不要换另一扇仍然关着的门。问题就是，换门能不能增加参赛者获得汽车的可能性。&lt;/p&gt;
&lt;p&gt;这个问题是一个很违反直觉的经典问题，最关键的地方就在于，按照题意，其实主持人是知道哪一扇门后面是汽车的，也就是说，主持人会提供给你一定的信息。具体来说，如果你选中了后面是山羊的一扇门，那么主持人在剩下的两扇门中，只能选中那扇后面是山羊的门，而不能选中后面是汽车的那扇门；如果你选中了后面是车的那扇门，那么主持人可以随便选一扇。&lt;/p&gt;
&lt;p&gt;那么如何求解呢？其实也很简单，在解决这类问题的时候，最关键的是抓住随机事件之间的关系，这里就是需要了解两个随机事件：不换门赢得汽车以及换门赢得汽车两个随机事件。搞清楚这两个事件之间的关系，那么这个问题就很容易解决了，这里不再赘述。有需要的话，可以自行Google，这类讨论网上有很多。&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="record"></category></entry><entry><title>R与Python的协作：rpy2简介</title><link href="//jacky-sj/r-python.html" rel="alternate"></link><published>2014-07-09T16:14:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-07-09:/r-python.html</id><summary type="html">&lt;p&gt;R 与 Python 的协作&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;R语言作为统计分析软件，其在统计分析、图形绘制等等方面是强大的，无与伦比的！但是，如果让R去处理一些文件操作、处理文本、获取数据等等的活，一般来讲，R并不太擅长。举个例子来讲，想从自己的Gmail邮箱中获取邮件信息数据，使用R去完成就有点悲剧了，使用Ruby或者Python，这样的活还是挺容易的。&lt;/p&gt;
&lt;p&gt;当然，使用Python做数据分析也是蛮不错的。这里我不想比较Python与R，只想说，我平时使用的习惯是“Python + R”。具体点就是：使用R做数据分析，使用Python完成其它工作！用上面那个例子来说，我会使用Python获取Gmail的数据，然后使用R对数据进行分析处理，大致就是这样！&lt;/p&gt;
&lt;p&gt;rpy2是Python的一个第三方程序库，可以实现用python读取R的对象、调⽤R的方法等等。好了，废话不说了，开始说说rpy2吧。&lt;/p&gt;
&lt;h3&gt;安装&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;与安装其它Python第三方程序库相同，使用&lt;code&gt;pip install rpy2&lt;/code&gt;或者&lt;code&gt;easy_install rpy2&lt;/code&gt;就OK了。当然，前提是你的电脑已经安装了R(3.0或以上的版本)。&lt;/p&gt;
&lt;h3&gt;开始使用&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;安装好之后，就需要导入rpy2。在rpy2中有一个模块：rpy2.robjects，是对R的一个高级封装，这个模块包含了R对象和一些了的R语言的函数。使用rpy2，一般来讲就是使用这个模块。简单理解，Python可以通过“rpy2.robjects”这座桥，连接到R。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;rpy2.robjects&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;robjects&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;table&lt;/span&gt; &lt;span class="mf"&gt;1.9&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;  &lt;span class="n"&gt;For&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;data.table&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;Welcome&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt;  &lt;span class="n"&gt;Wed&lt;/span&gt; &lt;span class="n"&gt;Jul&lt;/span&gt;  &lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;注&lt;/em&gt;：如果你跟我一样，R中安装了“data.table”包，并且设置&lt;code&gt;.First()&lt;/code&gt;函数输出“Welcome”的话，你得到跟我一样的返回。&lt;/p&gt;
&lt;h3&gt;R实例&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;&lt;code&gt;rpy2.robjects&lt;/code&gt;中有一个r对象，即r实例指的就是&lt;code&gt;rpy2.robjects&lt;/code&gt;.r。它是Python中的嵌入式R进程，可以理解成，通过&lt;code&gt;rpy2.robjects.r&lt;/code&gt;，可以在Python中使用R命令，获取R对象。&lt;/p&gt;
&lt;p&gt;在rpy2的官方介绍里面，是这么说的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The object &lt;strong&gt;r&lt;/strong&gt; in &lt;strong&gt;rpy2.robjects&lt;/strong&gt; represents the running embedded &lt;em&gt;R&lt;/em&gt; Process.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;举个例子，比如说获取R中的对象&lt;code&gt;pi&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;pi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;robjects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pi&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;pi&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;FloatVector&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mh"&gt;0x10c434998&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mh"&gt;0x7fd09d4a1808&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;3.141593&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="mf"&gt;3.141592653589793&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;可见，&lt;code&gt;pi&lt;/code&gt;是一个浮点数向量，是从R中获取的，使用&lt;code&gt;[&lt;/code&gt;可以获取它的值。这里有一点需要注意的就是，这里获取得到的&lt;code&gt;pi&lt;/code&gt;是一个向量：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;piPlus2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;robjects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pi&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;piPlus2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;FloatVector&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mh"&gt;0x10c591170&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mh"&gt;0x7fd09d657828&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;3.141593&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.000000&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;piPlus2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="mf"&gt;3.141592653589793&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;piPlus2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r_repr&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;&amp;#39;c(3.14159265358979, 2)&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;可以使用&lt;code&gt;r_repr()&lt;/code&gt;方法，显示从R中调过来的对象，在R中的表示。所以如果单纯地想做&lt;code&gt;pi + 2&lt;/code&gt;，必须先转换成Python中的数值。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;piPlus2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;robjects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pi&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;piPlus2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="mf"&gt;5.141592653589793&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;创建R向量&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;既然使用&lt;code&gt;robjects.r&lt;/code&gt;获取的R对象&lt;code&gt;pi&lt;/code&gt;是R向量，那么自然就会想到，如何在Python中创建R向量，其实很简单：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;robjects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StrVector&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ab&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;bc&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r_repr&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;&amp;#39;c(&amp;quot;ab&amp;quot;, &amp;quot;bc&amp;quot;)&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;StrVector&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mh"&gt;0x10c6dbe18&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mh"&gt;0x7fd09d5a12e8&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;&amp;#39;ab&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;可以看到，str就是一个字符向量，属于R中的对象，在Python中使用&lt;code&gt;[&lt;/code&gt;可以取出其中的值。&lt;/p&gt;
&lt;p&gt;同理，可以创建其它类型的向量：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;robjects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IntVector&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r_repr&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;&amp;#39;1:3&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;robjects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FloatVector&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;FloatVector&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mh"&gt;0x10c6dbf80&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mh"&gt;0x7fd09d7e7608&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;1.000000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.000000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.000000&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r_repr&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;&amp;#39;c(1, 2, 3)&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;解决向量，那么就要考虑矩阵了，想想在R中是如何构建矩阵的：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; x.mat &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; nrow &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; x.mat&lt;/span&gt;
&lt;span class="code-line"&gt;     &lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;    &lt;span class="m"&gt;1&lt;/span&gt;    &lt;span class="m"&gt;3&lt;/span&gt;    &lt;span class="m"&gt;5&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;    &lt;span class="m"&gt;2&lt;/span&gt;    &lt;span class="m"&gt;4&lt;/span&gt;    &lt;span class="m"&gt;6&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;可以看到，我们需要用的函数&lt;code&gt;matrix()&lt;/code&gt;。那么我们就需要调用R中的对象&lt;code&gt;matrix()&lt;/code&gt;函数：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;robjects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FloatVector&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;xMat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;robjects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;matrix&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nrow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;xMat&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Matrix&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mh"&gt;0x10c6dbb00&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mh"&gt;0x7fd09da59c20&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;1.000000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.000000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.000000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;4.000000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;5.000000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;6.000000&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;xMat&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r_repr&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;&amp;#39;structure(c(1, 2, 3, 4, 5, 6), .Dim = 2:3)&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xMat&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;     &lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt;    &lt;span class="mi"&gt;3&lt;/span&gt;    &lt;span class="mi"&gt;5&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;    &lt;span class="mi"&gt;2&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;    &lt;span class="mi"&gt;6&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;想想，这样其实蛮麻烦的，在R中我们可以使用&lt;code&gt;1:6&lt;/code&gt;创建向量，这边打这么长可是不喜欢。那么就有两种方式可以解决：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;robjects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FloatVector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:])&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;FloatVector&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mh"&gt;0x10c434ab8&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mh"&gt;0x7fd09b7b5820&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;1.000000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.000000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.000000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;4.000000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;5.000000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;6.000000&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这种就是使用Python本身的&lt;code&gt;range()&lt;/code&gt;函数，然后使用&lt;code&gt;robjects.FloatVector()&lt;/code&gt;转换数据结构。还有一种，就是使用R对象&lt;code&gt;:&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;robjects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IntVector&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mh"&gt;0x10c44f170&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mh"&gt;0x7fd09b125b58&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;       &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;调用R函数&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;上面已经试过了调用R中的&lt;code&gt;matrix()&lt;/code&gt;函数，再试试调用R中的函数&lt;code&gt;mean()&lt;/code&gt;函数：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;rmean&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;robjects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;mean&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;robjects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IntVector&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mh"&gt;0x10c6dba28&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mh"&gt;0x7fd09bb9b298&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;       &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;rmean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="mf"&gt;2.0&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这里需要记住的就是，调用的R函数作用在R对象上，返回的仍然是R对象。&lt;/p&gt;
&lt;p&gt;知道了如何调用R函数，那么如果是自己想写一个R函数呢？其实我们可以直接在&lt;code&gt;robjects.r&lt;/code&gt;中添加对象：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;robjects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;...         f &amp;lt;- function(x) {&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;...             if (length(x) &amp;gt; 2) {&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;...                 return(mean(x))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;...             }&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;...             return(sum(x))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;...         }&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;...         &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;SignatureTranslatedFunction&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mh"&gt;0x10c6dbc20&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mh"&gt;0x7fd09d25aea8&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;rf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;robjects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;f&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;rf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;robjects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;FloatVector&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mh"&gt;0x10c6dbd40&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mh"&gt;0x7fd09bd4ea68&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;3.500000&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;rf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;robjects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IntVector&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mh"&gt;0x10c6f12d8&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mh"&gt;0x7fd09bd4dcf8&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;       &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在&lt;code&gt;robjects.r&lt;/code&gt;中添加了&lt;code&gt;f()&lt;/code&gt;函数的对象，我们就可以调用它了。当然，还可以在Python中直接写R的脚本，然后直接运行：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;rscript&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;...         f &amp;lt;- function(x) {&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;...             if (length(x) &amp;gt; 2) {&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;...                 return(mean(x))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;...             }&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;...         return(sum(x))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;...         }&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;...&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;...         f(1:2)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;...         &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;robjects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rscript&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IntVector&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mh"&gt;0x10c6db7e8&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mh"&gt;0x7fd09bd4e268&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;       &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;上面两种其实是一个意思，都是在&lt;code&gt;robjects.r&lt;/code&gt;中添加了R脚本。当然，也可以运行写好的"*.r"的脚本，使用&lt;code&gt;robjects.r.source(&amp;lt;path&amp;gt;)&lt;/code&gt;即可。&lt;/p&gt;
&lt;h3&gt;最后&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;对&lt;code&gt;rpy2&lt;/code&gt;的简单介绍就到这吧，这是一个很不错的库，功能远远不止我上面介绍的这一些，感兴趣的话，可以去&lt;a href="http://rpy.sourceforge.net/"&gt;它的官网&lt;/a&gt;查看其介绍的文档，你肯定会发现很多新鲜好玩的东西。&lt;/p&gt;
&lt;h4&gt;参考&lt;/h4&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://rpy.sourceforge.net/rpy2/doc-2.4/html/overview.html#installation"&gt;rpy2的官方文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.jeffkit.info/2010/02/475/"&gt;让R与Python共舞&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.google.com.hk/search?q=rpy2"&gt;...&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="python"></category><category term="r"></category></entry><entry><title>数据科学20：文本挖掘2</title><link href="//jacky-sj/text-mining-2.html" rel="alternate"></link><published>2014-06-26T15:02:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-06-26:/text-mining-2.html</id><summary type="html">&lt;p&gt;文本挖掘简介 2&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;一、对词条-文档矩阵的操作&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;在'tm'包中，提供了一些常用的函数，可以对得到的Document Term
Matrix进行一些操作。当然，我们也可以使用自己的方式，对该矩阵进行一些探索，比如，我们先来看看词条的频数：&lt;/p&gt;
&lt;h3&gt;1.1 词条频数&lt;/h3&gt;
&lt;hr&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;freq &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;colSums&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;as.matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dtm&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;freq&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## [1] 780&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果我们想看看，哪些频数是大于等于30的，我们可以：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kp"&gt;names&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;freq&lt;span class="p"&gt;[&lt;/span&gt;freq &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="m"&gt;30&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## [1] &amp;quot;market&amp;quot; &amp;quot;mln&amp;quot;    &amp;quot;oil&amp;quot;    &amp;quot;opec&amp;quot;   &amp;quot;price&amp;quot;  &amp;quot;said&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;但其实，在'tm'包中有自带的函数可以解决：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;findFreqTerms&lt;span class="p"&gt;(&lt;/span&gt;dtm&lt;span class="p"&gt;,&lt;/span&gt; lowfreq &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## [1] &amp;quot;market&amp;quot; &amp;quot;mln&amp;quot;    &amp;quot;oil&amp;quot;    &amp;quot;opec&amp;quot;   &amp;quot;price&amp;quot;  &amp;quot;said&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果得到了每个词条的频数，我们可以列一个表查看一些其它的东西：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;ord &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;order&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;freq&lt;span class="p"&gt;,&lt;/span&gt; decreasing &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## 查看频数排在前十的词条及其频数&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;freq&lt;span class="p"&gt;[&lt;/span&gt;ord&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##    oil   said  price   opec    mln market barrel   last    bpd   dlrs&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##     86     73     63     47     31     30     26     24     23     23&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## 查看频数的频数&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;freq&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## freq&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## 21 23 24 26 30 31 47 63 73 86&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##  2  2  1  1  1  1  1  1  1  1&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;1.2 相关性&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;除了词条的频数，我们大都还会对词条之间的相关性感兴趣。如何计算，其实很简单：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;corr &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; cor&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;as.matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dtm&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;corr&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##           abdul     abil      abl   abroad   accept&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## abdul   1.00000 -0.08812 -0.05263 -0.05263 -0.05263&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## abil   -0.08812  1.00000 -0.08812  0.79309 -0.08812&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## abl    -0.05263 -0.08812  1.00000 -0.05263 -0.05263&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## abroad -0.05263  0.79309 -0.05263  1.00000 -0.05263&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## accept -0.05263 -0.08812 -0.05263 -0.05263  1.00000&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;dim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;corr&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## [1] 780 780&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;比如我们想知道，与词条'oil'相关性超过0.8的词条有哪些：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;op &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;options&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;options&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;digits &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;name &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;setdiff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;names&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;corr&lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;oil&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;corr&lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;oil&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;oil&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;value &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; corr&lt;span class="p"&gt;[&lt;/span&gt;name&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;oil&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kt"&gt;matrix&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;value&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kp"&gt;order&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;value&lt;span class="p"&gt;,&lt;/span&gt; decreasing &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;rownames&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;names&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;value&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;colnames&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;oil&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kt"&gt;matrix&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##       oil&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## name 0.87&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## opec 0.81&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## tri  0.81&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## want 0.81&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;options&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;op&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;但其实，'tm'包中提供了现成函数：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;findAssocs&lt;span class="p"&gt;(&lt;/span&gt;dtm&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;oil&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##       oil&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## opec 0.87&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## name 0.81&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## tri  0.81&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## want 0.81&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;可以看到，这一个函数实现了上面我们那一长串的功能。&lt;strong&gt;但是，我觉得，提供的现成函数有好处，但还是需要自己想想如何实现这个现成的函数。这不仅对概念理解有帮助，也对程序编写以及了解别人写的函数有更加深刻的理解。&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;1.3 删减稀疏条目&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;大部分时候，Document Term
Matrix是一个很大的矩阵，而且是行数远小于列数。也就是说，这个矩阵实际上是很稀疏的，不妨来看看我们这个只有20个文档的矩阵，稀疏程度如何：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;Sparse &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;which&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dtm&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;Sparse&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## [1] 14030&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;Non &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;which&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dtm&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;Non&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## [1] 1570&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%d%%&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;Sparse&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;Non &lt;span class="o"&gt;+&lt;/span&gt; Sparse&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## [1] &amp;quot;90%&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;可以看到，矩阵中等于零的数目是14030，不为零的为1570，稀疏程度达到了90%，显然是非常稀疏的。当然，其实这个可以不用自己算的：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;dtm&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## &amp;lt;&amp;lt;DocumentTermMatrix (documents: 20, terms: 780)&amp;gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## Non-/sparse entries: 1570/14030&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## Sparsity           : 90%&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## Maximal term length: 13&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## Weighting          : term frequency (tf)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;上面的输出，前两个就知道它的意思了。那么另外两个呢？“Maximal term
length”，顾名思义，就是最长的那个词条的长度。不妨来看一下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;name &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;colnames&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;as.matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dtm&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;name.length &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;sapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;name&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;nchar&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;max.name &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; name&lt;span class="p"&gt;[&lt;/span&gt;name.length &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kp"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;name.length&lt;span class="p"&gt;)]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;max.value &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; name.length&lt;span class="p"&gt;[&lt;/span&gt;max.name&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;max.value&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## responsibilit&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##            13&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;可以看到是吻合的。至于最后一个“Weighting”，是指Document Term
Matrix中的每一条目的值是如何计算的。这里用的是“term
frequency”，就是词条频率，简写为“tf”。除了这个，还有一些其它计算方法，比如：tf-idf，即term
frequency-inverse document frequency。这个以后再说。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;回到主题：&lt;/strong&gt;计算出了稀疏条目的比例，证实了矩阵的确是很稀疏的，那么下面就是要去删除一些条目。有些条目在很少的文档中出现，甚至只在一篇文档中出现了。一般来说，删除这样的条目不会对矩阵的信息继承带来显著的影响。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;remove.sparseterms &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dtm&lt;span class="p"&gt;,&lt;/span&gt; per&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    dtm.Matrix &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;as.matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dtm&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    term.per &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dtm.Matrix&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;item&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kp"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;which&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;item &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="kp"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;item&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    name &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;names&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;term.per&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kp"&gt;which&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;term.per &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; per&lt;span class="p"&gt;)])&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="kr"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dtm.Matrix&lt;span class="p"&gt;[,&lt;/span&gt; name&lt;span class="p"&gt;])&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;remove.sparseterms&lt;span class="p"&gt;(&lt;/span&gt;dtm&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##      Terms&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## Docs  barrel oil one price reuter said&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   127      2   5   0     5      1    3&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   144      0  12   1     6      2   11&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   191      1   2   0     2      1    1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   194      1   1   1     2      1    1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   211      0   1   0     0      1    3&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   236      4   7   1     8      1   10&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   237      0   4   1     1      1    1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   242      0   3   2     2      1    3&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   246      1   5   1     2      1    5&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   248      3   9   1    10      1    7&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   273      3   5   1     5      1    8&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   349      0   4   0     1      1    1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   352      1   5   0     5      1    2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   353      1   4   1     2      1    1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   368      0   3   0     0      1    3&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   489      3   4   2     3      1    2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   502      3   5   2     3      1    2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   543      1   3   1     3      1    4&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   704      0   3   4     3      1    4&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   708      2   1   0     0      1    1&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这边的计算就是：检查词条的稀疏程度是否低于给定的系数&lt;code&gt;per&lt;/code&gt;，如果是，就保留该词条；如果不是，则舍弃。&lt;/p&gt;
&lt;p&gt;当然，在'tm'包中也有自带的函数可以解决：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;rsterms &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; removeSparseTerms&lt;span class="p"&gt;(&lt;/span&gt;dtm&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;inspect&lt;span class="p"&gt;(&lt;/span&gt;rsterms&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## &amp;lt;&amp;lt;DocumentTermMatrix (documents: 20, terms: 6)&amp;gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## Non-/sparse entries: 103/17&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## Sparsity           : 14%&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## Maximal term length: 6&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## Weighting          : term frequency (tf)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##      Terms&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## Docs  barrel oil one price reuter said&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   127      2   5   0     5      1    3&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   144      0  12   1     6      2   11&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   191      1   2   0     2      1    1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   194      1   1   1     2      1    1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   211      0   1   0     0      1    3&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   236      4   7   1     8      1   10&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   237      0   4   1     1      1    1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   242      0   3   2     2      1    3&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   246      1   5   1     2      1    5&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   248      3   9   1    10      1    7&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   273      3   5   1     5      1    8&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   349      0   4   0     1      1    1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   352      1   5   0     5      1    2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   353      1   4   1     2      1    1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   368      0   3   0     0      1    3&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   489      3   4   2     3      1    2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   502      3   5   2     3      1    2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   543      1   3   1     3      1    4&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   704      0   3   4     3      1    4&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##   708      2   1   0     0      1    1&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;与之前的结果相同。&lt;/p&gt;
&lt;h2&gt;二、相关的绘图&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;介绍完Document Term
Matrix之后，其实已经可以开始使用模型去处理了。之前介绍过聚类、分类啊等等的内容，有了这个矩阵之后，其实都可以去做了。不过，在建立模型之前，我想先说说有关绘图的问题。&lt;/p&gt;
&lt;p&gt;我们前面算了很多的量，比如频数啊、相关系数啊等等。但其实，我们大多时候需要用图形将它们展示出来。在R中，我们可以使用&lt;code&gt;Rgraphviz&lt;/code&gt;包来绘制词条之间的关系图：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;Rgraphviz&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;plot&lt;span class="p"&gt;(&lt;/span&gt;dtm&lt;span class="p"&gt;,&lt;/span&gt; terms &lt;span class="o"&gt;=&lt;/span&gt; findFreqTerms&lt;span class="p"&gt;(&lt;/span&gt;dtm&lt;span class="p"&gt;,&lt;/span&gt; lowfreq &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk TM2.2.1" src="/images/article/a42/TM2.2.11.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## 指定相关性必须在0.5之上才可连线&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;plot&lt;span class="p"&gt;(&lt;/span&gt;dtm&lt;span class="p"&gt;,&lt;/span&gt; terms &lt;span class="o"&gt;=&lt;/span&gt; findFreqTerms&lt;span class="p"&gt;(&lt;/span&gt;dtm&lt;span class="p"&gt;,&lt;/span&gt; lowfreq &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; corThreshold &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk TM2.2.1" src="/images/article/a42/TM2.2.12.png"&gt;&lt;/p&gt;
&lt;p&gt;在默认不指定&lt;code&gt;terms&lt;/code&gt;和&lt;code&gt;corThreshold&lt;/code&gt;参数的情况下，&lt;code&gt;plot&lt;/code&gt;函数会绘制随机20个词条，相关性至少0.7的图形。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;当然，我们还可以绘制熟悉的频数直方图：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;freq &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;colSums&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;as.matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dtm&lt;span class="p"&gt;)),&lt;/span&gt; decreasing &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;tf &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;data.frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;term &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;names&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;freq&lt;span class="p"&gt;),&lt;/span&gt; freq &lt;span class="o"&gt;=&lt;/span&gt; freq&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;g &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; ggplot&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;subset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;tf&lt;span class="p"&gt;,&lt;/span&gt; freq &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; aes&lt;span class="p"&gt;(&lt;/span&gt;term&lt;span class="p"&gt;,&lt;/span&gt; freq&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;g &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; g &lt;span class="o"&gt;+&lt;/span&gt; geom_bar&lt;span class="p"&gt;(&lt;/span&gt;stat &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;identity&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; aes&lt;span class="p"&gt;(&lt;/span&gt;fill &lt;span class="o"&gt;=&lt;/span&gt; freq&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;g&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk TM2.2.2" src="/images/article/a42/TM2.2.2.png"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;另外一个比较流行好看的图，应该就是文本云(wordcloud)了，可以使用&lt;code&gt;wordcloud&lt;/code&gt;包实现：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;wordcloud&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;wordcloud&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;names&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;freq&lt;span class="p"&gt;),&lt;/span&gt; freq&lt;span class="p"&gt;,&lt;/span&gt; min.freq &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; max.words &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk TM2.2.3" src="/images/article/a42/TM2.2.31.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## 添加颜色&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;RColorBrewer&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;wordcloud&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;names&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;freq&lt;span class="p"&gt;),&lt;/span&gt; freq&lt;span class="p"&gt;,&lt;/span&gt; min.freq &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; max.words &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; colors &lt;span class="o"&gt;=&lt;/span&gt; brewer.pal&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="s"&gt;&amp;quot;Paired&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk TM2.2.3" src="/images/article/a42/TM2.2.32.png"&gt;&lt;/p&gt;
&lt;p&gt;当然，&lt;code&gt;wordcloud()&lt;/code&gt;函数提供了很多选项，可以自行查看，我就不多讲了。&lt;/p&gt;</content><category term="data science"></category><category term="r"></category><category term="machine learning"></category><category term="text mining"></category></entry><entry><title>数据科学19：文本挖掘1-更新</title><link href="//jacky-sj/text-mining-1-update.html" rel="alternate"></link><published>2014-06-25T19:21:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-06-25:/text-mining-1-update.html</id><summary type="html">&lt;p&gt;文本挖掘简介 1 - 代码重新实现&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;前几天，R中的’tm’包从0.5-10更新到了0.6版本。其中更新了不少的东西，对于上一篇中的代码，已经是不能够正确运行了。所以这里需要先更新一下上一篇中的一些代码，正好可以回顾一些之前的流程。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## Load Packages needed&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;tm&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;SnowballC&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;ggplot2&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## Loading Corpus 这里直接读成文本格式&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;xml.path &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;system.file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;texts&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;crude&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; package &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;tm&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;docs &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; Corpus&lt;span class="p"&gt;(&lt;/span&gt;DirSource&lt;span class="p"&gt;(&lt;/span&gt;xml.path&lt;span class="p"&gt;),&lt;/span&gt; readerControl &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;reader &lt;span class="o"&gt;=&lt;/span&gt; readReut21578XMLasPlain&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## 查看&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;docs&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## &amp;lt;&amp;lt;PlainTextDocument (metadata: 15)&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class="code-line"&gt;## Diamond Shamrock Corp said that&lt;/span&gt;
&lt;span class="code-line"&gt;## effective today it had cut its contract prices for crude oil by&lt;/span&gt;
&lt;span class="code-line"&gt;## 1.50 dlrs a barrel.&lt;/span&gt;
&lt;span class="code-line"&gt;##     The reduction brings its posted price for West Texas&lt;/span&gt;
&lt;span class="code-line"&gt;## Intermediate to 16.00 dlrs a barrel, the copany said.&lt;/span&gt;
&lt;span class="code-line"&gt;##     &amp;quot;The price reduction today was made in the light of falling&lt;/span&gt;
&lt;span class="code-line"&gt;## oil product prices and a weak crude oil market,&amp;quot; a company&lt;/span&gt;
&lt;span class="code-line"&gt;## spokeswoman said.&lt;/span&gt;
&lt;span class="code-line"&gt;##     Diamond is the latest in a line of U.S. oil companies that&lt;/span&gt;
&lt;span class="code-line"&gt;## have cut its contract, or posted, prices over the last two days&lt;/span&gt;
&lt;span class="code-line"&gt;## citing weak oil markets.&lt;/span&gt;
&lt;span class="code-line"&gt;##  Reuter&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## 去除特殊字符 上一篇中的代码已不能胜任&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## 因为上一篇中的代码会修改Corpus中每个文档的class&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## 所以这里需要使用一个新的函数&amp;#39;content_transformer&amp;#39;来保证class还是TextDoument&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;removeSpecialCharacter &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; pattern&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="kp"&gt;gsub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;pattern&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; x&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;docs &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; tm_map&lt;span class="p"&gt;(&lt;/span&gt;docs&lt;span class="p"&gt;,&lt;/span&gt; content_transformer&lt;span class="p"&gt;(&lt;/span&gt;removeSpecialCharacter&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[@/-]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;docs&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## &amp;lt;&amp;lt;PlainTextDocument (metadata: 15)&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class="code-line"&gt;## Diamond Shamrock Corp said that&lt;/span&gt;
&lt;span class="code-line"&gt;## effective today it had cut its contract prices for crude oil by&lt;/span&gt;
&lt;span class="code-line"&gt;## 1.50 dlrs a barrel.&lt;/span&gt;
&lt;span class="code-line"&gt;##     The reduction brings its posted price for West Texas&lt;/span&gt;
&lt;span class="code-line"&gt;## Intermediate to 16.00 dlrs a barrel, the copany said.&lt;/span&gt;
&lt;span class="code-line"&gt;##     &amp;quot;The price reduction today was made in the light of falling&lt;/span&gt;
&lt;span class="code-line"&gt;## oil product prices and a weak crude oil market,&amp;quot; a company&lt;/span&gt;
&lt;span class="code-line"&gt;## spokeswoman said.&lt;/span&gt;
&lt;span class="code-line"&gt;##     Diamond is the latest in a line of U.S. oil companies that&lt;/span&gt;
&lt;span class="code-line"&gt;## have cut its contract, or posted, prices over the last two days&lt;/span&gt;
&lt;span class="code-line"&gt;## citing weak oil markets.&lt;/span&gt;
&lt;span class="code-line"&gt;##  Reuter&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## 转换成小写字母 与上面问题类似，需要添加&amp;#39;content_transformer&amp;#39;函数&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;docs &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; tm_map&lt;span class="p"&gt;(&lt;/span&gt;docs&lt;span class="p"&gt;,&lt;/span&gt; content_transformer&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;tolower&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;docs&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## &amp;lt;&amp;lt;PlainTextDocument (metadata: 15)&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class="code-line"&gt;## diamond shamrock corp said that&lt;/span&gt;
&lt;span class="code-line"&gt;## effective today it had cut its contract prices for crude oil by&lt;/span&gt;
&lt;span class="code-line"&gt;## 1.50 dlrs a barrel.&lt;/span&gt;
&lt;span class="code-line"&gt;##     the reduction brings its posted price for west texas&lt;/span&gt;
&lt;span class="code-line"&gt;## intermediate to 16.00 dlrs a barrel, the copany said.&lt;/span&gt;
&lt;span class="code-line"&gt;##     &amp;quot;the price reduction today was made in the light of falling&lt;/span&gt;
&lt;span class="code-line"&gt;## oil product prices and a weak crude oil market,&amp;quot; a company&lt;/span&gt;
&lt;span class="code-line"&gt;## spokeswoman said.&lt;/span&gt;
&lt;span class="code-line"&gt;##     diamond is the latest in a line of u.s. oil companies that&lt;/span&gt;
&lt;span class="code-line"&gt;## have cut its contract, or posted, prices over the last two days&lt;/span&gt;
&lt;span class="code-line"&gt;## citing weak oil markets.&lt;/span&gt;
&lt;span class="code-line"&gt;##  reuter&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## 去除数字&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;docs &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; tm_map&lt;span class="p"&gt;(&lt;/span&gt;docs&lt;span class="p"&gt;,&lt;/span&gt; removeNumbers&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;docs&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## &amp;lt;&amp;lt;PlainTextDocument (metadata: 15)&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class="code-line"&gt;## diamond shamrock corp said that&lt;/span&gt;
&lt;span class="code-line"&gt;## effective today it had cut its contract prices for crude oil by&lt;/span&gt;
&lt;span class="code-line"&gt;## . dlrs a barrel.&lt;/span&gt;
&lt;span class="code-line"&gt;##     the reduction brings its posted price for west texas&lt;/span&gt;
&lt;span class="code-line"&gt;## intermediate to . dlrs a barrel, the copany said.&lt;/span&gt;
&lt;span class="code-line"&gt;##     &amp;quot;the price reduction today was made in the light of falling&lt;/span&gt;
&lt;span class="code-line"&gt;## oil product prices and a weak crude oil market,&amp;quot; a company&lt;/span&gt;
&lt;span class="code-line"&gt;## spokeswoman said.&lt;/span&gt;
&lt;span class="code-line"&gt;##     diamond is the latest in a line of u.s. oil companies that&lt;/span&gt;
&lt;span class="code-line"&gt;## have cut its contract, or posted, prices over the last two days&lt;/span&gt;
&lt;span class="code-line"&gt;## citing weak oil markets.&lt;/span&gt;
&lt;span class="code-line"&gt;##  reuter&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## 去除停止词&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;docs &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; tm_map&lt;span class="p"&gt;(&lt;/span&gt;docs&lt;span class="p"&gt;,&lt;/span&gt; removeWords&lt;span class="p"&gt;,&lt;/span&gt; stopwords&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;english&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;docs&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## &amp;lt;&amp;lt;PlainTextDocument (metadata: 15)&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class="code-line"&gt;## diamond shamrock corp said&lt;/span&gt;
&lt;span class="code-line"&gt;## effective today   cut  contract prices  crude oil&lt;/span&gt;
&lt;span class="code-line"&gt;## . dlrs  barrel.&lt;/span&gt;
&lt;span class="code-line"&gt;##      reduction brings  posted price  west texas&lt;/span&gt;
&lt;span class="code-line"&gt;## intermediate  . dlrs  barrel,  copany said.&lt;/span&gt;
&lt;span class="code-line"&gt;##     &amp;quot; price reduction today  made   light  falling&lt;/span&gt;
&lt;span class="code-line"&gt;## oil product prices   weak crude oil market,&amp;quot;  company&lt;/span&gt;
&lt;span class="code-line"&gt;## spokeswoman said.&lt;/span&gt;
&lt;span class="code-line"&gt;##     diamond   latest   line  u.s. oil companies&lt;/span&gt;
&lt;span class="code-line"&gt;##  cut  contract,  posted, prices   last two days&lt;/span&gt;
&lt;span class="code-line"&gt;## citing weak oil markets.&lt;/span&gt;
&lt;span class="code-line"&gt;##  reuter&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## 去除标点符号&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;docs &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; tm_map&lt;span class="p"&gt;(&lt;/span&gt;docs&lt;span class="p"&gt;,&lt;/span&gt; removePunctuation&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;docs&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## &amp;lt;&amp;lt;PlainTextDocument (metadata: 15)&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class="code-line"&gt;## diamond shamrock corp said&lt;/span&gt;
&lt;span class="code-line"&gt;## effective today   cut  contract prices  crude oil&lt;/span&gt;
&lt;span class="code-line"&gt;##  dlrs  barrel&lt;/span&gt;
&lt;span class="code-line"&gt;##      reduction brings  posted price  west texas&lt;/span&gt;
&lt;span class="code-line"&gt;## intermediate   dlrs  barrel  copany said&lt;/span&gt;
&lt;span class="code-line"&gt;##      price reduction today  made   light  falling&lt;/span&gt;
&lt;span class="code-line"&gt;## oil product prices   weak crude oil market  company&lt;/span&gt;
&lt;span class="code-line"&gt;## spokeswoman said&lt;/span&gt;
&lt;span class="code-line"&gt;##     diamond   latest   line  us oil companies&lt;/span&gt;
&lt;span class="code-line"&gt;##  cut  contract  posted prices   last two days&lt;/span&gt;
&lt;span class="code-line"&gt;## citing weak oil markets&lt;/span&gt;
&lt;span class="code-line"&gt;##  reuter&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## 去除多余的空格&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;docs &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; tm_map&lt;span class="p"&gt;(&lt;/span&gt;docs&lt;span class="p"&gt;,&lt;/span&gt; stripWhitespace&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;docs&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## &amp;lt;&amp;lt;PlainTextDocument (metadata: 15)&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class="code-line"&gt;## diamond shamrock corp said effective today cut contract prices crude oil dlrs barrel reduction brings posted price west texas intermediate dlrs barrel copany said price reduction today made light falling oil product prices weak crude oil market company spokeswoman said diamond latest line us oil companies cut contract posted prices last two days citing weak oil markets reuter&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## 词干化&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;docs &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; tm_map&lt;span class="p"&gt;(&lt;/span&gt;docs&lt;span class="p"&gt;,&lt;/span&gt; stemDocument&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;docs&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## &amp;lt;&amp;lt;PlainTextDocument (metadata: 15)&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class="code-line"&gt;## diamond shamrock corp said effect today cut contract price crude oil dlrs barrel reduct bring post price west texa intermedi dlrs barrel copani said price reduct today made light fall oil product price weak crude oil market compani spokeswoman said diamond latest line us oil compani cut contract post price last two day cite weak oil market reuter&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## 创建Document Term Matrix&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;dtm &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; DocumentTermMatrix&lt;span class="p"&gt;(&lt;/span&gt;docs&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;dtm&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## &amp;lt;&amp;lt;DocumentTermMatrix (documents: 20, terms: 780)&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class="code-line"&gt;## Non-/sparse entries: 1570/14030&lt;/span&gt;
&lt;span class="code-line"&gt;## Sparsity           : 90%&lt;/span&gt;
&lt;span class="code-line"&gt;## Maximal term length: 13&lt;/span&gt;
&lt;span class="code-line"&gt;## Weighting          : term frequency (tf)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;inspect&lt;span class="p"&gt;(&lt;/span&gt;dtm&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## &amp;lt;&amp;lt;DocumentTermMatrix (documents: 5, terms: 10)&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class="code-line"&gt;## Non-/sparse entries: 2/48&lt;/span&gt;
&lt;span class="code-line"&gt;## Sparsity           : 96%&lt;/span&gt;
&lt;span class="code-line"&gt;## Maximal term length: 7&lt;/span&gt;
&lt;span class="code-line"&gt;## Weighting          : term frequency (tf)&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;##      Terms&lt;/span&gt;
&lt;span class="code-line"&gt;## Docs  abdul abil abl abroad accept accord across activ add address&lt;/span&gt;
&lt;span class="code-line"&gt;##   127     0    0   0      0      0      0      0     0   0       0&lt;/span&gt;
&lt;span class="code-line"&gt;##   144     0    2   0      0      0      0      0     0   0       4&lt;/span&gt;
&lt;span class="code-line"&gt;##   191     0    0   0      0      0      0      0     0   0       0&lt;/span&gt;
&lt;span class="code-line"&gt;##   194     0    0   0      0      0      0      0     0   0       0&lt;/span&gt;
&lt;span class="code-line"&gt;##   211     0    0   0      0      0      0      0     0   0       0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;到这里，就已经完成了上一篇所做的事情了。留意一下，也可以发现，'tm'包更新过之后，处理的结果与之前有一些不同，可以自己动手试试看，看看哪里不一样？&lt;/p&gt;</content><category term="data science"></category><category term="r"></category><category term="machine learning"></category><category term="text mining"></category></entry><entry><title>数据科学18：文本挖掘1</title><link href="//jacky-sj/text-mining-1.html" rel="alternate"></link><published>2014-06-18T15:08:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-06-18:/text-mining-1.html</id><summary type="html">&lt;p&gt;文本挖掘简介 1&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;文本挖掘&lt;/strong&gt;，也称为文本数据挖掘，意思就如字面，对文本数据进行挖掘分析。文本挖掘一般包含：&lt;em&gt;文本分类&lt;/em&gt;、&lt;em&gt;文本聚类&lt;/em&gt;、&lt;em&gt;概念实体挖掘&lt;/em&gt;、&lt;em&gt;自然语言处理&lt;/em&gt;等等。接下来，我打算用一个简单的例子，介绍一下R语言文本挖掘的一般过程，顺便介绍一些文本挖掘中的概念。&lt;/p&gt;
&lt;p&gt;这边主要使用R中的&lt;code&gt;tm&lt;/code&gt;包进行文本挖掘，首先加载Package：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;tm&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;## R中处理文本挖掘的框架包&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;ggplot2&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;1. 载入Corpus&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Corpus&lt;/strong&gt;（语料库），指一系列文档的集合，是&lt;code&gt;tm&lt;/code&gt;包管理文件的数据结构。通常，我们需要将一批文档导入成Corpus结构的数据，然后才能进行进一步的处理分析。&lt;/p&gt;
&lt;p&gt;文档的格式有非常多的格式，&lt;code&gt;tm&lt;/code&gt;包支持的格式其实只占很少的一部分，大致有：text, PDF, Mircosoft Word和XML。所以，如果需要处理的文档，其格式不在这里面的话，就需要对格式进行一些转换。个人建议，将文档格式转换成text或者XML会比较容易处理。我们可以查看一下，&lt;code&gt;tm&lt;/code&gt;包支持的文档格式：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;getReaders&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## [1] &amp;quot;readDOC&amp;quot;                 &amp;quot;readPDF&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;## [3] &amp;quot;readReut21578XML&amp;quot;        &amp;quot;readReut21578XMLasPlain&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;## [5] &amp;quot;readPlain&amp;quot;               &amp;quot;readRCV1&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;## [7] &amp;quot;readRCV1asPlain&amp;quot;         &amp;quot;readTabular&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;## [9] &amp;quot;readXML&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在&lt;code&gt;tm&lt;/code&gt;包中，Corpus可以分为两种。一种是Volatile Corpus，这种数据结构是作为R对象保存在内存中,使用&lt;code&gt;VCorpus()&lt;/code&gt;或者&lt;code&gt;Corpus()&lt;/code&gt;函数；另一种就是Permanent Corpus，作为R的外部保存，使用&lt;code&gt;PCorpus()&lt;/code&gt;函数。显然，如何选择取决于内存大小以及运算速率的要求了。&lt;/p&gt;
&lt;p&gt;我们这里使用&lt;code&gt;tm&lt;/code&gt;包自带的XML文档数据进行演示：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;xml &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;system.file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;texts&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;crude&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; package &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;tm&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;## 数据所在的目录&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;docs &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; Corpus&lt;span class="p"&gt;(&lt;/span&gt;DirSource&lt;span class="p"&gt;(&lt;/span&gt;xml&lt;span class="p"&gt;),&lt;/span&gt; readerControl &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;reader &lt;span class="o"&gt;=&lt;/span&gt; readReut21578XML&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这里使用的数据源是&lt;code&gt;DirSource&lt;/code&gt;，当然也可以从其他的数据源导入，可以使用&lt;code&gt;getSources()&lt;/code&gt;查看：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;getSources&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## [1] &amp;quot;DataframeSource&amp;quot; &amp;quot;DirSource&amp;quot;       &amp;quot;ReutersSource&amp;quot;   &amp;quot;URISource&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;## [5] &amp;quot;VectorSource&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果读取的是其他格式的，就需要指定一些其他的参数，用&lt;code&gt;path&lt;/code&gt;表示数据所在的目录：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## txt&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;docs &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; Corpus&lt;span class="p"&gt;(&lt;/span&gt;DirSource&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;path&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## PDF&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;docs &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; Corpus&lt;span class="p"&gt;(&lt;/span&gt;DirSource&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;path&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; readerControl &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;reader &lt;span class="o"&gt;=&lt;/span&gt; readPDF&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## 其它的类似&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;2. 查看Corpus&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;将数据导入成Corpus之后，我们就需要查看Corpus。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;docs  &lt;span class="c1"&gt;## 只显示了Corpus中含有的文档数据数量&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## A corpus with 20 text documents&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kp"&gt;names&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;docs&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="c1"&gt;## 显示前3个文档的名称&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## [1] &amp;quot;reut-00001.xml&amp;quot; &amp;quot;reut-00002.xml&amp;quot; &amp;quot;reut-00004.xml&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kp"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;docs&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;## 显示更多的meta data，但不显示源信息&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## A corpus with 20 text documents&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## The metadata consists of 2 tag-value pairs and a data frame&lt;/span&gt;
&lt;span class="code-line"&gt;## Available tags are:&lt;/span&gt;
&lt;span class="code-line"&gt;##   create_date creator&lt;/span&gt;
&lt;span class="code-line"&gt;## Available variables in the data frame are:&lt;/span&gt;
&lt;span class="code-line"&gt;##   MetaID&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;inspect&lt;span class="p"&gt;(&lt;/span&gt;docs&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;  &lt;span class="c1"&gt;## 提取第一篇文档的完整信息、&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## A corpus with 1 text document&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## The metadata consists of 2 tag-value pairs and a data frame&lt;/span&gt;
&lt;span class="code-line"&gt;## Available tags are:&lt;/span&gt;
&lt;span class="code-line"&gt;##   create_date creator&lt;/span&gt;
&lt;span class="code-line"&gt;## Available variables in the data frame are:&lt;/span&gt;
&lt;span class="code-line"&gt;##   MetaID&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## $`reut-00001.xml`&lt;/span&gt;
&lt;span class="code-line"&gt;## $doc&lt;/span&gt;
&lt;span class="code-line"&gt;## $file&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;&lt;span class="nt"&gt;&amp;lt;buffer&amp;gt;&lt;/span&gt;&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## $version&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;1.0&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## $children&lt;/span&gt;
&lt;span class="code-line"&gt;## $children$REUTERS&lt;/span&gt;
&lt;span class="code-line"&gt;## &lt;span class="nt"&gt;&amp;lt;REUTERS&lt;/span&gt; &lt;span class="na"&gt;TOPICS=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;YES&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;LEWISSPLIT=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;TRAIN&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;CGISPLIT=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;TRAINING-SET&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;OLDID=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;5670&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;NEWID=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;127&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##  &lt;span class="nt"&gt;&amp;lt;DATE&amp;gt;&lt;/span&gt;26-FEB-1987 17:00:56.04&lt;span class="nt"&gt;&amp;lt;/DATE&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##  &lt;span class="nt"&gt;&amp;lt;TOPICS&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##   &lt;span class="nt"&gt;&amp;lt;D&amp;gt;&lt;/span&gt;crude&lt;span class="nt"&gt;&amp;lt;/D&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##  &lt;span class="nt"&gt;&amp;lt;/TOPICS&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##  &lt;span class="nt"&gt;&amp;lt;PLACES&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##   &lt;span class="nt"&gt;&amp;lt;D&amp;gt;&lt;/span&gt;usa&lt;span class="nt"&gt;&amp;lt;/D&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##  &lt;span class="nt"&gt;&amp;lt;/PLACES&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##  &lt;span class="nt"&gt;&amp;lt;PEOPLE/&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##  &lt;span class="nt"&gt;&amp;lt;ORGS/&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##  &lt;span class="nt"&gt;&amp;lt;EXCHANGES/&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##  &lt;span class="nt"&gt;&amp;lt;COMPANIES/&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##  &lt;span class="nt"&gt;&amp;lt;UNKNOWN&amp;gt;&lt;/span&gt;Y&lt;/span&gt;
&lt;span class="code-line"&gt;##    f0119 reute&lt;/span&gt;
&lt;span class="code-line"&gt;## u f BC-DIAMOND-SHAMROCK-(DIA   02-26 0097&lt;span class="nt"&gt;&amp;lt;/UNKNOWN&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##  &lt;span class="nt"&gt;&amp;lt;TEXT&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##   &lt;span class="nt"&gt;&amp;lt;TITLE&amp;gt;&lt;/span&gt;DIAMOND SHAMROCK (DIA) CUTS CRUDE PRICES&lt;span class="nt"&gt;&amp;lt;/TITLE&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##   &lt;span class="nt"&gt;&amp;lt;DATELINE&amp;gt;&lt;/span&gt;NEW YORK, FEB 26 -&lt;span class="nt"&gt;&amp;lt;/DATELINE&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##   &lt;span class="nt"&gt;&amp;lt;BODY&amp;gt;&lt;/span&gt;Diamond Shamrock Corp said that&lt;/span&gt;
&lt;span class="code-line"&gt;## effective today it had cut its contract prices for crude oil by&lt;/span&gt;
&lt;span class="code-line"&gt;## 1.50 dlrs a barrel.&lt;/span&gt;
&lt;span class="code-line"&gt;##     The reduction brings its posted price for West Texas&lt;/span&gt;
&lt;span class="code-line"&gt;## Intermediate to 16.00 dlrs a barrel, the copany said.&lt;/span&gt;
&lt;span class="code-line"&gt;##     &lt;span class="ni"&gt;&amp;amp;quot;&lt;/span&gt;The price reduction today was made in the light of falling&lt;/span&gt;
&lt;span class="code-line"&gt;## oil product prices and a weak crude oil market,&lt;span class="ni"&gt;&amp;amp;quot;&lt;/span&gt; a company&lt;/span&gt;
&lt;span class="code-line"&gt;## spokeswoman said.&lt;/span&gt;
&lt;span class="code-line"&gt;##     Diamond is the latest in a line of U.S. oil companies that&lt;/span&gt;
&lt;span class="code-line"&gt;## have cut its contract, or posted, prices over the last two days&lt;/span&gt;
&lt;span class="code-line"&gt;## citing weak oil markets.&lt;/span&gt;
&lt;span class="code-line"&gt;##  Reuter&lt;span class="nt"&gt;&amp;lt;/BODY&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##  &lt;span class="nt"&gt;&amp;lt;/TEXT&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;## &lt;span class="nt"&gt;&amp;lt;/REUTERS&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;class&amp;quot;)&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;XMLDocumentContent&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## $dtd&lt;/span&gt;
&lt;span class="code-line"&gt;## $external&lt;/span&gt;
&lt;span class="code-line"&gt;## NULL&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## $internal&lt;/span&gt;
&lt;span class="code-line"&gt;## NULL&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;class&amp;quot;)&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;DTDList&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;Author&amp;quot;)&lt;/span&gt;
&lt;span class="code-line"&gt;## character(0)&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;DateTimeStamp&amp;quot;)&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;1987-02-26 17:00:56 GMT&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;Description&amp;quot;)&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;Heading&amp;quot;)&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;DIAMOND SHAMROCK (DIA) CUTS CRUDE PRICES&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;ID&amp;quot;)&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;127&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;Language&amp;quot;)&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;en&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;LocalMetaData&amp;quot;)&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;LocalMetaData&amp;quot;)$TOPICS&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;YES&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;LocalMetaData&amp;quot;)$LEWISSPLIT&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;TRAIN&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;LocalMetaData&amp;quot;)$CGISPLIT&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;TRAINING-SET&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;LocalMetaData&amp;quot;)$OLDID&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;5670&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;LocalMetaData&amp;quot;)$Topics&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;crude&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;LocalMetaData&amp;quot;)$Places&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;usa&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;LocalMetaData&amp;quot;)$People&lt;/span&gt;
&lt;span class="code-line"&gt;## character(0)&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;LocalMetaData&amp;quot;)$Orgs&lt;/span&gt;
&lt;span class="code-line"&gt;## character(0)&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;LocalMetaData&amp;quot;)$Exchanges&lt;/span&gt;
&lt;span class="code-line"&gt;## character(0)&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;Origin&amp;quot;)&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;Reuters-21578 XML&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;class&amp;quot;)&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;Reuters21578Document&amp;quot; &amp;quot;TextDocument&amp;quot;         &amp;quot;XMLDocument&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;## [4] &amp;quot;XMLAbstractDocument&amp;quot;  &amp;quot;oldClass&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## inspect(docs) 可以提取所有文档的完整信息，不过数据量会很大&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;docs&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;  &lt;span class="c1"&gt;## 提取第一个文档&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## $doc&lt;/span&gt;
&lt;span class="code-line"&gt;## $file&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;&lt;span class="nt"&gt;&amp;lt;buffer&amp;gt;&lt;/span&gt;&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## $version&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;1.0&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## $children&lt;/span&gt;
&lt;span class="code-line"&gt;## $children$REUTERS&lt;/span&gt;
&lt;span class="code-line"&gt;## &lt;span class="nt"&gt;&amp;lt;REUTERS&lt;/span&gt; &lt;span class="na"&gt;TOPICS=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;YES&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;LEWISSPLIT=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;TRAIN&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;CGISPLIT=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;TRAINING-SET&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;OLDID=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;5670&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;NEWID=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;127&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##  &lt;span class="nt"&gt;&amp;lt;DATE&amp;gt;&lt;/span&gt;26-FEB-1987 17:00:56.04&lt;span class="nt"&gt;&amp;lt;/DATE&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##  &lt;span class="nt"&gt;&amp;lt;TOPICS&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##   &lt;span class="nt"&gt;&amp;lt;D&amp;gt;&lt;/span&gt;crude&lt;span class="nt"&gt;&amp;lt;/D&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##  &lt;span class="nt"&gt;&amp;lt;/TOPICS&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##  &lt;span class="nt"&gt;&amp;lt;PLACES&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##   &lt;span class="nt"&gt;&amp;lt;D&amp;gt;&lt;/span&gt;usa&lt;span class="nt"&gt;&amp;lt;/D&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##  &lt;span class="nt"&gt;&amp;lt;/PLACES&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##  &lt;span class="nt"&gt;&amp;lt;PEOPLE/&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##  &lt;span class="nt"&gt;&amp;lt;ORGS/&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##  &lt;span class="nt"&gt;&amp;lt;EXCHANGES/&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##  &lt;span class="nt"&gt;&amp;lt;COMPANIES/&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##  &lt;span class="nt"&gt;&amp;lt;UNKNOWN&amp;gt;&lt;/span&gt;Y&lt;/span&gt;
&lt;span class="code-line"&gt;##    f0119 reute&lt;/span&gt;
&lt;span class="code-line"&gt;## u f BC-DIAMOND-SHAMROCK-(DIA   02-26 0097&lt;span class="nt"&gt;&amp;lt;/UNKNOWN&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##  &lt;span class="nt"&gt;&amp;lt;TEXT&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##   &lt;span class="nt"&gt;&amp;lt;TITLE&amp;gt;&lt;/span&gt;DIAMOND SHAMROCK (DIA) CUTS CRUDE PRICES&lt;span class="nt"&gt;&amp;lt;/TITLE&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##   &lt;span class="nt"&gt;&amp;lt;DATELINE&amp;gt;&lt;/span&gt;NEW YORK, FEB 26 -&lt;span class="nt"&gt;&amp;lt;/DATELINE&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##   &lt;span class="nt"&gt;&amp;lt;BODY&amp;gt;&lt;/span&gt;Diamond Shamrock Corp said that&lt;/span&gt;
&lt;span class="code-line"&gt;## effective today it had cut its contract prices for crude oil by&lt;/span&gt;
&lt;span class="code-line"&gt;## 1.50 dlrs a barrel.&lt;/span&gt;
&lt;span class="code-line"&gt;##     The reduction brings its posted price for West Texas&lt;/span&gt;
&lt;span class="code-line"&gt;## Intermediate to 16.00 dlrs a barrel, the copany said.&lt;/span&gt;
&lt;span class="code-line"&gt;##     &lt;span class="ni"&gt;&amp;amp;quot;&lt;/span&gt;The price reduction today was made in the light of falling&lt;/span&gt;
&lt;span class="code-line"&gt;## oil product prices and a weak crude oil market,&lt;span class="ni"&gt;&amp;amp;quot;&lt;/span&gt; a company&lt;/span&gt;
&lt;span class="code-line"&gt;## spokeswoman said.&lt;/span&gt;
&lt;span class="code-line"&gt;##     Diamond is the latest in a line of U.S. oil companies that&lt;/span&gt;
&lt;span class="code-line"&gt;## have cut its contract, or posted, prices over the last two days&lt;/span&gt;
&lt;span class="code-line"&gt;## citing weak oil markets.&lt;/span&gt;
&lt;span class="code-line"&gt;##  Reuter&lt;span class="nt"&gt;&amp;lt;/BODY&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##  &lt;span class="nt"&gt;&amp;lt;/TEXT&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;## &lt;span class="nt"&gt;&amp;lt;/REUTERS&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;class&amp;quot;)&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;XMLDocumentContent&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## $dtd&lt;/span&gt;
&lt;span class="code-line"&gt;## $external&lt;/span&gt;
&lt;span class="code-line"&gt;## NULL&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## $internal&lt;/span&gt;
&lt;span class="code-line"&gt;## NULL&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;class&amp;quot;)&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;DTDList&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;Author&amp;quot;)&lt;/span&gt;
&lt;span class="code-line"&gt;## character(0)&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;DateTimeStamp&amp;quot;)&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;1987-02-26 17:00:56 GMT&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;Description&amp;quot;)&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;Heading&amp;quot;)&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;DIAMOND SHAMROCK (DIA) CUTS CRUDE PRICES&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;ID&amp;quot;)&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;127&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;Language&amp;quot;)&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;en&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;LocalMetaData&amp;quot;)&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;LocalMetaData&amp;quot;)$TOPICS&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;YES&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;LocalMetaData&amp;quot;)$LEWISSPLIT&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;TRAIN&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;LocalMetaData&amp;quot;)$CGISPLIT&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;TRAINING-SET&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;LocalMetaData&amp;quot;)$OLDID&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;5670&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;LocalMetaData&amp;quot;)$Topics&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;crude&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;LocalMetaData&amp;quot;)$Places&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;usa&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;LocalMetaData&amp;quot;)$People&lt;/span&gt;
&lt;span class="code-line"&gt;## character(0)&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;LocalMetaData&amp;quot;)$Orgs&lt;/span&gt;
&lt;span class="code-line"&gt;## character(0)&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;LocalMetaData&amp;quot;)$Exchanges&lt;/span&gt;
&lt;span class="code-line"&gt;## character(0)&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;Origin&amp;quot;)&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;Reuters-21578 XML&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;## attr(,&amp;quot;class&amp;quot;)&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] &amp;quot;Reuters21578Document&amp;quot; &amp;quot;TextDocument&amp;quot;         &amp;quot;XMLDocument&amp;quot;&lt;/span&gt;
&lt;span class="code-line"&gt;## [4] &amp;quot;XMLAbstractDocument&amp;quot;  &amp;quot;oldClass&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## docs[[&amp;#39;reut-00001.xml&amp;#39;]] 同样可以提取第一个文档&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;3. 信息转化&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;创建好Corpus后，就需要对其进行一些修改，比如去除标点、停止词等等。这里就需要使用到一个函数&lt;code&gt;tm_map()&lt;/code&gt;，其可以将转化函数作用到每一个文档数据上。&lt;/p&gt;
&lt;h4&gt;1. 转化为纯文本&lt;/h4&gt;
&lt;p&gt;如果Corpus中存储的是非纯文本的数据，比如XML格式的数据，那么就需要先将这些数据转换成纯文本格式:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;docs &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; tm_map&lt;span class="p"&gt;(&lt;/span&gt;docs&lt;span class="p"&gt;,&lt;/span&gt; as.PlainTextDocument&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;docs&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## DIAMOND SHAMROCK (DIA) CUTS CRUDE PRICES&lt;/span&gt;
&lt;span class="code-line"&gt;## NEW YORK, FEB 26 -&lt;/span&gt;
&lt;span class="code-line"&gt;## Diamond Shamrock Corp said that&lt;/span&gt;
&lt;span class="code-line"&gt;## effective today it had cut its contract prices for crude oil by&lt;/span&gt;
&lt;span class="code-line"&gt;## 1.50 dlrs a barrel.&lt;/span&gt;
&lt;span class="code-line"&gt;##     The reduction brings its posted price for West Texas&lt;/span&gt;
&lt;span class="code-line"&gt;## Intermediate to 16.00 dlrs a barrel, the copany said.&lt;/span&gt;
&lt;span class="code-line"&gt;##     &amp;quot;The price reduction today was made in the light of falling&lt;/span&gt;
&lt;span class="code-line"&gt;## oil product prices and a weak crude oil market,&amp;quot; a company&lt;/span&gt;
&lt;span class="code-line"&gt;## spokeswoman said.&lt;/span&gt;
&lt;span class="code-line"&gt;##     Diamond is the latest in a line of U.S. oil companies that&lt;/span&gt;
&lt;span class="code-line"&gt;## have cut its contract, or posted, prices over the last two days&lt;/span&gt;
&lt;span class="code-line"&gt;## citing weak oil markets.&lt;/span&gt;
&lt;span class="code-line"&gt;##  Reuter&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;2. 去除特殊字符&lt;/h4&gt;
&lt;p&gt;在文档数据中，可能会存在这样的字符："/"、"@"、"-"等等。大部分时候，我们需要将其去除掉：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;i &lt;span class="kr"&gt;in&lt;/span&gt; &lt;span class="kp"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;docs&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    docs&lt;span class="p"&gt;[[&lt;/span&gt;i&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;gsub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; docs&lt;span class="p"&gt;[[&lt;/span&gt;i&lt;span class="p"&gt;]])&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    docs&lt;span class="p"&gt;[[&lt;/span&gt;i&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;gsub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;@&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; docs&lt;span class="p"&gt;[[&lt;/span&gt;i&lt;span class="p"&gt;]])&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    docs&lt;span class="p"&gt;[[&lt;/span&gt;i&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;gsub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;-&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; docs&lt;span class="p"&gt;[[&lt;/span&gt;i&lt;span class="p"&gt;]])&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果存在更复杂的替换，可以使用正则表达式去解决，这里不做介绍。&lt;/p&gt;
&lt;h4&gt;3. 转换成小写&lt;/h4&gt;
&lt;p&gt;顾名思义，就是将所有的数据转换成小写字母，这样以便更加容易分析。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;docs &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; tm_map&lt;span class="p"&gt;(&lt;/span&gt;docs&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;tolower&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;docs&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;  &lt;span class="c1"&gt;## 查看效果&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## diamond shamrock (dia) cuts crude prices&lt;/span&gt;
&lt;span class="code-line"&gt;## new york, feb 26&lt;/span&gt;
&lt;span class="code-line"&gt;## diamond shamrock corp said that&lt;/span&gt;
&lt;span class="code-line"&gt;## effective today it had cut its contract prices for crude oil by&lt;/span&gt;
&lt;span class="code-line"&gt;## 1.50 dlrs a barrel.&lt;/span&gt;
&lt;span class="code-line"&gt;##     the reduction brings its posted price for west texas&lt;/span&gt;
&lt;span class="code-line"&gt;## intermediate to 16.00 dlrs a barrel, the copany said.&lt;/span&gt;
&lt;span class="code-line"&gt;##     &amp;quot;the price reduction today was made in the light of falling&lt;/span&gt;
&lt;span class="code-line"&gt;## oil product prices and a weak crude oil market,&amp;quot; a company&lt;/span&gt;
&lt;span class="code-line"&gt;## spokeswoman said.&lt;/span&gt;
&lt;span class="code-line"&gt;##     diamond is the latest in a line of u.s. oil companies that&lt;/span&gt;
&lt;span class="code-line"&gt;## have cut its contract, or posted, prices over the last two days&lt;/span&gt;
&lt;span class="code-line"&gt;## citing weak oil markets.&lt;/span&gt;
&lt;span class="code-line"&gt;##  reuter&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;4. 去除数字&lt;/h4&gt;
&lt;p&gt;有些时候，我们需要将文档中的数字去除掉：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;docs &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; tm_map&lt;span class="p"&gt;(&lt;/span&gt;docs&lt;span class="p"&gt;,&lt;/span&gt; removeNumbers&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;docs&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## diamond shamrock (dia) cuts crude prices&lt;/span&gt;
&lt;span class="code-line"&gt;## new york, feb&lt;/span&gt;
&lt;span class="code-line"&gt;## diamond shamrock corp said that&lt;/span&gt;
&lt;span class="code-line"&gt;## effective today it had cut its contract prices for crude oil by&lt;/span&gt;
&lt;span class="code-line"&gt;## . dlrs a barrel.&lt;/span&gt;
&lt;span class="code-line"&gt;##     the reduction brings its posted price for west texas&lt;/span&gt;
&lt;span class="code-line"&gt;## intermediate to . dlrs a barrel, the copany said.&lt;/span&gt;
&lt;span class="code-line"&gt;##     &amp;quot;the price reduction today was made in the light of falling&lt;/span&gt;
&lt;span class="code-line"&gt;## oil product prices and a weak crude oil market,&amp;quot; a company&lt;/span&gt;
&lt;span class="code-line"&gt;## spokeswoman said.&lt;/span&gt;
&lt;span class="code-line"&gt;##     diamond is the latest in a line of u.s. oil companies that&lt;/span&gt;
&lt;span class="code-line"&gt;## have cut its contract, or posted, prices over the last two days&lt;/span&gt;
&lt;span class="code-line"&gt;## citing weak oil markets.&lt;/span&gt;
&lt;span class="code-line"&gt;##  reuter&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;5. 去除停止词&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;docs &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; tm_map&lt;span class="p"&gt;(&lt;/span&gt;docs&lt;span class="p"&gt;,&lt;/span&gt; removeWords&lt;span class="p"&gt;,&lt;/span&gt; stopwords&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;english&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;docs&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## diamond shamrock (dia) cuts crude prices&lt;/span&gt;
&lt;span class="code-line"&gt;## new york, feb&lt;/span&gt;
&lt;span class="code-line"&gt;## diamond shamrock corp said&lt;/span&gt;
&lt;span class="code-line"&gt;## effective today   cut  contract prices  crude oil&lt;/span&gt;
&lt;span class="code-line"&gt;## . dlrs  barrel.&lt;/span&gt;
&lt;span class="code-line"&gt;##      reduction brings  posted price  west texas&lt;/span&gt;
&lt;span class="code-line"&gt;## intermediate  . dlrs  barrel,  copany said.&lt;/span&gt;
&lt;span class="code-line"&gt;##     &amp;quot; price reduction today  made   light  falling&lt;/span&gt;
&lt;span class="code-line"&gt;## oil product prices   weak crude oil market,&amp;quot;  company&lt;/span&gt;
&lt;span class="code-line"&gt;## spokeswoman said.&lt;/span&gt;
&lt;span class="code-line"&gt;##     diamond   latest   line  u.s. oil companies&lt;/span&gt;
&lt;span class="code-line"&gt;##  cut  contract,  posted, prices   last two days&lt;/span&gt;
&lt;span class="code-line"&gt;## citing weak oil markets.&lt;/span&gt;
&lt;span class="code-line"&gt;##  reuter&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;6. 去除标点&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;docs &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; tm_map&lt;span class="p"&gt;(&lt;/span&gt;docs&lt;span class="p"&gt;,&lt;/span&gt; removePunctuation&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;docs&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## diamond shamrock dia cuts crude prices&lt;/span&gt;
&lt;span class="code-line"&gt;## new york feb&lt;/span&gt;
&lt;span class="code-line"&gt;## diamond shamrock corp said&lt;/span&gt;
&lt;span class="code-line"&gt;## effective today   cut  contract prices  crude oil&lt;/span&gt;
&lt;span class="code-line"&gt;##  dlrs  barrel&lt;/span&gt;
&lt;span class="code-line"&gt;##      reduction brings  posted price  west texas&lt;/span&gt;
&lt;span class="code-line"&gt;## intermediate   dlrs  barrel  copany said&lt;/span&gt;
&lt;span class="code-line"&gt;##      price reduction today  made   light  falling&lt;/span&gt;
&lt;span class="code-line"&gt;## oil product prices   weak crude oil market  company&lt;/span&gt;
&lt;span class="code-line"&gt;## spokeswoman said&lt;/span&gt;
&lt;span class="code-line"&gt;##     diamond   latest   line  us oil companies&lt;/span&gt;
&lt;span class="code-line"&gt;##  cut  contract  posted prices   last two days&lt;/span&gt;
&lt;span class="code-line"&gt;## citing weak oil markets&lt;/span&gt;
&lt;span class="code-line"&gt;##  reuter&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;7. 去除多余的空格&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;docs &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; tm_map&lt;span class="p"&gt;(&lt;/span&gt;docs&lt;span class="p"&gt;,&lt;/span&gt; stripWhitespace&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;docs&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## diamond shamrock dia cuts crude prices&lt;/span&gt;
&lt;span class="code-line"&gt;## new york feb&lt;/span&gt;
&lt;span class="code-line"&gt;## diamond shamrock corp said effective today cut contract prices crude oil dlrs barrel reduction brings posted price west texas intermediate dlrs barrel copany said price reduction today made light falling oil product prices weak crude oil market company spokeswoman said diamond latest line us oil companies cut contract posted prices last two days citing weak oil markets reuter&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;8. Stemming(词干化)&lt;/h4&gt;
&lt;p&gt;首先介绍一下什么是Stemming，我们知道在英文中一个单词会存在很多形式，比如说复数形式、过去分词等等。但其实它们外表看起来虽不一样，但实际上是一样的。所以在处理分析的时候，就需要将这些单词都转换成其本身。在R中可以使用&lt;code&gt;SnowballC&lt;/code&gt;这个包来处理Stemming，举个例子：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;SnowballC&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## Loading required package: SnowballC&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;exam &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;prices, price, doing&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;stemDocument&lt;span class="p"&gt;(&lt;/span&gt;exam&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## [1] &amp;quot;prices, price, do&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;对于我们的例子：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;SnowballC&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;docs &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; tm_map&lt;span class="p"&gt;(&lt;/span&gt;docs&lt;span class="p"&gt;,&lt;/span&gt; stemDocument&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;docs&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## diamond shamrock dia cut crude price&lt;/span&gt;
&lt;span class="code-line"&gt;## new york feb&lt;/span&gt;
&lt;span class="code-line"&gt;## diamond shamrock corp said effect today cut contract price crude oil dlrs barrel reduct bring post price west texa intermedi dlrs barrel copani said price reduct today made light fall oil product price weak crude oil market compani spokeswoman said diamond latest line us oil compani cut contract post price last two day cite weak oil market reuter&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;4. 创建词条-文档关系矩阵&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;文本挖掘中，词条-文档关系矩阵是构建模型的基础，后续分析建模都是建立在这个矩阵之上的。首先来了解一下这个矩阵，举个例子：&lt;/p&gt;
&lt;p&gt;我们有两篇文档，内容分别为：text mining 和 data mining and text mining。 那么对应的矩阵为：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;d.Exam &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text mining&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;data mining and text mining&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;doc.Exam &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; Corpus&lt;span class="p"&gt;(&lt;/span&gt;VectorSource&lt;span class="p"&gt;(&lt;/span&gt;d.Exam&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;dtm.Exam &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; DocumentTermMatrix&lt;span class="p"&gt;(&lt;/span&gt;doc.Exam&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;inspect&lt;span class="p"&gt;(&lt;/span&gt;dtm.Exam&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## A document-term matrix (2 documents, 4 terms)&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## Non-/sparse entries: 6/2&lt;/span&gt;
&lt;span class="code-line"&gt;## Sparsity           : 25%&lt;/span&gt;
&lt;span class="code-line"&gt;## Maximal term length: 6&lt;/span&gt;
&lt;span class="code-line"&gt;## Weighting          : term frequency (tf)&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;##     Terms&lt;/span&gt;
&lt;span class="code-line"&gt;## Docs and data mining text&lt;/span&gt;
&lt;span class="code-line"&gt;##    1   0    0      1    1&lt;/span&gt;
&lt;span class="code-line"&gt;##    2   1    1      2    1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;可以看到，词条-文档关系矩阵其实就是将文档作为列，词条作为行，矩阵的每个位置就是对应的词条在对应的文档中出现的次数。&lt;/p&gt;
&lt;p&gt;对于我们的例子，可以这样来生产词条-文档矩阵：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;dtm &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; DocumentTermMatrix&lt;span class="p"&gt;(&lt;/span&gt;docs&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;inspect&lt;span class="p"&gt;(&lt;/span&gt;dtm&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## A document-term matrix (5 documents, 10 terms)&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## Non-/sparse entries: 1/49&lt;/span&gt;
&lt;span class="code-line"&gt;## Sparsity           : 98%&lt;/span&gt;
&lt;span class="code-line"&gt;## Maximal term length: 6&lt;/span&gt;
&lt;span class="code-line"&gt;## Weighting          : term frequency (tf)&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;##      Terms&lt;/span&gt;
&lt;span class="code-line"&gt;## Docs  abdul abil abl abroad abu accept accord across activ add&lt;/span&gt;
&lt;span class="code-line"&gt;##   127     0    0   0      0   0      0      0      0     0   0&lt;/span&gt;
&lt;span class="code-line"&gt;##   144     0    2   0      0   0      0      0      0     0   0&lt;/span&gt;
&lt;span class="code-line"&gt;##   191     0    0   0      0   0      0      0      0     0   0&lt;/span&gt;
&lt;span class="code-line"&gt;##   194     0    0   0      0   0      0      0      0     0   0&lt;/span&gt;
&lt;span class="code-line"&gt;##   211     0    0   0      0   0      0      0      0     0   0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;到这里，我们就已经生成了词条-文档矩阵。下一次，就来看看如何对这个矩阵进行一些操作，以及如何利用这个矩阵进行后续的建模分析。&lt;/p&gt;</content><category term="data science"></category><category term="r"></category><category term="machine learning"></category><category term="text mining"></category></entry><entry><title>R语言绘图4：R中的绘图系统</title><link href="//jacky-sj/r-plot-4.html" rel="alternate"></link><published>2014-06-08T15:48:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-06-08:/r-plot-4.html</id><summary type="html">&lt;p&gt;R 语言中绘图系统的简单介绍&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;前面三篇大致介绍了绘图的基础以及一些基础图形的绘制，其中重点使用R自带的基础绘图系统实现，部分也使用了&lt;code&gt;ggplot2&lt;/code&gt;做了简单地演示。其实，在R中存在四套绘图系统，分别是：&lt;strong&gt;基础绘图系统&lt;/strong&gt;(The Base Plotting System)、&lt;strong&gt;grid图形系统&lt;/strong&gt;、&lt;strong&gt;Lattice绘图系统&lt;/strong&gt;(The Lattice System)以及&lt;strong&gt;ggplot2绘图系统&lt;/strong&gt;(The ggplot2 System)。&lt;/p&gt;
&lt;p&gt;grid图形系统提供了一种比标准图形系统更低水平的方法，使用者可以在图形设备上随意创建矩形区域，然后再该区域定义坐标系统，其后使用绘图的基础单元来控制图形！由此可见，grid图形非常的灵活，但是grid包没有提供生成统计图形，甚至没有提供完整绘图的函数，所以，一般来说，我们不会直接使用grid。&lt;/p&gt;
&lt;p&gt;Lattice绘图系统是基于grid图形系统的，我们在使用Lattice的时候，其实就会使用grid，只是不会直接去调用而已。这一篇，就简单看看这三个绘图系统：基础绘图系统、Lattice绘图系统以及ggplot2绘图系统。&lt;/p&gt;
&lt;h3&gt;1. 基础绘图系统&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;基础绘图系统，即是R语言自带的绘图系统。R中核心的绘图系统主要基于以下两个包：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;graphics&lt;/strong&gt;包：此包包含了基础绘图系统的绘图函数，比如：&lt;code&gt;plot()&lt;/code&gt;，&lt;code&gt;hist()&lt;/code&gt;等等；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;grDevices&lt;/strong&gt;包：此包包含了各类型的图形设备(graphics devices)，包括：&lt;em&gt;X11&lt;/em&gt;, &lt;em&gt;PDF&lt;/em&gt;, &lt;em&gt;PNG&lt;/em&gt;等等。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;基础绘图系统总是从一幅空画布开始绘制图形，&lt;strong&gt;首先使用&lt;code&gt;plot()&lt;/code&gt;这样的函数在空画布上画出图形，然后使用注释函数对图形进行添加或者修改&lt;/strong&gt;，一般来说就是添加或者修改显示的文本、辅助线、辅助点以及标题等等。对于这样的一个流程，很显然，它可以很方便我们去使用，因为这样的流程可以完全将我们的思路反应出来。&lt;strong&gt;它就是通过一系列的R语言命令，一步一步地按照心中预想的绘图方式将其绘制出来&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;这样的绘图方式在给予我们方便的同时，也带来了一些弊端。首先，我们必须事先安排好图形应该如何绘制，因为一旦我们开始绘制就不能后退了；此外，当一副图形绘制完成，我们就不能再对其进行修改了，因为基础绘图系统没有绘图语言(graphical "language")（这个可以跟ggplot2进行一个比对，就能明白其中的意思了！）。&lt;/p&gt;
&lt;p&gt;基础绘图一般来说：&lt;strong&gt;就是使用一系列单独的函数调用，将图形的各个零散的部分组合起来&lt;/strong&gt;。这种方式比较简单，也比较切合自己的思路。正因为如此，我个人比较喜欢在分析问题的最开始，使用它进行一些简单地图形绘制，将其绘制到屏幕上，让我能够直观先去看看数据的基本状况。&lt;/p&gt;
&lt;p&gt;利用&lt;code&gt;mtcar&lt;/code&gt;数据集，做个示例：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## 取出感兴趣的数据&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;dataSet &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; mtcars&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;mpg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;disp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;carb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## 转换数据的格式&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;dataSet &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dataSet&lt;span class="p"&gt;,&lt;/span&gt; carb &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;factor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;carb&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## 绘图查看数据 散点图&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;plot&lt;span class="p"&gt;(&lt;/span&gt;dataSet&lt;span class="o"&gt;$&lt;/span&gt;mpg&lt;span class="p"&gt;,&lt;/span&gt; dataSet&lt;span class="o"&gt;$&lt;/span&gt;disp&lt;span class="p"&gt;,&lt;/span&gt; xlab &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;mpg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; ylab &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;disp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;title&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;The Scatter Plot&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;model &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; lm&lt;span class="p"&gt;(&lt;/span&gt;disp &lt;span class="o"&gt;~&lt;/span&gt; mpg&lt;span class="p"&gt;,&lt;/span&gt; data &lt;span class="o"&gt;=&lt;/span&gt; dataSet&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;abline&lt;span class="p"&gt;(&lt;/span&gt;model&lt;span class="p"&gt;,&lt;/span&gt; col &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk 4base" src="/images/article/a39/4base1.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## 加上条件&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dataSet&lt;span class="p"&gt;,&lt;/span&gt; plot&lt;span class="p"&gt;(&lt;/span&gt;mpg&lt;span class="p"&gt;,&lt;/span&gt; disp&lt;span class="p"&gt;,&lt;/span&gt; type &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kr"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;i &lt;span class="kr"&gt;in&lt;/span&gt; &lt;span class="kp"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dataSet&lt;span class="o"&gt;$&lt;/span&gt;carb&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="kp"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;subset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dataSet&lt;span class="p"&gt;,&lt;/span&gt; carb &lt;span class="o"&gt;==&lt;/span&gt; i&lt;span class="p"&gt;),&lt;/span&gt; points&lt;span class="p"&gt;(&lt;/span&gt;mpg&lt;span class="p"&gt;,&lt;/span&gt; disp&lt;span class="p"&gt;,&lt;/span&gt; col &lt;span class="o"&gt;=&lt;/span&gt; i&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## 对于carb == 4的数据，添加拟合直线&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;model1 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; lm&lt;span class="p"&gt;(&lt;/span&gt;disp &lt;span class="o"&gt;~&lt;/span&gt; mpg&lt;span class="p"&gt;,&lt;/span&gt; data &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;subset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dataSet&lt;span class="p"&gt;,&lt;/span&gt; carb &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;abline&lt;span class="p"&gt;(&lt;/span&gt;model1&lt;span class="p"&gt;,&lt;/span&gt; lty &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; lwd &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk 4base" src="/images/article/a39/4base2.png"&gt;&lt;/p&gt;
&lt;h3&gt;2. Lattice&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;Lattice一般会使用以下两个包：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;lattice&lt;/strong&gt;包：包含与基础绘图独立的，能够生成Trellis graphics的代码，包括&lt;code&gt;xyplot&lt;/code&gt;,&lt;code&gt;bwplot&lt;/code&gt;等等；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;grid&lt;/strong&gt;包：lattice包建立在此包之上，在使用中很少直接调用这个包。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Lattice与基础绘图系统的一个非常明显的区别在于：&lt;strong&gt;所有的绘图以及注释都在一次函数调用中完成&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;Lattice很擅长绘制需要分类的图形，比如说，想要根据不同的level，绘制y与x的散点图。这个在基础绘制系统中还是蛮麻烦的，但是在Lattice中就比较容易。也就是说，&lt;strong&gt;lattice通过一维、二维或三维的条件绘图(即是Trellis)，对多元变量关系进行直观展示&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;由于其所有的绘图与注释都需要在一次函数调用中完成，所以在使用之前就需要做好准备，因为一旦图形绘制好，就什么也不能添加了。&lt;/p&gt;
&lt;p&gt;接着上面的数据集做示例：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;xyplot&lt;span class="p"&gt;(&lt;/span&gt;disp &lt;span class="o"&gt;~&lt;/span&gt; mpg&lt;span class="p"&gt;,&lt;/span&gt; data &lt;span class="o"&gt;=&lt;/span&gt; dataSet&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk 4lattice" src="/images/article/a39/4lattice1.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;xyplot&lt;span class="p"&gt;(&lt;/span&gt;disp &lt;span class="o"&gt;~&lt;/span&gt; mpg &lt;span class="o"&gt;|&lt;/span&gt; carb&lt;span class="p"&gt;,&lt;/span&gt; data &lt;span class="o"&gt;=&lt;/span&gt; dataSet&lt;span class="p"&gt;,&lt;/span&gt; layout &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk 4lattice" src="/images/article/a39/4lattice2.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## 使用panel function&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;xyplot&lt;span class="p"&gt;(&lt;/span&gt;disp &lt;span class="o"&gt;~&lt;/span&gt; mpg &lt;span class="o"&gt;|&lt;/span&gt; carb&lt;span class="p"&gt;,&lt;/span&gt; data &lt;span class="o"&gt;=&lt;/span&gt; dataSet&lt;span class="p"&gt;,&lt;/span&gt; panel &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; y&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;...&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    panel.xyplot&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; y&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;...&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    panel.abline&lt;span class="p"&gt;(&lt;/span&gt;h &lt;span class="o"&gt;=&lt;/span&gt; median&lt;span class="p"&gt;(&lt;/span&gt;y&lt;span class="p"&gt;),&lt;/span&gt; lty &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; col &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;gray&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    panel.lmline&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; y&lt;span class="p"&gt;,&lt;/span&gt; col &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk 4lattice" src="/images/article/a39/4lattice3.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;更多有关Lattice的内容可以看Springer出的这本书：'Lattice: Multivariate Data Visualization with R'。&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;3. ggplot2&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;以前就说过，ggplot2是基于一种全面的图形语法，提供了一种全新的图形创建方法。能够自动处理位置、文本等等注释，也能够按照需求自定义设置。默认情况下有很多选项以供选择，在不设置时会直接使用默认值。&lt;/p&gt;
&lt;p&gt;在ggplot2中，最简单最基础的绘图函数就是&lt;code&gt;qplot()&lt;/code&gt;，我们可以来试试这个函数：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## 查看qplot函数&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;str&lt;span class="p"&gt;(&lt;/span&gt;qplot&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## function (x, y = NULL, ..., data, facets = NULL, margins = FALSE,&lt;/span&gt;
&lt;span class="code-line"&gt;##     geom = &amp;quot;auto&amp;quot;, stat = list(NULL), position = list(NULL), xlim = c(NA,&lt;/span&gt;
&lt;span class="code-line"&gt;##         NA), ylim = c(NA, NA), log = &amp;quot;&amp;quot;, main = NULL, xlab = deparse(substitute(x)),&lt;/span&gt;
&lt;span class="code-line"&gt;##     ylab = deparse(substitute(y)), asp = NA)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## 散点图&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;qplot&lt;span class="p"&gt;(&lt;/span&gt;mpg&lt;span class="p"&gt;,&lt;/span&gt; disp&lt;span class="p"&gt;,&lt;/span&gt; data &lt;span class="o"&gt;=&lt;/span&gt; dataSet&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk 4ggplot2" src="/images/article/a39/4ggplot21.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## 按carb区分 按颜色&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;qplot&lt;span class="p"&gt;(&lt;/span&gt;mpg&lt;span class="p"&gt;,&lt;/span&gt; disp&lt;span class="p"&gt;,&lt;/span&gt; data &lt;span class="o"&gt;=&lt;/span&gt; dataSet&lt;span class="p"&gt;,&lt;/span&gt; color &lt;span class="o"&gt;=&lt;/span&gt; carb&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk 4ggplot2" src="/images/article/a39/4ggplot22.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;### 按形状&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;qplot&lt;span class="p"&gt;(&lt;/span&gt;mpg&lt;span class="p"&gt;,&lt;/span&gt; disp&lt;span class="p"&gt;,&lt;/span&gt; data &lt;span class="o"&gt;=&lt;/span&gt; dataSet&lt;span class="p"&gt;,&lt;/span&gt; shape &lt;span class="o"&gt;=&lt;/span&gt; carb&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk 4ggplot2" src="/images/article/a39/4ggplot23.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## 添加拟合直线&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;qplot&lt;span class="p"&gt;(&lt;/span&gt;mpg&lt;span class="p"&gt;,&lt;/span&gt; disp&lt;span class="p"&gt;,&lt;/span&gt; data &lt;span class="o"&gt;=&lt;/span&gt; dataSet&lt;span class="p"&gt;,&lt;/span&gt; geom &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;point&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;smooth&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; method &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;lm&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk 4ggplot2" src="/images/article/a39/4ggplot24.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## 使用facets&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;qplot&lt;span class="p"&gt;(&lt;/span&gt;mpg&lt;span class="p"&gt;,&lt;/span&gt; disp&lt;span class="p"&gt;,&lt;/span&gt; data &lt;span class="o"&gt;=&lt;/span&gt; dataSet&lt;span class="p"&gt;,&lt;/span&gt; facets &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;.&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt; carb&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk 4ggplot2" src="/images/article/a39/4ggplot25.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;### 添加颜色和形状&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;qplot&lt;span class="p"&gt;(&lt;/span&gt;mpg&lt;span class="p"&gt;,&lt;/span&gt; disp&lt;span class="p"&gt;,&lt;/span&gt; data &lt;span class="o"&gt;=&lt;/span&gt; dataSet&lt;span class="p"&gt;,&lt;/span&gt; facets &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;.&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt; carb&lt;span class="p"&gt;,&lt;/span&gt; color &lt;span class="o"&gt;=&lt;/span&gt; carb&lt;span class="p"&gt;,&lt;/span&gt; shape &lt;span class="o"&gt;=&lt;/span&gt; carb&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk 4ggplot2" src="/images/article/a39/4ggplot26.png"&gt;&lt;/p&gt;
&lt;p&gt;当然，ggpplot2中不止这一点东西。&lt;strong&gt;更多有关ggplot2的内容可以参看Spinger出的这本书：「ggplot2:Elegant Graphics for Data Analysis」。&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;总结&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;一般来说，使用R绘制图形就是使用以上的三种绘图系统。基础的绘图系统跟人的思路相仿，你可以边思考边画图，边做边画，比较方便。Lattice擅长绘制Trellis图形，并且其所有的绘图注释都只能在一个函数中实现。ggplot2则是集中了前两者的元素，更加富有创造性，当然学习成本就稍微高一些。&lt;/p&gt;</content><category term="r"></category><category term="data science"></category></entry><entry><title>R语言绘图3：基础图形2</title><link href="//jacky-sj/r-plot-3-basic-graph-2.html" rel="alternate"></link><published>2014-06-04T16:53:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-06-04:/r-plot-3-basic-graph-2.html</id><summary type="html">&lt;p&gt;R 绘制基础图形 2&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;三、直方图&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;前面介绍的两种图形，一般都是用来处理离散数据的。那么对于连续数据，常用的图形就有这里所说的直方图。直方图在横轴上将数据值域划分成若干个组别，然后在纵轴上显示其频数。通过这种方式，可以将连续的点离散化，从而来描述连续型变量的分布。&lt;/p&gt;
&lt;p&gt;在R语言中，可以使用&lt;code&gt;hist()&lt;/code&gt;函数来绘制直方图：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## 构造数据&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;set.seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1234&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## 设置画布&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;par&lt;span class="p"&gt;(&lt;/span&gt;mfrow &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## 1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hist&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;box&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## 2 修改颜色，组数&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hist&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; breaks &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; col &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;gray&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;box&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## 3 添加核密度曲线&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hist&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; breaks &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; freq &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; col &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;gray&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;lines&lt;span class="p"&gt;(&lt;/span&gt;density&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;),&lt;/span&gt; col &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; lwd &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;box&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## 4 添加正态密度曲线&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;h &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; hist&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; breaks &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; col &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;gray&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;xfit &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="kp"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;),&lt;/span&gt; length &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;yfit &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; dnorm&lt;span class="p"&gt;(&lt;/span&gt;xfit&lt;span class="p"&gt;,&lt;/span&gt; mean &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;),&lt;/span&gt; sd &lt;span class="o"&gt;=&lt;/span&gt; sd&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;yfit &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; yfit &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="kp"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;h&lt;span class="o"&gt;$&lt;/span&gt;mids&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="kp"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;lines&lt;span class="p"&gt;(&lt;/span&gt;xfit&lt;span class="p"&gt;,&lt;/span&gt; yfit&lt;span class="p"&gt;,&lt;/span&gt; col &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; lwd &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;box&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk hist" src="/images/article/a38/hist.png"&gt;&lt;/p&gt;
&lt;p&gt;当然，可以使用&lt;code&gt;ggplot2&lt;/code&gt;包中的函数绘制直方图：&lt;/p&gt;
&lt;p&gt;先试试&lt;code&gt;qplot()&lt;/code&gt;函数：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;qplot&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; geom &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;histogram&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; binwidth &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; fill &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;..&lt;/span&gt;count..&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk hist_qplot" src="/images/article/a38/hist_qplot.png"&gt;&lt;/p&gt;
&lt;p&gt;再试试&lt;code&gt;ggplot()&lt;/code&gt;函数：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;dataSet &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;data.frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;h &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; ggplot&lt;span class="p"&gt;(&lt;/span&gt;data &lt;span class="o"&gt;=&lt;/span&gt; dataSet&lt;span class="p"&gt;,&lt;/span&gt; aes&lt;span class="p"&gt;(&lt;/span&gt;x &lt;span class="o"&gt;=&lt;/span&gt; x&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;h &lt;span class="o"&gt;+&lt;/span&gt; geom_histogram&lt;span class="p"&gt;(&lt;/span&gt;aes&lt;span class="p"&gt;(&lt;/span&gt;fill &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;..&lt;/span&gt;count..&lt;span class="p"&gt;),&lt;/span&gt; binwidth &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk hist_ggplot" src="/images/article/a38/hist_ggplot1.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## 添加核密度曲线&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;h &lt;span class="o"&gt;+&lt;/span&gt; geom_histogram&lt;span class="p"&gt;(&lt;/span&gt;aes&lt;span class="p"&gt;(&lt;/span&gt;y &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;..&lt;/span&gt;density..&lt;span class="p"&gt;,&lt;/span&gt; fill &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;..&lt;/span&gt;count..&lt;span class="p"&gt;),&lt;/span&gt; binwidth &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    geom_density&lt;span class="p"&gt;(&lt;/span&gt;color &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk hist_ggplot" src="/images/article/a38/hist_ggplot2.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## 添加正态密度曲线&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;dataSet2 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;data.frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;xfit&lt;span class="p"&gt;,&lt;/span&gt; yfit&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;h &lt;span class="o"&gt;+&lt;/span&gt; geom_histogram&lt;span class="p"&gt;(&lt;/span&gt;aes&lt;span class="p"&gt;(&lt;/span&gt;fill &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;..&lt;/span&gt;count..&lt;span class="p"&gt;),&lt;/span&gt; binwidth &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; geom_line&lt;span class="p"&gt;(&lt;/span&gt;data &lt;span class="o"&gt;=&lt;/span&gt; dataSet2&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    aes&lt;span class="p"&gt;(&lt;/span&gt;x &lt;span class="o"&gt;=&lt;/span&gt; xfit&lt;span class="p"&gt;,&lt;/span&gt; y &lt;span class="o"&gt;=&lt;/span&gt; yfit&lt;span class="p"&gt;),&lt;/span&gt; color &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk hist_ggplot" src="/images/article/a38/hist_ggplot3.png"&gt;&lt;/p&gt;
&lt;p&gt;直方图在统计中是非常重要的，我自己的感觉是：散点图用的最多最广泛，其次就是直方图！散点图之前已经说过，直方图的话，它可以直观地显示出样本数据大致的分布情况（经验分布函数），对选择什么样的分布、什么样的模型等等都有一定的作用。使用核函数以及正态密度曲线与之结合，能够更好地观察出样本数据的一些分布特征，所以，学会绘制直方图是十分重要的。&lt;/p&gt;
&lt;h3&gt;四、箱线图&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;还有一种常用的图形，就是&lt;strong&gt;箱线图&lt;/strong&gt;，也称&lt;strong&gt;盒须图&lt;/strong&gt;。它通过绘制连续型变量的五个分位数（最大最小值、25%和75%分位数以及中位数），描述变量的分布。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## 构造数据&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;x1 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; x&lt;/span&gt;
&lt;span class="code-line"&gt;x2 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;x3 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;all_x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x1&lt;span class="p"&gt;,&lt;/span&gt; x2&lt;span class="p"&gt;,&lt;/span&gt; x3&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;label &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;rep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; each &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;dataSet3 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;data.frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x &lt;span class="o"&gt;=&lt;/span&gt; all_x&lt;span class="p"&gt;,&lt;/span&gt; label &lt;span class="o"&gt;=&lt;/span&gt; label&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;下面开始绘制箱线图：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;boxplot&lt;span class="p"&gt;(&lt;/span&gt;dataSet3&lt;span class="o"&gt;$&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk boxplot" src="/images/article/a38/boxplot1.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## 考虑类别&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;boxplot&lt;span class="p"&gt;(&lt;/span&gt;x &lt;span class="o"&gt;~&lt;/span&gt; label&lt;span class="p"&gt;,&lt;/span&gt; data &lt;span class="o"&gt;=&lt;/span&gt; dataSet3&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk boxplot" src="/images/article/a38/boxplot2.png"&gt;&lt;/p&gt;</content><category term="r"></category><category term="data science"></category></entry><entry><title>R语言绘图2：基础图形1</title><link href="//jacky-sj/r-plot-2-basic-graph-1.html" rel="alternate"></link><published>2014-05-29T14:50:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-05-29:/r-plot-2-basic-graph-1.html</id><summary type="html">&lt;p&gt;R 绘制基础图形 1&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;一、 饼图&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;饼图，简单来说，就是将一个圆（或者圆饼）按分类变量分成几块，每一块所占的面积比例就是相对应的变量在总体中所占的比例。&lt;/p&gt;
&lt;p&gt;饼图在统计上，其实并不被看好。一般都会推荐使用条形图去代替，因为相比较面积，长度更能让人产生直观的判断。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## 构造一批数据&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;year &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;2001&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;2010&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;set.seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1234&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;counts &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## 绘图 在同一张画布上绘制4幅图，对于`par`的使用，可以`?par`&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;par&lt;span class="p"&gt;(&lt;/span&gt;mfrow &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;### 1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;pie&lt;span class="p"&gt;(&lt;/span&gt;counts&lt;span class="p"&gt;,&lt;/span&gt; labels &lt;span class="o"&gt;=&lt;/span&gt; year&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;### 2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;pie&lt;span class="p"&gt;(&lt;/span&gt;counts&lt;span class="p"&gt;,&lt;/span&gt; labels &lt;span class="o"&gt;=&lt;/span&gt; year&lt;span class="p"&gt;,&lt;/span&gt; col &lt;span class="o"&gt;=&lt;/span&gt; gray&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; length &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; clockwise &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;### 3&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;lb &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;paste&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;year&lt;span class="p"&gt;,&lt;/span&gt; counts&lt;span class="p"&gt;,&lt;/span&gt; sep &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;pie&lt;span class="p"&gt;(&lt;/span&gt;counts&lt;span class="p"&gt;,&lt;/span&gt; labels &lt;span class="o"&gt;=&lt;/span&gt; lb&lt;span class="p"&gt;,&lt;/span&gt; col &lt;span class="o"&gt;=&lt;/span&gt; rainbow&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;### 4&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;plotrix&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;pie3D&lt;span class="p"&gt;(&lt;/span&gt;counts&lt;span class="p"&gt;,&lt;/span&gt; labels &lt;span class="o"&gt;=&lt;/span&gt; year&lt;span class="p"&gt;,&lt;/span&gt; explode &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk 1" src="/images/article/a37/1.png"&gt;&lt;/p&gt;
&lt;h3&gt;二、 条形图&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;刚才我们就提到，很多时候，我们会使用条形图替代饼图。实际上，&lt;strong&gt;条形图就是通过垂直或者水平的条形去展示分类变量的频数&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;对于上面的数据，可以绘制：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;par&lt;span class="p"&gt;(&lt;/span&gt;mfrow &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;barplot&lt;span class="p"&gt;(&lt;/span&gt;counts&lt;span class="p"&gt;,&lt;/span&gt; names.arg &lt;span class="o"&gt;=&lt;/span&gt; year&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;barplot&lt;span class="p"&gt;(&lt;/span&gt;counts&lt;span class="p"&gt;,&lt;/span&gt; names.arg &lt;span class="o"&gt;=&lt;/span&gt; year&lt;span class="p"&gt;,&lt;/span&gt; horiz &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;barplot&lt;span class="p"&gt;(&lt;/span&gt;counts&lt;span class="p"&gt;,&lt;/span&gt; names.arg &lt;span class="o"&gt;=&lt;/span&gt; year&lt;span class="p"&gt;,&lt;/span&gt; col &lt;span class="o"&gt;=&lt;/span&gt; rainbow&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;barplot&lt;span class="p"&gt;(&lt;/span&gt;counts&lt;span class="p"&gt;,&lt;/span&gt; names.arg &lt;span class="o"&gt;=&lt;/span&gt; year&lt;span class="p"&gt;,&lt;/span&gt; col &lt;span class="o"&gt;=&lt;/span&gt; grey&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; length &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; horiz &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk 2" src="/images/article/a37/2.png"&gt;&lt;/p&gt;
&lt;p&gt;当每一年有两个变量指标时，可以绘制堆砌条形图和分组条形图：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## 构造新的数据&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;set.seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;4321&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;counts2 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;count &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;cbind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;c1 &lt;span class="o"&gt;=&lt;/span&gt; counts&lt;span class="p"&gt;,&lt;/span&gt; c2 &lt;span class="o"&gt;=&lt;/span&gt; counts2&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;rownames&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;count&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; year&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;##&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;par&lt;span class="p"&gt;(&lt;/span&gt;mfrow &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;barplot&lt;span class="p"&gt;(&lt;/span&gt;count&lt;span class="p"&gt;,&lt;/span&gt; col &lt;span class="o"&gt;=&lt;/span&gt; rainbow&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; legend &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;rownames&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;count&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk 3" src="/images/article/a37/31.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;barplot&lt;span class="p"&gt;(&lt;/span&gt;count&lt;span class="p"&gt;,&lt;/span&gt; col &lt;span class="o"&gt;=&lt;/span&gt; rainbow&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; besid &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; legend &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;rownames&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;count&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk 3" src="/images/article/a37/32.png"&gt;&lt;/p&gt;</content><category term="r"></category><category term="data science"></category></entry><entry><title>R语言绘图1：绘图基础</title><link href="//jacky-sj/r-plot-1.html" rel="alternate"></link><published>2014-05-24T14:48:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-05-24:/r-plot-1.html</id><summary type="html">&lt;p&gt;R 语言基础绘图模块&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;以数字和文字展示统计分析的结果，很多时候并不直观，也不能吸引人！而且，从数字和文字中寻找规律、异常等等的东西也并不容易。但是，对于图形来说，这些就容易解决得多了。&lt;/p&gt;
&lt;p&gt;图形的作用不言而喻，就不想多说了。R语言具有强大的绘图功能，这篇就从最基础的绘图工具讲起，谈谈如何在R中绘制各种各样的图形。&lt;/p&gt;
&lt;h4&gt;一、点&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;散点图，无论是在处理数据之前，还是在处理数据的过程中，它都显得非常的重要。在R语言中，绘制散点图非常简单，这就需要使用到函数&lt;strong&gt;&lt;code&gt;plot()&lt;/code&gt;&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;构造以下的数据以作演示使用：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kp"&gt;set.seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1234&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; replace &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;y &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; x &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;1. 首先绘制一个最简单的散点图：&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;plot&lt;span class="p"&gt;(&lt;/span&gt;x &lt;span class="o"&gt;=&lt;/span&gt; x&lt;span class="p"&gt;,&lt;/span&gt; y &lt;span class="o"&gt;=&lt;/span&gt; y&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;## 或者使用: plot(x, y)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk 2" src="/images/article/a36/2.png"&gt;&lt;/p&gt;
&lt;p&gt;其中，&lt;code&gt;x = x&lt;/code&gt;左侧的&lt;code&gt;x&lt;/code&gt;表示横坐标，右侧的是数据名，&lt;code&gt;y&lt;/code&gt;的相同。当然，左侧的&lt;code&gt;x&lt;/code&gt;和&lt;code&gt;y&lt;/code&gt;都是可以省略的。也可以使用&lt;code&gt;plot(&amp;lt;formula&amp;gt;)&lt;/code&gt;这样的形式去绘制散点图：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;plot&lt;span class="p"&gt;(&lt;/span&gt;y &lt;span class="o"&gt;~&lt;/span&gt; x&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk 3" src="/images/article/a36/3.png"&gt;&lt;/p&gt;
&lt;h5&gt;2. 添加标题和标签&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;plot&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; y&lt;span class="p"&gt;,&lt;/span&gt; xlab &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;name of x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; ylab &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;name of y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; main &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Scatter Plot&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk 4" src="/images/article/a36/4.png"&gt;&lt;/p&gt;
&lt;h5&gt;3. 设置坐标界限&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## 可先用以下函数查看x和y的取值范围 range(x) range(y)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;plot&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; y&lt;span class="p"&gt;,&lt;/span&gt; xlab &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;name of x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; ylab &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;name of y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; main &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Scatter Plot&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; xlim &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; ylim &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;250&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk 5" src="/images/article/a36/5.png"&gt;&lt;/p&gt;
&lt;h5&gt;4. 更改字符&lt;/h5&gt;
&lt;p&gt;默认情形下，绘图字符为空心点，可以使用&lt;code&gt;pch&lt;/code&gt;选项参数进行更改：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;plot&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; y&lt;span class="p"&gt;,&lt;/span&gt; xlab &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;name of x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; ylab &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;name of y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; main &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Scatter Plot&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; xlim &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; ylim &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;250&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; pch &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;19&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk 6" src="/images/article/a36/6.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pch&lt;/code&gt;的取值与其对应的图形字符，也可以使用&lt;code&gt;plot&lt;/code&gt;绘制：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;a &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;rep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; each &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;b &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;rep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;plot&lt;span class="p"&gt;(&lt;/span&gt;a&lt;span class="p"&gt;,&lt;/span&gt; b&lt;span class="p"&gt;,&lt;/span&gt; pch &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;25&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;text&lt;span class="p"&gt;(&lt;/span&gt;a&lt;span class="p"&gt;,&lt;/span&gt; b&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; pos &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk 7" src="/images/article/a36/7.png"&gt;&lt;/p&gt;
&lt;h5&gt;5. 更改颜色&lt;/h5&gt;
&lt;p&gt;默认情况下，R绘制的图像是黑白的。但其实，R中有若干和颜色相关的参数：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;plot&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; y&lt;span class="p"&gt;,&lt;/span&gt; main &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Plot&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; sub &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Scatter Plot&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; col &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; col.axis &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;green&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    col.lab &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; col.main &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;#999000&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; col.sub &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;#000999&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; fg &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;gray&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    bg &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;white&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk 8" src="/images/article/a36/8.png"&gt;&lt;/p&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;参数&lt;/th&gt;
&lt;th align="center"&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;col&lt;/td&gt;
&lt;td align="center"&gt;绘图字符的颜色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;col.axis&lt;/td&gt;
&lt;td align="center"&gt;坐标轴文字颜色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;col.lab&lt;/td&gt;
&lt;td align="center"&gt;坐标轴标签颜色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;col.main&lt;/td&gt;
&lt;td align="center"&gt;标题颜色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;col.sub&lt;/td&gt;
&lt;td align="center"&gt;副标题颜色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;fg&lt;/td&gt;
&lt;td align="center"&gt;前景色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;bg&lt;/td&gt;
&lt;td align="center"&gt;背景色&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5&gt;6. 更改尺寸&lt;/h5&gt;
&lt;p&gt;与颜色类似，存在若干参数可以用来设置图形中元素的尺寸，而且与上表中设置颜色的参数相对应，只需将&lt;code&gt;col&lt;/code&gt;更换成&lt;code&gt;cex&lt;/code&gt;即可：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;plot&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; y&lt;span class="p"&gt;,&lt;/span&gt; main &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Plot&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; sub &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Scatter Plot&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; cex &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; cex.axis &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; cex.lab &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    cex.main &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; cex.sub &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk 9" src="/images/article/a36/9.png"&gt;&lt;/p&gt;
&lt;h4&gt;二、线&lt;/h4&gt;
&lt;p&gt;有时候，我们不仅需要散点图，更需要折线图，比如在时间序列当中：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;t &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;50&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;set.seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1234&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;v &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;plot&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; v&lt;span class="p"&gt;,&lt;/span&gt; type &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;l&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk 10" src="/images/article/a36/10.png"&gt;&lt;/p&gt;
&lt;h5&gt;1. 更改线条类型&lt;/h5&gt;
&lt;p&gt;R中提供了很多类型的线条，可以通过&lt;code&gt;lty&lt;/code&gt;选项来设定，如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;a &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;plot&lt;span class="p"&gt;(&lt;/span&gt;a&lt;span class="p"&gt;,&lt;/span&gt; xlim &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; ylim &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; xlab &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; ylab &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;lty&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kr"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;i &lt;span class="kr"&gt;in&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    abline&lt;span class="p"&gt;(&lt;/span&gt;h &lt;span class="o"&gt;=&lt;/span&gt; i&lt;span class="p"&gt;,&lt;/span&gt; lty &lt;span class="o"&gt;=&lt;/span&gt; i&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk 11" src="/images/article/a36/11.png"&gt;&lt;/p&gt;
&lt;h5&gt;2. 更改颜色&lt;/h5&gt;
&lt;p&gt;与前面更改点的颜色方法相同！&lt;/p&gt;
&lt;h5&gt;3. 线条宽度&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;plot&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; v&lt;span class="p"&gt;,&lt;/span&gt; type &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;l&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; lwd &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk 12" src="/images/article/a36/12.png"&gt;&lt;/p&gt;
&lt;h5&gt;4. 点与线&lt;/h5&gt;
&lt;p&gt;有时候，我们还需要将点突出出来，此时需要利用&lt;code&gt;type&lt;/code&gt;选项：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;plot&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; v&lt;span class="p"&gt;,&lt;/span&gt; type &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk 13" src="/images/article/a36/13.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;type&lt;/code&gt;选项可以指定&lt;code&gt;plot()&lt;/code&gt;函数绘制的类型，可以使用&lt;code&gt;help(plot)&lt;/code&gt;查看。&lt;/p&gt;
&lt;h4&gt;三、散点图与平滑线&lt;/h4&gt;
&lt;p&gt;在做线性回归时，我们常常会在散点图中添加一条拟合直线以查看效果：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;model &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; lm&lt;span class="p"&gt;(&lt;/span&gt;y &lt;span class="o"&gt;~&lt;/span&gt; x&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;plot&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; y&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;abline&lt;span class="p"&gt;(&lt;/span&gt;model&lt;span class="p"&gt;,&lt;/span&gt; col &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk 14" src="/images/article/a36/14.png"&gt;&lt;/p&gt;
&lt;p&gt;有时候，我们需要在散点图上画一条拟合的平滑线，一般使用loess：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;plot&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; y&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;model_loess &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; loess&lt;span class="p"&gt;(&lt;/span&gt;y &lt;span class="o"&gt;~&lt;/span&gt; x&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;fit &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; fitted&lt;span class="p"&gt;(&lt;/span&gt;model_loess&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;ord &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;order&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;lines&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;[&lt;/span&gt;ord&lt;span class="p"&gt;],&lt;/span&gt; fit&lt;span class="p"&gt;[&lt;/span&gt;ord&lt;span class="p"&gt;],&lt;/span&gt; lwd &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; lty &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; col &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk 15" src="/images/article/a36/15.png"&gt;&lt;/p&gt;
&lt;p&gt;当然，在R语言中要实现上面的图形有很多简单地方法，这里介绍两个：&lt;/p&gt;
&lt;h5&gt;1. 使用&lt;code&gt;car&lt;/code&gt;包中的&lt;code&gt;scatterplot()&lt;/code&gt;函数&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;car&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;scatterplot&lt;span class="p"&gt;(&lt;/span&gt;y &lt;span class="o"&gt;~&lt;/span&gt; x&lt;span class="p"&gt;,&lt;/span&gt; spread &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; lty &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; lwd &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; smoother.args &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;lty &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    lwd &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; smoother &lt;span class="o"&gt;=&lt;/span&gt; loessLine&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk 16" src="/images/article/a36/16.png"&gt;&lt;/p&gt;
&lt;p&gt;其中，直线为线性拟合，虚线为loess曲线拟合，边界为箱线图！&lt;/p&gt;
&lt;p&gt;在函数中&lt;code&gt;smoother.args&lt;/code&gt;选项指定曲线拟合的参数；&lt;code&gt;smoother&lt;/code&gt;选项指定是否使用曲线拟合，以及用什么方法进行曲线拟合。当然，如果不需要曲线平滑拟合，那么可以将&lt;code&gt;smoother = FALSE&lt;/code&gt;。&lt;/p&gt;
&lt;h5&gt;2. 使用&lt;code&gt;ggplot2&lt;/code&gt;包&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;ggplot2&lt;/code&gt;是学习R语言制图的一座大山，它提供了一个基于全面而连贯的语法的绘图系统。功能非常强大，而且弥补了R中自带图形绘制的很多缺点。唯一的问题，学习&lt;code&gt;ggplot2&lt;/code&gt;的成本比较大，需要理解很多概念，也需要学习新的语法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果你是刚刚入门R语言，对于R语言基础的绘图工具还不是很熟的话，建议先跳过这一段，不要去弄懂其中的意思，试试效果就可以了！等对R语言基础绘图有了一定的了解之后，再来学习ggplot2，个人觉得会比较好一些！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;当然，如果你跟我一样喜欢折腾，不怕纠结，我不介意你一块学！不过，你遇到什么样的问题，那我就不保证了，反正我当时好长一段时间是蛮惨的！&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用这个包，实现的方法一般有两种，就是使用&lt;code&gt;qplot()&lt;/code&gt;函数和&lt;code&gt;ggplot()&lt;/code&gt;函数：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;qplot&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; y&lt;span class="p"&gt;,&lt;/span&gt; geom &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;point&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;smooth&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; method &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;lm&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; se &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; geom_smooth&lt;span class="p"&gt;(&lt;/span&gt;method &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;loess&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    color &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; se &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; lty &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk 17" src="/images/article/a36/17.png"&gt;&lt;/p&gt;
&lt;p&gt;或者：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;dataSet &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;data.frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x &lt;span class="o"&gt;=&lt;/span&gt; x&lt;span class="p"&gt;,&lt;/span&gt; y &lt;span class="o"&gt;=&lt;/span&gt; y&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;ggplot&lt;span class="p"&gt;(&lt;/span&gt;aes&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; y&lt;span class="p"&gt;),&lt;/span&gt; data &lt;span class="o"&gt;=&lt;/span&gt; dataSet&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; geom_point&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; geom_smooth&lt;span class="p"&gt;(&lt;/span&gt;method &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;lm&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    color &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;green&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; lty &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; se &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; geom_smooth&lt;span class="p"&gt;(&lt;/span&gt;method &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;loess&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; color &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    lty &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; se &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk 18" src="/images/article/a36/18.png"&gt;&lt;/p&gt;</content><category term="r"></category><category term="data science"></category></entry><entry><title>因子分析2</title><link href="//jacky-sj/factor-analysis-2.html" rel="alternate"></link><published>2014-05-19T15:00:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-05-19:/factor-analysis-2.html</id><summary type="html">&lt;p&gt;因子分析简介 2&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;这两天来了个同学，大家聚了聚，我也乘机休息了两天（好奢侈！）。这两天属于什么都没有写，就翻看了两本书。一本是二月河的&lt;a href="http://www.amazon.cn/gp/product/B0032K0X6Q/ref=olp_product_details?ie=UTF8&amp;amp;me=&amp;amp;seller="&gt;康熙大帝&lt;/a&gt;，另外一本是&lt;a href="http://www.ituring.com.cn/book/894"&gt;推荐系统实践&lt;/a&gt;，这本书的电子版，图灵正在打折，有兴趣可以买本看看。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;好了，不废话了，下面就接着上一篇讲的继续！上一篇简单介绍了因子分析的一些概念，以及最基础的因子模型：&lt;strong&gt;正交因子模型&lt;/strong&gt;。那么这一篇，就来说说正交因子模型的&lt;strong&gt;参数估计问题&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;对于一组p维样本，有n个观测值：&lt;span class="math"&gt;\(x_1, x_2, \dots, x_n\)&lt;/span&gt;，则其均值和协方差矩阵可以使用样本均值和样本协方差矩阵来估计：&lt;/p&gt;
&lt;div class="math"&gt;$$ \hat{\mu} = \overline{x} = \frac{1}{n} {\sum_{i=1}^{n} x_i} $$&lt;/div&gt;
&lt;div class="math"&gt;$$ \hat{\Sigma} = S = \frac{1}{n-1} {\sum_{i=1}^{n} (x_i-\overline{x})(x_i-\overline{x})'} $$&lt;/div&gt;
&lt;p&gt;在因子模型中，需要估计的有两个参数：&lt;strong&gt;因子载荷矩阵&lt;/strong&gt;&lt;span class="math"&gt;\(A=(a_{ij}:p \times m)\)&lt;/span&gt;以及&lt;strong&gt;特殊方差矩阵&lt;/strong&gt;&lt;span class="math"&gt;\(D = diag(\sigma_1^2, \sigma_2^2, \dots, \sigma_p^2)\)&lt;/span&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;1. 主成分法&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;主成分法的思想取自于主成分分析，即是取出前m个成分作为主成分，然后以此来得到因子载荷矩阵的估计；然后再以协方差阵和因子载荷矩阵为条件，直接推出特殊方差矩阵。具体如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;求出协方差矩阵&lt;span class="math"&gt;\(S\)&lt;/span&gt;的特征值：&lt;span class="math"&gt;\(\hat{\lambda}_1 \geqslant \hat{\lambda}_2 \geqslant \dots \geqslant \hat{\lambda}_p \geqslant 0\)&lt;/span&gt;，其对应的特征向量为：&lt;span class="math"&gt;\(\hat{t}_1, \hat{t}_2, \dots, \hat{t}_p\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;选一个较小因子数&lt;span class="math"&gt;\(m\)&lt;/span&gt;，并且使得前m项累计贡献率 &lt;span class="math"&gt;\(\frac{\sum_{i=1}^{m} \hat{\lambda}_i}{\sum_{i=1}^{p} \hat{\lambda}_i}\)&lt;/span&gt; 高于设定值。&lt;/li&gt;
&lt;li&gt;将协方差矩阵&lt;span class="math"&gt;\(S\)&lt;/span&gt;做这样的近似：&lt;span class="math"&gt;\(S = \sum_{i=1}^{m} \hat{\lambda}_i + \sum_{i=m+1}^{p} \hat{\lambda}_i \approx \sum_{i=1}^{m} \hat{\lambda}_i + \hat{D} := \hat{A}\hat{A}' + \hat{D}\)&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;其中，&lt;span class="math"&gt;\(A = (\sqrt{\hat{\lambda}_1}t_1, \sqrt{\hat{\lambda}_2}t_2, \dots, \sqrt{\hat{\lambda}_m}t_m)\)&lt;/span&gt;, &lt;span class="math"&gt;\(\hat{D} = diag(\hat{\sigma}_1^2, \hat{\sigma}_2^2, \dots, \hat{\sigma}_p^2)\)&lt;/span&gt;, &lt;span class="math"&gt;\(\hat{\sigma}_i^2 = s_{ii} - \sum_{j=1}^{m} \hat{a}_{ij}^2\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;从上述的过程来看，我们是使用了一种近似的方法估计出了&lt;span class="math"&gt;\(A\)&lt;/span&gt;和&lt;span class="math"&gt;\(D\)&lt;/span&gt;，那么这就有一个&lt;strong&gt;残差矩阵&lt;/strong&gt;&lt;span class="math"&gt;\(S - (\hat{A}\hat{A}' + \hat{D})\)&lt;/span&gt;，显然这个矩阵的对角线元素为0。既然是一种近似，那么，如果这个残差矩阵的非对角线元素都非常小的时候，我们就可以认为取&lt;span class="math"&gt;\(m\)&lt;/span&gt;个因子的模型就可以很好地解释或者是拟合原始的数据了。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;2. 主因子法&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;对于因子模型，我们先对原始向量进行标准化，则有：&lt;span class="math"&gt;\( R = AA' + D\)&lt;/span&gt;。取&lt;strong&gt;约相关矩阵&lt;/strong&gt;&lt;span class="math"&gt;\(R^* = R - D = AA'\)&lt;/span&gt;，假设特殊方差&lt;span class="math"&gt;\(\sigma_i^2\)&lt;/span&gt;的一个估计值&lt;span class="math"&gt;\(\hat{\sigma}^2\)&lt;/span&gt;为初始估计，则有约相关矩阵的估计值为：&lt;/p&gt;
&lt;p&gt;&lt;img alt="eq2_1" src="/images/article/a35/eq2_1.png"&gt;&lt;/p&gt;
&lt;p&gt;其中 &lt;span class="math"&gt;\(\hat{R}\)&lt;/span&gt; 为样本相关矩阵，&lt;span class="math"&gt;\( \hat{D} = diag(\hat{\sigma^2_1},\hat{\sigma_2^2}, \dots, \hat{\sigma_p^2})\)&lt;/span&gt;, &lt;span class="math"&gt;\(\hat{h_i^2} = 1 - \hat{\sigma_i^2}\)&lt;/span&gt; 为 &lt;span class="math"&gt;\(h_i^2\)&lt;/span&gt; 的初始估计。&lt;/p&gt;
&lt;p&gt;计算 &lt;span class="math"&gt;\(\hat{R}^*\)&lt;/span&gt; 的特征值，取足够小，但累计贡献率达到要求的m：&lt;span class="math"&gt;\(\hat{\lambda^*_1} \geqslant \hat{\lambda^*_2} \geqslant \dots \geqslant \hat{\lambda^*_m} &amp;gt; 0\)&lt;/span&gt;，其对应的特征向量为：&lt;span class="math"&gt;\(\hat{t^*_1}, \hat{t^*_2}, \dots, \hat{t^*_m}\)&lt;/span&gt;，则得到 &lt;span class="math"&gt;\(A\)&lt;/span&gt; 的估计值：&lt;/p&gt;
&lt;div class="math"&gt;$$ \hat{A} = (\sqrt{\hat{\lambda^*_1}}t^*_1, \sqrt{\hat{\lambda^*_2}}t^*_2, \dots, \sqrt{\hat{\lambda^*_m}}t^*_m ) $$&lt;/div&gt;
&lt;p&gt;那么 &lt;span class="math"&gt;\(\sigma^2_i\)&lt;/span&gt; 的最终估计为：&lt;span class="math"&gt;\( \hat{\sigma_i^2} = 1-\hat{h_i^2} = 1 - \sum_{j=1}^{m} \hat{a_{ij}^2}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;可以看到，这是一个可以迭代的过程，我们可以一直迭代，直到结果达到稳定为止！从过程来看，这里其实也是利用了主成分，因而，主因子法也是主成分法的一种修正！&lt;/p&gt;
&lt;p&gt;那么接下来的问题就是，这个特殊方差 &lt;span class="math"&gt;\(\sigma^2_i\)&lt;/span&gt; 的初始估计值应该如何取呢？最常用的取法：&lt;span class="math"&gt;\( \hat{\sigma_i^2} = 1/r^{ii}\)&lt;/span&gt;, 其中 &lt;span class="math"&gt;\( r^{ii}\)&lt;/span&gt; 为 &lt;span class="math"&gt;\(\hat{R}^{-1}\)&lt;/span&gt; 对角线元素的第 &lt;span class="math"&gt;\(i\)&lt;/span&gt; 个。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;3. 极大似然法&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;使用极大似然估计，那么就肯定需要使用样本的分布，这里我们假定公共因子 &lt;span class="math"&gt;\(f \sim N_m(0, I)\)&lt;/span&gt;，特殊因子 &lt;span class="math"&gt;\( \varepsilon \sim N_p(0, D)\)&lt;/span&gt;，并且相互独立！这里的假设其实就是来源于模型的正交性假设，只不过是将正交性假设进一步限定，假设它们都是属于多元正态分布！&lt;/p&gt;
&lt;p&gt;有了上述假设，通过模型就可以知道 &lt;span class="math"&gt;\(x \sim N_p(\mu, \Sigma)\)&lt;/span&gt;，有了这个就可以计算样本的似然函数了，这里涉及到较为复杂的矩阵计算，不想多说，有兴趣的话可以查找一些资料；或者学习一下线性模型中关于矩阵求导的知识，然后自己推导一下。&lt;/p&gt;
&lt;p&gt;一般情况下，极大似然法使用得并不太多，因为这个方法是算不出显式解的，在没有限制条件的情况下，解也并不唯一确定！但是如果是在因子分部可以明显知道的情况下，使用这个方法就比较好了！&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;总结&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;到这边，对于基础的因子模型就介绍结束了。回顾一下，主要就是介绍了正交因子模型以及它的参数估计问题。但是，到这里，我们还没有说到模型中的公共因子如何解释这个问题！对于这个问题的解释，通常结合实际的问题，需要一定的专业知识和经验，然后才能给每个公共因子给出一个实际意义。而且，公共因子的解释，在很大程度上也依赖于因子模型中因子载荷矩阵的元素结构！这个时候就会牵扯出因子分析中其它的一些问题：&lt;strong&gt;因子旋转&lt;/strong&gt;和&lt;strong&gt;因子得分&lt;/strong&gt;。因为这两个问题涉及到一些比较复杂的数学知识，我不能够在清减数学的情况下说好它，如果单说怎么用，我觉得没有必要，所以暂时并不打算介绍这两个问题。有兴趣的，可以翻阅一些多元统计的书籍，一般都会有讲。&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="data science"></category><category term="r"></category><category term="machine learning"></category></entry><entry><title>因子分析1</title><link href="//jacky-sj/factor-analysis-1.html" rel="alternate"></link><published>2014-05-14T16:05:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-05-14:/factor-analysis-1.html</id><summary type="html">&lt;p&gt;因子分析简介 1&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;updata:&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;感谢谢老大的提醒，让我发觉，在机器学习下放置因子分析并不合适。详细情况参见文章的回复板块。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;前一篇介绍的主成分分析(PCA)，是一种降维技术；这一篇介绍的因子分析也是一种降维的方法，不仅如此，还可以将因子分析看作是主成分分析的一种推广和发展。与之主成分分析相比较，因子分析更为灵活，对变量降维后的解释能够更加清楚。&lt;/p&gt;
&lt;p&gt;但因子分析和主成分分析有非常多的不同点。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;主成分分析不能作为一个模型来描述，主成分是观测变量的线性组合；&lt;/li&gt;
&lt;li&gt;因子分析需要构造因子模型，观测的原始变量是因子的线性组合。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h4&gt;初窥&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;在介绍因子模型之前，可以先看看这个因子分析到底是要干什么，以及是怎么干的！&lt;/p&gt;
&lt;p&gt;在二维空间中，主成分分析，它想做的是寻找一组新的变量 &lt;span class="math"&gt;\(y_1,y_2\)&lt;/span&gt;，用它去替代原来的变量 &lt;span class="math"&gt;\(x_1,x_2\)&lt;/span&gt;，并且满足 &lt;span class="math"&gt;\(y_1\)&lt;/span&gt; 和 &lt;span class="math"&gt;\(y_2\)&lt;/span&gt; 这两个变量都是 &lt;span class="math"&gt;\(x_1,x_2\)&lt;/span&gt; 两个变量的线性组合！即：&lt;/p&gt;
&lt;p&gt;&lt;img alt="eq1" src="/images/article/a34/eq1.jpg"&gt;&lt;/p&gt;
&lt;p&gt;而在因子模型中，我们需要做的跟此不同。我们需要找到一组潜在变量(不可观测)，用这组潜在变量的线性组合去表示原始变量 &lt;span class="math"&gt;\(x_1,x_2\)&lt;/span&gt;。这里假设有1个潜在变量 &lt;span class="math"&gt;\(f_1\)&lt;/span&gt;，那么因子模型可以描述成：&lt;/p&gt;
&lt;p&gt;&lt;img alt="eq2" src="/images/article/a34/eq2.png"&gt;&lt;/p&gt;
&lt;p&gt;其中，&lt;span class="math"&gt;\(f_1\)&lt;/span&gt; 就是因子，称为&lt;strong&gt;公共因子&lt;/strong&gt;；&lt;span class="math"&gt;\(a_{ij}\)&lt;/span&gt; 称之为变量 &lt;span class="math"&gt;\(x_i\)&lt;/span&gt; 在因子 &lt;span class="math"&gt;\(f_j\)&lt;/span&gt; 上的&lt;strong&gt;载荷&lt;/strong&gt;；&lt;span class="math"&gt;\(\mu_i\)&lt;/span&gt; 是 &lt;span class="math"&gt;\(x_i\)&lt;/span&gt; 的均值；&lt;span class="math"&gt;\(\varepsilon_i\)&lt;/span&gt; 为特殊因子，即不能被公共因子解释的部分。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;正交因子模型&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;首先看看最基础的因子模型，就是正交假设下的因子模型：&lt;/p&gt;
&lt;p&gt;&lt;img alt="eq3" src="/images/article/a34/eq3.png"&gt;&lt;/p&gt;
&lt;p&gt;在给出假定之前，我们先将上面式子转换成矩阵形式：&lt;/p&gt;
&lt;div class="math"&gt;$$ x = \mu + Af + \varepsilon $$&lt;/div&gt;
&lt;p&gt;其中，&lt;span class="math"&gt;\(x = (x_1, x_2, \dots, x_p)'\)&lt;/span&gt;，&lt;span class="math"&gt;\(\mu = (\mu_1, \mu_2, \dots, \mu_p)'\)&lt;/span&gt; 为均值向量，&lt;span class="math"&gt;\(\varepsilon = (\varepsilon_1, \varepsilon_2, \dots, \varepsilon_p)'\)&lt;/span&gt; 为特殊因子向量, &lt;span class="math"&gt;\(f = (f_1, f_2, \dots, f_p)'\)&lt;/span&gt; 为公共因子向量，$ A = (a_{ij}):p \times m $ 为载荷矩阵。那么我们就可以给出如下的正交假设：&lt;/p&gt;
&lt;p&gt;&lt;img alt="eq4" src="/images/article/a34/eq4.png"&gt;&lt;/p&gt;
&lt;p&gt;在这样的假定下，我们首先来计算一下，原始变量 &lt;span class="math"&gt;\(x\)&lt;/span&gt; 的协方差：&lt;/p&gt;
&lt;div class="math"&gt;$$ \Sigma = V(x) = V(Af+\varepsilon) = Cov(Af+\varepsilon,Af+\varepsilon) $$&lt;/div&gt;
&lt;p&gt;又：&lt;span class="math"&gt;\(Cov(Af+\varepsilon,Af+\varepsilon)=AV(f)A'+ACov(f,\varepsilon)+Cov(\varepsilon,f)A'+V(\varepsilon)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;由于 &lt;span class="math"&gt;\(V(f) = I, Cov(f, \varepsilon) = Cov(\varepsilon, f) = 0\)&lt;/span&gt;，所以：&lt;/p&gt;
&lt;div class="math"&gt;$$ \Sigma = AA' + V(\varepsilon) = AA' + D $$&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;显然，我们要处理正交因子模型，最重要的就是求解 &lt;span class="math"&gt;\(A,D\)&lt;/span&gt; 的估计值，那么这里就给出了这两个量与原始变量的协方差矩阵间的关系。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;那么我们开始所说的，因子分析也是一种降维手段体现在哪里呢？&lt;/strong&gt;这个就体现在，公共因子的数量上，当公共因子的数量少于原始变量的数量时，使用因子去解释原始变量就达到了一种降维的目的！&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;载荷矩阵&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;显然，载荷矩阵 &lt;span class="math"&gt;\(A\)&lt;/span&gt; 是我们关心的一个重点。首先，我们想弄明白 &lt;span class="math"&gt;\(A\)&lt;/span&gt; 中的元素 &lt;span class="math"&gt;\(a_{ij}\)&lt;/span&gt; 是否有什么具体的含义：&lt;/p&gt;
&lt;div class="math"&gt;$$Cov(x_i,f_j)=Cov(\sum_{k=1}^{m}a_{ik}f_k + \varepsilon_i, f_j) =a_{ij}Cov(f_j,f_j) = a_{ij} $$&lt;/div&gt;
&lt;p&gt;那么可以看到，&lt;span class="math"&gt;\(a_{ij}\)&lt;/span&gt; 是 &lt;span class="math"&gt;\(x_i\)&lt;/span&gt; 和 &lt;span class="math"&gt;\(f_j\)&lt;/span&gt; 之间的协方差函数。&lt;/p&gt;
&lt;p&gt;经过上面的计算，我们容易得到：&lt;/p&gt;
&lt;div class="math"&gt;$$V(x_i) = a_{i1}^2 + a_{i2}^2 + \dots + a_{1m}^2 + V(\varepsilon_i)$$&lt;/div&gt;
&lt;p&gt;记 &lt;span class="math"&gt;\(h_i^2 = \sum_{j=1}^{m}a_{ij}^2\)&lt;/span&gt;，那么上式可转化为：&lt;/p&gt;
&lt;div class="math"&gt;$$ (V(x_i) =) \sigma_{ii} = h_i^2 + \sigma_i^2, i=1,2,\dots,p$$&lt;/div&gt;
&lt;p&gt;这样就将 &lt;span class="math"&gt;\(x_i\)&lt;/span&gt; 的方差进行了一个分解，一部分由公共因子解释，即 &lt;span class="math"&gt;\(h_i^2\)&lt;/span&gt;，称为&lt;strong&gt;共性方差&lt;/strong&gt;；另一部分由特殊因子解释，即 &lt;span class="math"&gt;\(\sigma_i^2\)&lt;/span&gt;，称为&lt;strong&gt;特殊方差&lt;/strong&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;至此，因子分析的基础模型就介绍完了，下面剩下的就是如何去进行参数的估计，这一般有三种方法：主成分法、主因子法以及极大似然法。下一篇，我们就来详细说说因子分析的参数估计问题。&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="data science"></category><category term="r"></category><category term="machine learning"></category></entry><entry><title>数据科学之机器学习15: 主成分分析</title><link href="//jacky-sj/pca.html" rel="alternate"></link><published>2014-05-11T11:35:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-05-11:/pca.html</id><summary type="html">&lt;p&gt;PCA 简介&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;在之前&lt;a href="http://jackycode.github.io/blog/2014/04/02/linear-regression3/"&gt;线性回归3&lt;/a&gt;提到多重共线性问题，当时说了一些解决这个问题的办法，其中一种就是今天要说的&lt;strong&gt;主成分分析&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;主成分分析&lt;/strong&gt;，Principal Components Analysis，简称PCA，是变量选择的一种方法。其一般的目的就是：变量的降维和主成分的解释！当主成分用于聚类或者回归，这个时候就是在做变量的降维；而当用来分析变量，尤其是使用前两个主成分进行散点图的绘制时，此时就是在对变量利用主成分做出一些解释。在了解主成分分析的原理之后，相信对这两个目的就可以很容易直观的理解了！&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;一、原理初窥&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;在用数学公式和概率统计知识推导其原理之前，不妨先直观地看看主成分分析到底是要干嘛，以及大致是怎么干的！&lt;/p&gt;
&lt;p&gt;我们就用两个变量来说这个问题，变量分别记作 &lt;span class="math"&gt;\(x_1,x_2\)&lt;/span&gt;。那么，我们先画个散点图吧，也许它们的散点图是这个样子的：&lt;/p&gt;
&lt;p&gt;&lt;img alt="img1" src="/images/article/a33/images1.jpg"&gt;&lt;/p&gt;
&lt;p&gt;我们可以看到，这两个变量明显呈现一种线性关系，如果在做线性回归时，将这两个变量都用作自变量，然后对某一个因变量进行线性拟合，那必定会存在一些问题。那么主成分分析是要做什么呢？其实主成分分析就是要寻找变量 &lt;span class="math"&gt;\(y_1,y_2\)&lt;/span&gt; 去替代 &lt;span class="math"&gt;\(x_1,x_2\)&lt;/span&gt;，而且满足 &lt;span class="math"&gt;\(y_1,y_2\)&lt;/span&gt; 几乎不相关，同时 &lt;span class="math"&gt;\(y_1,y_2\)&lt;/span&gt; 能够保留 &lt;span class="math"&gt;\(x_1,x_2\)&lt;/span&gt; 所包含的信息。&lt;/p&gt;
&lt;p&gt;那么主成分分析是如何做的呢？这个时候就需要考虑旋转坐标轴，当我们像下图那样旋转过坐标轴之后，上面提出的要求就得到了实现。&lt;/p&gt;
&lt;p&gt;&lt;img alt="img2" src="/images/article/a33/images2.jpg"&gt;&lt;/p&gt;
&lt;p&gt;从这张图我们就可以看出，数据投影到 &lt;span class="math"&gt;\(y_1,y_2\)&lt;/span&gt; 两轴后，数据基本不相关，而且在 &lt;span class="math"&gt;\(y_1\)&lt;/span&gt; 轴就保留了原本数据的大部分信息，&lt;span class="math"&gt;\(y_2\)&lt;/span&gt; 保留了数据的另外一部分信息。由此可见，数据越是集中在 &lt;span class="math"&gt;\(y_1\)&lt;/span&gt; 轴两侧，数据映射到 &lt;span class="math"&gt;\(y_1\)&lt;/span&gt; 轴后保留的信息就越多，而 &lt;span class="math"&gt;\(y_2\)&lt;/span&gt; 就越少。当 &lt;span class="math"&gt;\(y_2\)&lt;/span&gt; 含有的信息非常少，少到接近于0时，那么此时就到达了变量选择的目的，因为此时只要保留 &lt;span class="math"&gt;\(y_1\)&lt;/span&gt; 就可以了。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;二、原理&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;我们将数据映射到 &lt;span class="math"&gt;\(y_1,y_2\)&lt;/span&gt; 轴，其实就是将原数据做个线性变换。利用上面的内容举个简单地例子就是：&lt;/p&gt;
&lt;p&gt;&lt;img align="center" src="/images/article/a33/eq1.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;其中的系数满足：&lt;span class="math"&gt;\(a_{11}^2 + a_{21}^2=1,a_{12}^2 + a_{22}^2=1\)&lt;/span&gt;。这样就可以成功地将数据投影到 &lt;span class="math"&gt;\(y_1,y_2\)&lt;/span&gt; 轴。这里我们考虑更一般的情况，考虑 &lt;span class="math"&gt;\(p\)&lt;/span&gt; 维的情况：&lt;/p&gt;
&lt;p&gt;&lt;img align="center" src="/images/article/a33/eq2.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;其中 &lt;span class="math"&gt;\(a_i=(a_{1i},a_{2i},\dots,a_{pi})', i=1,2,\dots,p\)&lt;/span&gt;，且满足 &lt;span class="math"&gt;\(a_i'a_1=1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;下面要考虑的就是，如何选择 &lt;span class="math"&gt;\(a_1\)&lt;/span&gt;，使得 &lt;span class="math"&gt;\(V(y_1)\)&lt;/span&gt; 到达最大，找到之后，&lt;span class="math"&gt;\(y_1\)&lt;/span&gt; 就是&lt;strong&gt;第一主成分&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;首先，&lt;span class="math"&gt;\(V(y_1)=a_1' \Sigma a_1\)&lt;/span&gt;，其中 &lt;span class="math"&gt;\(\Sigma=V(x)\)&lt;/span&gt; 为协方差矩阵。我们知道 &lt;span class="math"&gt;\(\Sigma\)&lt;/span&gt; 是非负定的，那么其所有的特征值必定都是大于等于0的，我们可以排个序：&lt;span class="math"&gt;\(\lambda _{ 1 }\geqslant \lambda _{ 2 }\geqslant \dots \geqslant \lambda_p \geqslant 0\)&lt;/span&gt;，其对应的特征向量记为：&lt;span class="math"&gt;\(t_1, t_2, \dots, t_p\)&lt;/span&gt;，显然这些特征向量是相互正交的。记 &lt;span class="math"&gt;\(T=(t_1, t_2, \dots, t_p)=(t_{ik}), \Lambda=diag(\lambda_1,\lambda_2,\dots,\lambda_p)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;那么根据谱分解就有：&lt;span class="math"&gt;\(\Sigma=T \Lambda T'=\sum_{i=1}^{p}\lambda_it_it_i'\)&lt;/span&gt;。那么带入到 &lt;span class="math"&gt;\(V(y_1)\)&lt;/span&gt; 中就有：&lt;/p&gt;
&lt;div class="math"&gt;$$V(y_1)=\sum_{i=1}^{p} \lambda_i a_1' t_it_i' a_1 = \sum_{i=1}^{p} \lambda_i(a_1't_i)^2$$&lt;/div&gt;
&lt;p&gt;由于特征值中 &lt;span class="math"&gt;\(\lambda_1\)&lt;/span&gt; 是最大的，那么就有：&lt;/p&gt;
&lt;div class="math"&gt;$$V(y_1) \leqslant \lambda_1 \sum_{i=1}^{p} (a_1't_i)^2 = \lambda_1 \sum_{i=1}^{p} {a_1't_it_i'a_1} = \lambda_1 a_1' TT'a_1 = \lambda_1$$&lt;/div&gt;
&lt;p&gt;可以看到最终的结果是：&lt;span class="math"&gt;\(V(y_1) \leqslant \lambda_1\)&lt;/span&gt;。那么什么时候取等号呢？取 &lt;span class="math"&gt;\(a_1 = t_1\)&lt;/span&gt;，则有：&lt;/p&gt;
&lt;div class="math"&gt;$$t_1'\Sigma t_1 = t_1' (\lambda_1t_1) = \lambda_1$$&lt;/div&gt;
&lt;p&gt;到止为止，就可以看到。当 &lt;span class="math"&gt;\(y_1=t_1'x\)&lt;/span&gt; 时就有其 &lt;span class="math"&gt;\(V(y_1)\)&lt;/span&gt; 达到最大，为 &lt;span class="math"&gt;\(\lambda_1\)&lt;/span&gt;。那么此时 &lt;span class="math"&gt;\(y_1=t_1'x\)&lt;/span&gt; 就是该数据第一主成分。&lt;/p&gt;
&lt;p&gt;同理可以求解第二主成分直至最后。&lt;strong&gt;但是，在求解第二第三主成分的时候，需要注意一个新的问题：主成分之间不相关，即 &lt;span class="math"&gt;\(Cov(y_i,y_k)=0,i \neq k\)&lt;/span&gt;&lt;/strong&gt;，如何证明非常简单，我就不说了，自己动动手吧。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;三、具体实例&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;我们使用R语言来做个小例子：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 构造一个数据集&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;set.seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;x1 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; mean&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; sd&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;x2 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;x1 &lt;span class="o"&gt;+&lt;/span&gt; rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; mean&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; sd&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;x3 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; x1&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; x2 &lt;span class="o"&gt;+&lt;/span&gt; rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; mean&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; sd&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;data.frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x1&lt;span class="o"&gt;=&lt;/span&gt;x1&lt;span class="p"&gt;,&lt;/span&gt; x2&lt;span class="o"&gt;=&lt;/span&gt;x2&lt;span class="p"&gt;,&lt;/span&gt; x3&lt;span class="o"&gt;=&lt;/span&gt;x3&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# 计算协方差矩阵&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;Sig &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; cov&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# 计算特征值和特征向量&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;eigen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;Sig&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;得到结果如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;values&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;2381.3724526&lt;/span&gt;    &lt;span class="m"&gt;0.3681085&lt;/span&gt;    &lt;span class="m"&gt;0.1165201&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;$&lt;/span&gt;vectors&lt;/span&gt;
&lt;span class="code-line"&gt;           &lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;       &lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;        &lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt; &lt;span class="m"&gt;-0.2982259&lt;/span&gt; &lt;span class="m"&gt;-0.4601189&lt;/span&gt;  &lt;span class="m"&gt;0.83627265&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt; &lt;span class="m"&gt;-0.6002191&lt;/span&gt; &lt;span class="m"&gt;-0.5908325&lt;/span&gt; &lt;span class="m"&gt;-0.53912331&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt; &lt;span class="m"&gt;-0.7421579&lt;/span&gt;  &lt;span class="m"&gt;0.6627273&lt;/span&gt;  &lt;span class="m"&gt;0.09997061&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;得到了特征值为：&lt;span class="math"&gt;\(\lambda_1=238.372, \lambda_2=0.368, \lambda_3=0.11652\)&lt;/span&gt;，可以看到第一主成分 &lt;span class="math"&gt;\(y_1=t_1'x=-0.298x_1-0.600x_2-0.742x_3\)&lt;/span&gt; 的特征值 &lt;span class="math"&gt;\(\lambda_1\)&lt;/span&gt; 的值远大于其余的(由于数据构造时就是以 &lt;span class="math"&gt;\(x_1\)&lt;/span&gt; 为底的)。说明第一主成分能够解释数据的大部分信息，那么如何衡量呢？&lt;/p&gt;
&lt;p&gt;这时候就需要使用到&lt;strong&gt;贡献率&lt;/strong&gt;这个概念，某一个主成分 &lt;span class="math"&gt;\(y_i\)&lt;/span&gt; 的贡献率定义为：&lt;span class="math"&gt;\(\frac{\lambda_i}{\sum_{i=1}^{p} \lambda_i}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;贡献率越大说明这个主成分能够解释数据的信息就越多，在具体的问题中，还常常用到一个概念，就是&lt;strong&gt;累积贡献率&lt;/strong&gt;。前 &lt;span class="math"&gt;\(k\)&lt;/span&gt; 个主成分的累计贡献率就是：&lt;span class="math"&gt;\(\frac{\sum_{i=1}^{k} \lambda_i}{\sum_{i=1}^{p} \lambda_i}\)&lt;/span&gt;。实际中，当前 &lt;span class="math"&gt;\(k\)&lt;/span&gt; 个主成分的累积贡献率达到某个临界值，比如 &lt;span class="math"&gt;\(80\%\)&lt;/span&gt;，就选择前 &lt;span class="math"&gt;\(k\)&lt;/span&gt; 个主成分进行下一步操作(比如说聚类，回归或者单纯地做分析等等)&lt;/p&gt;
&lt;h4&gt;四、基于相关矩阵&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;考虑这样两种情况：各个变量的单位不全相同，也就是数据的量纲不同；各变量之间的单位相同，但是变量的方差较大，也就是数值大小相差较大。那么这个时候，如果从协方差矩阵出发求解主成分，就显得不大合适了。&lt;/p&gt;
&lt;p&gt;在之前的文章中提到过，当所有的变量都进行了标准化之后，协方差矩阵 &lt;span class="math"&gt;\(\Sigma\)&lt;/span&gt; 就转换成了相关矩阵 &lt;span class="math"&gt;\(R\)&lt;/span&gt;！&lt;/p&gt;
&lt;p&gt;那么，剩下的求解过程就与上面相同了，这里不再叙述。需要指出的是，标准化与否，所得到的结果可能会有很大的不同，所以，判断一批数据是否需要标准化是很有必要的！&lt;/p&gt;
&lt;h4&gt;五、R语言实现&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;主成分分析的R语言实现比较简单，可以直接使用&lt;code&gt;eigen()&lt;/code&gt;函数求出特征值特征向量。当然也有自带的函数：&lt;code&gt;princomp()&lt;/code&gt;以及&lt;code&gt;psych&lt;/code&gt;包中的&lt;code&gt;principal()&lt;/code&gt;函数，可以自己查找一下帮助文档，这里就不做介绍了。&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="data science"></category><category term="r"></category><category term="machine learning"></category></entry><entry><title>数据科学相关的书籍推荐 - 2014年</title><link href="//jacky-sj/books-rec-1.html" rel="alternate"></link><published>2014-05-09T17:17:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-05-09:/books-rec-1.html</id><summary type="html">&lt;p&gt;数据科学相关的书籍推荐 - 2014年&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;大牛一条微博，我这冷清的小屋子倒是热闹了很多，在此谢谢&lt;a href="http://macshuo.com/"&gt;池建强&lt;/a&gt;池老大！不过说实话，一下多出这么多人气来，我的脑袋倒是有点不够用了。本来我就写写我学习的东西，新的我就边学边记，学过的就当复习！这回这么多人来光顾，我突然有点压力了。不过也好，压力也是动力，能够促使我好好学习好好努力，不懈怠！&lt;/p&gt;
&lt;p&gt;说说对于博客的一些安排吧！我本来的打算呢，就是利用写博客，将自己学过的一些东西进行查漏补缺，也是进行一遍系统的回顾！当然，写出来比自己看书复习要难得多，一开始写东西总是数学味道、学术感觉！很多文字改了又改，觉得别人能够看懂才发。当然了，有很多数学气息太浓的我就跳过没有写出来；也有很多写出来的，但我却没有能力将他转换成简单的语言！一句话，就是需要继续好好努力！&lt;/p&gt;
&lt;p&gt;对学习的东西进行一次系统的回顾，我大致是分了三个方向：统计模型、数据挖掘算法、数据可视化。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;统计模型的话，到现在为止应该就是介绍了线性回归和Logistic回归！以后会逐步添加一些模型，肯定是越来越复杂！&lt;/li&gt;
&lt;li&gt;算法的话，到现在为止介绍过分类算法：kNN, Decision Tree, Naive Bayes；聚类算法：KMeans；关联分析中的Apriori算法。初步打算是将一些基础的常见的算法都介绍一遍。&lt;/li&gt;
&lt;li&gt;数据可视化，这个方向的东西还没有具体写过。暂时还没有给这个专题安排具体写的内容，也还没有安排时间。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;好了，唠叨完我博客的事儿，来说说正事儿吧：&lt;strong&gt;书籍推荐&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;其实老早就像系统地理一遍我学过看过的一些书了，乘着今儿有空，就来理一理，也算是给别人一个不好不坏的教材！&lt;/p&gt;
&lt;p&gt;不管学什么，看书是少不了的。前贤的经验累积，系统的学习思路，完整地学习内容，这些都不是在博客或者论坛上看两篇文章，翻三篇帖子能够做到的。&lt;/p&gt;
&lt;p&gt;由于我是数学系出身(学校的统计专业是放在数学系下面的)，我自己对数学理论看得比较重，而且我也觉得应该看得重！很多统计模型，很多算法都是建立在复杂的概率统计理论上的，数学学的不好，我觉得想要学好数据科学是不太现实的！当然，如果你只想做个使用者，只需要知道如何点点点然后搞出结果来，那就另当别论！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;书单：&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h4&gt;(一). 理论方面&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.amazon.cn/gp/product/B005AOT9BC/ref=olp_product_details?ie=UTF8&amp;amp;me=&amp;amp;seller="&gt;数学分析&lt;/a&gt;(微积分)和&lt;a href="http://www.amazon.cn/gp/product/B004CLZJD6/ref=olp_product_details?ie=UTF8&amp;amp;me=&amp;amp;seller="&gt;高等代数&lt;/a&gt;(线性代数)&lt;/p&gt;
&lt;p&gt;数分高代是数学系的基础课，括号里面应该是非数学专业在本科时候学过的。总体上来说这两者讲的内容大致相同，只是数分高代会更看重理论方面的证明，会介绍更多理论方面的知识。如果学过微积分和线性代数，看看数分高代我觉得应该还不错，而且难度应该不是很大。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;概率论与数理统计&lt;/p&gt;
&lt;p&gt;这个就不用多说了吧，不看这个学什么数据分析啊！没有给出链接的原因是：我在网上找不到我以前用的那本，那本是甘肃教育出版社出的！找不到，我就推荐一本我觉得不错的好了：&lt;a href="http://www.amazon.cn/gp/product/B001FSJFQQ/ref=olp_product_details?ie=UTF8&amp;amp;me=&amp;amp;seller="&gt;概率统计&lt;/a&gt;，这本北京大学出版社出的，是我看过觉得写的很不错的，但是可能比一般的概率论与数理统计教材难一些！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.amazon.cn/gp/product/B001Q3LM2A/ref=olp_product_details?ie=UTF8&amp;amp;me=&amp;amp;seller="&gt;随机过程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个对于统计专业的人来说肯定不陌生，学这个时候应该还是痛苦过的吧！反正我是痛苦过~我给出的是北京大学出版社，何书元教授编写的一本本科教材。难度适中，但是我觉得讲的挺好挺全的！另外还有一本&lt;a href="http://www.amazon.cn/gp/product/B0046W8Q5O/ref=olp_product_details?ie=UTF8&amp;amp;me=&amp;amp;seller="&gt;随机过程导论&lt;/a&gt;，如果有能力就看英文的，写的蛮不错的！&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h5&gt;下面进化一下，进入更深层次的理论。这边我就不想多说什么，因为下面的东西，别说非数学系的觉得难，就是数学系的也觉得非常难！但是个人觉得还是很有用很重要的！当然，这部分可以选读，甚至是直接跳过，等用到了再来纠结(但还是建议看一看，那以后纠结的时候会轻松一点)！&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.amazon.cn/gp/product/B0019K922C/ref=olp_product_details?ie=UTF8&amp;amp;me=&amp;amp;seller="&gt;实变函数论&lt;/a&gt;和&lt;a href="http://www.amazon.cn/gp/product/B002AVJJEA/ref=olp_product_details?ie=UTF8&amp;amp;me=&amp;amp;seller="&gt;泛函分析&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;两个逆天的理论，讲的理论逆天，难度也是逆天的！怎么讲，数分进化了一波就算是实变了，实变再进化一波就是泛函了~建议需要用到比较深得微分积分方程的人重点看看，实变函数是指以实数作为自变量的函数，实变函数论就是以实变函数作为研究对象的数学理论，里面涉及到微分理论、积分理论、测度理论等等。泛函指的是函数的函数，泛函分析研究的就是实数域以及复数域上的完备赋范线性空间，也就是巴拿马空间！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.amazon.cn/gp/product/B00116JNH8/ref=olp_product_details?ie=UTF8&amp;amp;me=&amp;amp;seller="&gt;测度论与概率论基础&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我给出的链接是本科生的教材，讲的内容是比较简单的。如果想挑战一下，或者看完了这本不过瘾的，可以试试这本&lt;a href="http://www.amazon.cn/gp/product/B008BPWNJW/ref=olp_product_details?ie=UTF8&amp;amp;me=&amp;amp;seller="&gt;测度论讲义&lt;/a&gt;和&lt;a href="http://www.amazon.cn/gp/product/B002U57NJY/ref=olp_product_details?ie=UTF8&amp;amp;me=&amp;amp;seller="&gt;高等概率论&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.amazon.cn/gp/product/B0011CR4HS/ref=olp_product_details?ie=UTF8&amp;amp;me=&amp;amp;seller="&gt;参数统计教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;看完了概率论的进化版，就该看看数理统计的进化版了，俗称高等数理统计。我给出的是韦博成教授编写的教材，内容详实，理论丰富，不过排版上总让我感觉字密密麻麻的！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;随机过程&lt;/p&gt;
&lt;p&gt;晋级版的随机过程，说实话，我真不知道哪本书好，因为我当时看的是我老板的自己写的手稿。而且我觉得那份手稿写的非常全面非常好，没有再看过其它的书！真是，不知道该怎么推荐了！据说这本不错，但我也没看过，只能就贴这了：&lt;a href="http://www.amazon.cn/gp/product/B00186GHDY/ref=olp_product_details?ie=UTF8&amp;amp;me=&amp;amp;seller="&gt;随机过程论&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;(二). 概率统计方面&lt;/h4&gt;
&lt;p&gt;数学理论看完之后，就需要学习一下概率统计方面的知识了。这边也还有一个比较难的理论课程，那就是&lt;strong&gt;&lt;em&gt;极限理论&lt;/em&gt;&lt;/strong&gt;。不过，这个课程好像不是搞统计必备的，因为我这边的研究生同学们，统计方向的都没有学过这个。下面就罗列罗列一些有关统计方面的书籍吧：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.amazon.cn/gp/product/B005NGLIQQ/ref=olp_product_details?ie=UTF8&amp;amp;me=&amp;amp;seller="&gt;应用回归分析&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;当时我学的时候，这本书还是第2版，记得里面好像有些错漏，但是总体来讲书很不错，讲的很全很细致。给出的链接是第三版的，相信里面的一些小错漏肯定已经更正了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.amazon.cn/gp/product/B002PF2CD6/ref=olp_product_details?ie=UTF8&amp;amp;me=&amp;amp;seller="&gt;应用多元分析&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;好巧，当时学这本书的时候，它也是第2版，现在也更新的第三版了。这本书个人觉得不错，对学习SAS也挺有帮助的。当然王斌会教授编著的‘多元统计分析及R语言建模’，我觉得很不错，不过没能在亚马逊上找到。这本就是用R语言来讲的，不过理论方面可能较前一本就弱了！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.amazon.cn/gp/product/B0028QHKIY/ref=olp_product_details?ie=UTF8&amp;amp;me=&amp;amp;seller="&gt;时间序列分析&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我没有给出当时我们上课用的教材，因为我个人不喜欢那本教材，觉得讲的让我不能够很容易地接受。除了上面给出的那本，还有一本英文的很不错：‘Time Series Analysis With Applications in R’，这个有中文翻译的版本，但是强烈不推荐，因为翻译的太那什么了！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://product.dangdang.com/22800977.html#ddclick?act=click&amp;amp;pos=22800977_0_1_q&amp;amp;cat=&amp;amp;key=%B3%E9%D1%F9%BC%BC%CA%F5&amp;amp;qinfo=40_1_48&amp;amp;pinfo=&amp;amp;minfo=&amp;amp;ninfo=&amp;amp;custid=&amp;amp;permid=20140509150655657412097357383939675&amp;amp;ref=http%3A%2F%2Fwww.dangdang.com%2F&amp;amp;rcount=&amp;amp;type=&amp;amp;t=1399619232000"&gt;抽样技术&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;版本也从2升到了3，想想当年这个课，大部分都是打瞌睡过去的！想想本科没有好好学习就惭愧啊~~这本书介绍了很多常用的抽样方法，最后给出了一个实例，书编的还行。除了这本，我其实也没看过其它相关的书籍，所以就推荐这个吧！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://product.dangdang.com/20529065.html#ddclick?act=click&amp;amp;pos=20529065_0_1_q&amp;amp;cat=&amp;amp;key=%B7%C7%B2%CE%CA%FD%CD%B3%BC%C6&amp;amp;qinfo=31_1_48&amp;amp;pinfo=&amp;amp;minfo=&amp;amp;ninfo=&amp;amp;custid=&amp;amp;permid=20140509150655657412097357383939675&amp;amp;ref=http%3A%2F%2Fsearch.dangdang.com%2F%3Fkey%3D%25B3%25E9%25D1%25F9%25BC%25BC%25CA%25F5&amp;amp;rcount=&amp;amp;type=&amp;amp;t=1399620077000"&gt;非参数统计&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这本书是我读研之后才开始看的，本科的时候学校没教，我就没学，真是罪过罪过！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.amazon.cn/gp/product/B0046A8EB2/ref=olp_product_details?ie=UTF8&amp;amp;me=&amp;amp;seller="&gt;最优化方法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;把它放在这边是因为：很多问题求解的时候会用到它！如何有时间，也应该看看&lt;a href="http://www.amazon.cn/gp/product/B0011F2ZPQ/ref=olp_product_details?ie=UTF8&amp;amp;me=&amp;amp;seller="&gt;数值分析&lt;/a&gt;，对很多统计问题的求解会有帮助。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;到这边的话，基本上统计方面的基础理论就有了。当然如果你是统计专业的学生肯定不会只学这些，记得本科的时候还学过西方经济学、保险学原理、会计学原理等等等等。当然，我这边只介绍概率统计的理论书籍，&lt;/p&gt;
&lt;h4&gt;(三). 统计软件及其它&lt;/h4&gt;
&lt;p&gt;本科学校着重介绍了两种统计软件，SAS和SPSS。但是我在我大三尝试过R语言的滋味后，我把SPSS打入了冷宫！随着我大四将电脑换成Mac，SAS也成为了过去时！怎么说呢，SAS功能强大无可否认，但是对我这种喜欢各种折腾的人来说，SAS明显不够啊！R不同，我想怎么玩儿就可以怎么玩，只要我愿意，我可以让它帮我关机，我也曾经用它写过情书给我女朋友，这个SAS只怕是难以胜任的。不过这不能说孰优孰劣，只能说合适。SAS商用肯定会比R有优势，它稳定安全，功能强大，可以帮助企业做很多事情。对于企业而言，R语言就略显自由了一点。不过SAS跟R比做数据方面的研究，那就明显不如了。&lt;/p&gt;
&lt;p&gt;不说那么多了，SAS这货都木有Mac版本，暂时我是不会再去用它了(浪费了我无数个日夜在那边研究SAS啊。。。)！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;先说SAS&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.amazon.cn/gp/product/B0057DJULK/ref=olp_product_details?ie=UTF8&amp;amp;me=&amp;amp;seller="&gt;SAS应用统计分析&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;当时本科时候用的SAS基础教程，现在来看，版本就显得老了点。这本书用SAS去处理统计分析问题，讲的全面到位。而且，这本书的后半部分介绍了很详细的SAS编程技术，当做入门再好不过了。当然，如果想学好SAS，我还是建议去官网找帮助文档，多如牛毛啊那是！你要什么专题的都有，唯一的问题就是，全是英文！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://product.dangdang.com/20933928.html#ddclick?act=click&amp;amp;pos=20933928_7_0_q&amp;amp;cat=&amp;amp;key=%CD%B3%BC%C6%C8%ED%BC%FE%D3%A6%D3%C3%BD%CC%B3%CC&amp;amp;qinfo=41_1_48&amp;amp;pinfo=&amp;amp;minfo=&amp;amp;ninfo=&amp;amp;custid=&amp;amp;permid=20140509150655657412097357383939675&amp;amp;ref=http%3A%2F%2Fwww.dangdang.com%2F&amp;amp;rcount=&amp;amp;type=&amp;amp;t=1399621982000"&gt;SAS9.1统计软件应用教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这本比之上面那本就薄很多啦，这本书对SAS编程介绍得很少，基本属于单刀直入各类统计问题。其中的问题又以医学数据为主，看看其实也蛮不错的！不过还是强烈建议上面那一本！&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;说完SAS，说说R吧&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.amazon.cn/gp/product/144931208X/ref=olp_product_details?ie=UTF8&amp;amp;me=&amp;amp;seller="&gt;R in a Nutshell&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我想说这是我看过最全面的一本R语言书籍，包括R语言基础、R语言编程、R语言的数据操作、R语言的数据可视化方法、R语言中的统计学应用以及R语言程序优化方法、生物统计，甚至介绍了R语言和Hadoop的结合使用。在这本书的附录中，还介绍了很多R语言的程序包，这是我看过的R语言书籍中比较满意以及喜欢的一本。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.amazon.cn/gp/product/B00ASOR6QY/ref=olp_product_details?ie=UTF8&amp;amp;me=&amp;amp;seller="&gt;R in Action&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这是另外一本我比较喜欢的R语言书籍，这本书在介绍了最基础的R语言操作和图形知识之后，循序渐进地，紧贴统计学理论介绍R语言的编程和图形绘制！看完这本书，R语言编程、R语言绘图以及很多基础的统计模型就都得到了学习巩固！这本书的中文版，我觉得翻译地很不错，对英文无爱的可以看中文版！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.amazon.cn/gp/product/1449357105/ref=olp_product_details?ie=UTF8&amp;amp;me=&amp;amp;seller="&gt;Learning R&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这本书侧重于R语言编程，书分为两个部分，前一部分介绍R语言的各个细节；后一部分介绍使用R进行数据分析的流程。这本书看完，R语言编程能力好不好，那就是看你练得多不多了，因为该教你的都已经教你了！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.amazon.cn/gp/product/0387759352/ref=olp_product_details?ie=UTF8&amp;amp;me=&amp;amp;seller="&gt;Software for Data Analysis: Programming with R&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;说R语言编程好像不能漏了这本书，因为这本书从理论基础上介绍了R语言的一切，除了说一句里面的英文很难懂之外，我不想做任何其它介绍，因为我觉得我不够资格！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.amazon.cn/gp/product/B00COIRE6Y/ref=olp_product_details?ie=UTF8&amp;amp;me=&amp;amp;seller="&gt;ggplot2:数据分析与图形艺术&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个应该不用多说什么，这是R语言的一座大山，爬上去之后，使用R语言绘图就从普通走向了文艺，从平凡走向了高雅！！！中文版除了插图黑白之外，其它都还不错！&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;(四). 其它一些我看过以及看着的书&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.amazon.cn/gp/product/1617290181/ref=olp_product_details?ie=UTF8&amp;amp;me=&amp;amp;seller="&gt;Machine Learning in Action&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;作者使用最简单语言，易懂的流程一步一步介绍了机器学习中的很多方法。书中使用Python作为实现的编程语言，也让我见识到为什么那么多人喜欢Python！后来，我的世界里面多了一个Python！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.amazon.cn/gp/product/B009O65XPS/ref=olp_product_details?ie=UTF8&amp;amp;me=&amp;amp;seller="&gt;鲜活的数据：数据可视化指南&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这是一本在读的书，作者在书中使用各种各样的方式实现数据可视化，当你看到作者绘制出来的图时，我相信你会跟我一样，买下这本书去学习！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.amazon.cn/Pro-Data-Visualization-Using-R-and-JavaScript-Barker-Tom/dp/1430258063/ref=sr_1_1?s=books&amp;amp;ie=UTF8&amp;amp;qid=1399624364&amp;amp;sr=1-1&amp;amp;keywords=Pro+Data+Visualization+Using+R+and+JavaScript"&gt;Pro Data Visualization Using R and JavaScript&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这本书才看了其中介绍空间数据可视化的一章，觉得还是蛮不错的！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.amazon.cn/gp/product/1107422221/ref=olp_product_details?ie=UTF8&amp;amp;me=&amp;amp;seller="&gt;Machine Learning: The Art and Science of Algorithms That Make Sense of Data&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Machine Learning的理论内容应有尽有，讲解详尽，我表示很喜欢！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;书很多，一本一本往下看也看不完，关键是：你看了之后学了多少！&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;介绍到这我也有点累了，最后，我想说，看书是必要的，但是学习的时候别忘了还有Google这个好工具。很多时候，一本书上不会将一个问题讲得特别深入透彻，那你就需要去查找一些资料，找一些别人做的研究出来看看！另外，学习R语言的时候，别忘了R语言那强大的帮助系统，而且很多Package都是带有PDF格式的介绍文档，也有很多自带演示！记住三个函数：&lt;code&gt;?&lt;/code&gt;,&lt;code&gt;demo()&lt;/code&gt;,&lt;code&gt;vignette()&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;除了上述所说的，网上其实也有很多优秀的网站，比如&lt;a href="http://cos.name/"&gt;统计之都&lt;/a&gt;,&lt;a href="http://scikit-learn.org/stable/"&gt;scikit-learn&lt;/a&gt;,&lt;a href="http://www.r-bloggers.com/"&gt;R-bloggers&lt;/a&gt;,&lt;a href="http://flowingdata.com/"&gt;FlowingData&lt;/a&gt;,&lt;a href="http://www.datatau.com/?utm_campaign=Manong_Weekly_Issue_14&amp;amp;utm_medium=EDM&amp;amp;utm_source=Manong_Weekly"&gt;DataTau&lt;/a&gt;,&lt;a href="http://www.statmethods.net/"&gt;Quik-R&lt;/a&gt;等等，当然，别忘了R语言的&lt;a href="http://www.r-project.org/"&gt;官网&lt;/a&gt;,上面的材料非常的多！&lt;/p&gt;</content><category term="record"></category><category term="books"></category></entry><entry><title>数据科学之机器学习14: 关联分析之apriori算法</title><link href="//jacky-sj/association-analysis-apriori.html" rel="alternate"></link><published>2014-05-07T17:00:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-05-07:/association-analysis-apriori.html</id><summary type="html">&lt;p&gt;Apriori 算法&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;在上一篇中，我们介绍了关联分析相关的概念，这一节来看看如何使用Apriori算法去寻找满足条件的项集。&lt;/p&gt;
&lt;p&gt;首先回顾一个概念，&lt;strong&gt;一个项集的支持度&lt;/strong&gt;就是数据集中该项集所占的比例。Apriori算法就是用于寻找数据集中，支持度和可信度超过某一给定值的项集和关联规则。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;一、原理&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;在介绍算法之前，首先了解一个集合论中的性质定理：集合的向下封闭性。&lt;/p&gt;
&lt;p&gt;我们通过一个例子来看看这个定理，见下图：&lt;/p&gt;
&lt;p&gt;&lt;img alt="apriori1" src="/images/article/31-apriori/apriori_1.jpg"&gt;&lt;/p&gt;
&lt;p&gt;集合的向下封闭性，在这边解释的话，也就是说，&lt;strong&gt;如果一个项集的支持度低于某一个值，那么该项集超集的支持度也必定低于这个值。如果一个项集的支持度高于某一个值，那么该项集子集的支持度也必定高于某一个值。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;超集&lt;/strong&gt;：就是指包含这个集合中所以元素的集合（不包括自身），比如集合ABC就是集合AB的超集。&lt;/p&gt;
&lt;p&gt;那么这个定理放在上一个图当中，就有这样的含义：&lt;/p&gt;
&lt;p&gt;&lt;img alt="apriori2" src="/images/article/31-apriori/apriori_2.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;二、算法构成&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;有了上面这个原理，那么就可以利用这个原理去减少我们寻找频繁集的计算量。因为，只要我们找到一个项集，其支持度低于给定的值，那么这个项集的所有超集就可以直接忽略不计了。如上图，项集A的支持度低于指定的值，那么其超集就都不用再考虑了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Apriori算法由两部分构成：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;找到满足最小支持度的项集；&lt;/li&gt;
&lt;li&gt;找到可信度超过最小可信度的关联规则。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下面，我们一个一个地解决：&lt;/p&gt;
&lt;hr&gt;
&lt;h5&gt;2.1. 寻找频繁项集&lt;/h5&gt;
&lt;hr&gt;
&lt;p&gt;利用上面所讲的原理，我们来整理一下这个步骤的流程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;从数据集中构造集合C1，C1满足：大小为1的所有候选项集的集合，例如上图中的：C1 = {A, B, C};&lt;/li&gt;
&lt;li&gt;计算C1中所有项集（单元素项集）是否满足最小支持度，满足的项集构成集合L1，例如上图中的：L1 = {B, C};&lt;/li&gt;
&lt;li&gt;利用L1生成新的候选项集C2，C2满足：大小为2的所有候选项集的集合，例如上图中得：C2 = {BC};&lt;/li&gt;
&lt;li&gt;计算C2中所有项集（双元素项集）是否满足最小支持度，满足的项集构成集合L2；&lt;/li&gt;
&lt;li&gt;重复直到Lk中得元素个数为1。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h5&gt;2.2. 寻找关联规则&lt;/h5&gt;
&lt;hr&gt;
&lt;p&gt;在得到频繁项集之后，要寻找关联规则就容易多了。可以直接从频繁项集中构造初始的关联规则，计算该关联规则的可信度，然后与给定的最小可信度作比较，若值大于最小可信度，则记录该关联规则。&lt;/p&gt;
&lt;p&gt;在实际编程时，需要注意使用&lt;strong&gt;集合的向下封闭性&lt;/strong&gt;！！！想想看，在关联规则中，这个性质应该怎样去实现？(可以到Machine Learning in Action中找答案！)&lt;/p&gt;
&lt;h4&gt;三、R语言实现&lt;/h4&gt;
&lt;h5&gt;1. 使用自带的程序&lt;/h5&gt;
&lt;p&gt;在R语言的&lt;code&gt;arules&lt;/code&gt;这个包里面，提供了一个实现Apriori算法的函数：&lt;code&gt;apriori()&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 构造数据集&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;dataSet &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;rownames&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dataSet&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;paste&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;item&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; sep&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;colnames&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dataSet&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;A&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;B&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;C&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;dataSet&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;dataSet&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;dataSet&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;dataSet&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;dataSet&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;dataSet&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# 转换数据格式(可以?apriori查看数据格式)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;dataSet_class &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; as&lt;span class="p"&gt;(&lt;/span&gt;dataSet&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;transactions&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# 构造频繁项集&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;rules&lt;span class="o"&gt;&amp;lt;-&lt;/span&gt;apriori&lt;span class="p"&gt;(&lt;/span&gt;dataSet_class&lt;span class="p"&gt;,&lt;/span&gt;parameter&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;supp&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;conf&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0.6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;target&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;rules&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# 查看结果&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;rules&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# 构造关联规则&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;inspect&lt;span class="p"&gt;(&lt;/span&gt;rules&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;2. 自定义函数解决&lt;/h5&gt;
&lt;p&gt;相对而言，Apriori算法的函数比较难以编写，原因可想而知，肯定是因为数据结构的问题！但是也只是比其他函数难编一点，毕竟其自带的数据结构功能还是非常强大的。我在&lt;a href="https://github.com/JackyCode/Data_Science"&gt;我的项目&lt;/a&gt;中给出的一种编写方式，是利用R语言的list来实现的。不过，我想，利用Matrix或者data.frame，当然如果你还懂&lt;code&gt;data.table&lt;/code&gt;的话，那么肯定也是可以编写的，而且我想应该会比用list简单！(没有亲手编写，只是猜想！)&lt;/p&gt;
&lt;p&gt;详见&lt;a href="https://github.com/JackyCode/Data_Science"&gt;我的项目&lt;/a&gt;&lt;/p&gt;</content><category term="data science"></category><category term="r"></category><category term="machine learning"></category><category term="association analysis"></category></entry><entry><title>R语言记录8：Loop Functions</title><link href="//jacky-sj/r-series-8.html" rel="alternate"></link><published>2014-05-04T14:56:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-05-04:/r-series-8.html</id><summary type="html">&lt;p&gt;R 语言编程 8 - Loop Functions&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;循环对于编程的重要性不言而喻，但是大量的使用&lt;code&gt;for&lt;/code&gt;语句、&lt;code&gt;while&lt;/code&gt;语句在R语言这种交互式命令行上，其实并不和谐。而且，很多时候，我们希望使用更短更少的代码去完成一个事情。这就需要用到R语言中自带的一些函数，使用这些函数可以把循环变得容易表述。不过，这当然是有学习成本的，要想掌握得多尝试多思考。&lt;/p&gt;
&lt;p&gt;在RSeries系列中，我之前也介绍过&lt;code&gt;tapply&lt;/code&gt;这样的Loop function，但是并没有很全面地去说这个问题。没有介绍这块内容呢，总觉得对于R语言编程来说缺少了点什么，今天就来详细地说说R语言中的Loop Functions。&lt;/p&gt;
&lt;p&gt;在R语言中，处理循环的函数常用的大致有这么几个：&lt;code&gt;lapply&lt;/code&gt;, &lt;code&gt;sapply&lt;/code&gt;, &lt;code&gt;apply&lt;/code&gt;, &lt;code&gt;tapply&lt;/code&gt;, &lt;code&gt;mapply&lt;/code&gt;。每一个函数都有其自身的特性与用途，下面我们来一个一个地说。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;1. &lt;code&gt;lapply&lt;/code&gt;函数&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;&lt;code&gt;lapply&lt;/code&gt;函数：&lt;strong&gt;对list的每一个元素(list[[i]])执行指定的函数操作，其返回值总是一个列表&lt;/strong&gt;。举个简单地例子，比如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;lapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## [[1]]&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] 2.5&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## [[2]]&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] 3.5&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## [[3]]&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] 12&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;也就是对列表x的每一个元素&lt;code&gt;x[[i]]&lt;/code&gt;执行指定的函数操作，这边就是求均值&lt;code&gt;mean&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;当然，&lt;code&gt;lapply&lt;/code&gt;函数不仅仅可以对列表做出处理，也可以是向量，不过这个情况并不适用于任何地方。比如，你想生成随机数，第一次生成1个，第二次生成3个，第三次5个，那么可以试试这个函数：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kp"&gt;lapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; rnorm&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## [[1]]&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] -0.5622&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## [[2]]&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] -0.8519  0.3671  0.4243&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## [[3]]&lt;/span&gt;
&lt;span class="code-line"&gt;## [1]  0.09395 -1.19474  1.52337 -1.97529  0.47370&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样使用的情况非常少，使用时需要特别注意一下。&lt;/p&gt;
&lt;p&gt;当然，在&lt;code&gt;lapply&lt;/code&gt;中你也可以使用自定义的函数，比如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;lapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;item&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kp"&gt;any&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;item &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## [[1]]&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] FALSE&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## [[2]]&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] TRUE&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## [[3]]&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] FALSE&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这边，自定义函数中使用&lt;code&gt;item&lt;/code&gt;代表&lt;code&gt;x&lt;/code&gt;的每一个元素，你也可以使用任何你想用的字符表示。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;2. &lt;code&gt;sapply&lt;/code&gt;函数&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;&lt;code&gt;sapply&lt;/code&gt;函数与&lt;code&gt;lapply&lt;/code&gt;函数使用与处理上完全相同，唯一不同的是，&lt;code&gt;sapply&lt;/code&gt;会尽可能地简化输出地结果。如果可能，&lt;code&gt;sapply&lt;/code&gt;会输出向量或者矩阵；当然，如果实在不行，它就会输出列表，这个时候就与&lt;code&gt;lapply&lt;/code&gt;函数一模一样了。接着上面一个例子看看：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;sapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;item&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kp"&gt;any&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;item &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## [1] FALSE  TRUE FALSE&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;h4&gt;3. &lt;code&gt;apply&lt;/code&gt;函数&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;&lt;code&gt;apply&lt;/code&gt;函数：对数组或矩阵，按行或者按列进行指定的函数操作。看个简单地例子：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;x&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;##      [,1] [,2] [,3]&lt;/span&gt;
&lt;span class="code-line"&gt;## [1,]    1    5    9&lt;/span&gt;
&lt;span class="code-line"&gt;## [2,]    2    6   10&lt;/span&gt;
&lt;span class="code-line"&gt;## [3,]    3    7   11&lt;/span&gt;
&lt;span class="code-line"&gt;## [4,]    4    8   12&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kp"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## [1] 5 6 7 8&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kp"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## [1]  2.5  6.5 10.5&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其中，&lt;code&gt;apply(data, margin, fun)&lt;/code&gt;，&lt;code&gt;margin=1&lt;/code&gt;即是按行求；&lt;code&gt;margin=2&lt;/code&gt;即是按列求。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;4. &lt;code&gt;tapply&lt;/code&gt;函数&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;&lt;code&gt;tapply&lt;/code&gt;函数：对向量的一个子集执行指定的函数。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;str&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;tapply&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## function (X, INDEX, FUN = NULL, ..., simplify = TRUE)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其中&lt;code&gt;x&lt;/code&gt;是需要处理的向量，&lt;code&gt;INDEX&lt;/code&gt;是因子(因子列表)，&lt;code&gt;FUN&lt;/code&gt;是需要执行的函数，&lt;code&gt;simplify&lt;/code&gt;指是否简化输入结果(考虑sapply对于lapply的简化)。&lt;/p&gt;
&lt;p&gt;看个简单地例子：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;12&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;x&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;##  [1]  1  2  3  4  5  6  7  8  9 10 11 12&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;Index &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;gl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;Index&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;##  [1] 1 1 1 1 2 2 2 2 3 3 3 3&lt;/span&gt;
&lt;span class="code-line"&gt;## Levels: 1 2 3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;Index2 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;gl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;Index2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;##  [1] 1 1 1 2 2 2 3 3 3 4 4 4&lt;/span&gt;
&lt;span class="code-line"&gt;## Levels: 1 2 3 4&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kp"&gt;tapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; Index&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;##  1  2  3&lt;/span&gt;
&lt;span class="code-line"&gt;## 10 26 42&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kp"&gt;tapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; Index2&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;##  1  2  3  4&lt;/span&gt;
&lt;span class="code-line"&gt;##  6 15 24 33&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;不简化输出结果：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kp"&gt;tapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; Index2&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; simplify &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## $`1`&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] 6&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## $`2`&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] 15&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## $`3`&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] 24&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## $`4`&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] 33&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;5. &lt;code&gt;mapply&lt;/code&gt;函数&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;&lt;code&gt;mapply&lt;/code&gt;函数：对一个函数，使用指定的参数集合进行运算。看个简单地例子：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kp"&gt;mapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## [1] 1 2 3 4&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;上面这个指令进行了什么运算呢？就是计算了集合(1,5,3),(2,6,4),(3,7,5),(4,8,6)四个集合各自的平均值。&lt;/p&gt;
&lt;h5&gt;如何处理其他参数&lt;/h5&gt;
&lt;p&gt;很多时候，函数并非只有一个输入参数，有一些其它的参数怎么处理呢？&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;rnorm&lt;/code&gt;函数来举个例子：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kp"&gt;set.seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;mapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;rnorm&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; mean &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; sd &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## [[1]]&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] 2.019&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## [[2]]&lt;/span&gt;
&lt;span class="code-line"&gt;## [1]  1.6315 -0.7427&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## [[3]]&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] 0.2025 2.8836 3.1694&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kp"&gt;set.seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;mapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;rnorm&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; mean &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; sd &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## [[1]]&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] 1.019&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## [[2]]&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] 1.8157 0.6287&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## [[3]]&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] 2.401 3.295 3.390&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;上述的命令应该与下面的命令效果相同：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kp"&gt;set.seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## [[1]]&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] 2.019&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## [[2]]&lt;/span&gt;
&lt;span class="code-line"&gt;## [1]  1.6315 -0.7427&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## [[3]]&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] 0.2025 2.8836 3.1694&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kp"&gt;set.seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;## [[1]]&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] 1.019&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## [[2]]&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] 1.8157 0.6287&lt;/span&gt;
&lt;span class="code-line"&gt;##&lt;/span&gt;
&lt;span class="code-line"&gt;## [[3]]&lt;/span&gt;
&lt;span class="code-line"&gt;## [1] 2.401 3.295 3.390&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;小节&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;Loop Functions可以在很大程度上简化我们所写的代码，能够帮我们简化很多操作，比如重复地输入一些东西等等！学好它可能对于程序运行本身没有多大的帮助，但是代码并不只是写给计算机看的，也是写给人看的！我认为，好的代码应该是简洁舒适的，阅读起来让自己和别人都觉得是一种美的享受！&lt;/p&gt;</content><category term="r"></category><category term="data science"></category></entry><entry><title>数据科学之机器学习13: 关联分析</title><link href="//jacky-sj/association-analysis.html" rel="alternate"></link><published>2014-05-04T10:12:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-05-04:/association-analysis.html</id><summary type="html">&lt;p&gt;关联分析算法&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;一、简介&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;在统计学中，变量与变量之间的关系是统计结构的重要参数，统计的核心问题也就是研究变量与变量之间的关系。如果变量与变量之间不独立，那么这两个变量之间肯定存在一定的关联性，那么如何处理度量这个关联性，在统计中就称为关联分析。&lt;/p&gt;
&lt;p&gt;列联表是传统统计学中度量两个分类变量之间关系强弱的方法，但是这个方法是对于两个固定的变量进行的一种测量。在机器学习中，常常会遇到大规模的变量，这时候更倾向于从众多的变量中最快地找到关联性最强的两组或多组变量。那么使用列联表就显得不太合适了，此时应该使用什么方法呢？&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;二、关联规则&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;首先介绍2个定义：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;k项集：&lt;/strong&gt;设 &lt;span class="math"&gt;\(I = \{ i_1, i_2, \dots, i_m \}\)&lt;/span&gt; 是 &lt;span class="math"&gt;\(m\)&lt;/span&gt; 个待研究的项构成的有限项集，对于给定的事物数据表 &lt;span class="math"&gt;\(T = \{ T_1, T_2, \dots, T_n \}\)&lt;/span&gt;，其中任意的 &lt;span class="math"&gt;\(T_i\)&lt;/span&gt; 是 &lt;span class="math"&gt;\(I\)&lt;/span&gt; 中的 &lt;span class="math"&gt;\(k\)&lt;/span&gt; 项组成的集合，称之为&lt;strong&gt;k项集&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;关联规则&lt;/strong&gt;：形如 &lt;span class="math"&gt;\( X \rightarrow Y\)&lt;/span&gt; 的形式，其中 &lt;span class="math"&gt;\( X \subseteq I\)&lt;/span&gt;, &lt;span class="math"&gt;\(Y \subseteq I\)&lt;/span&gt;，且有 &lt;span class="math"&gt;\( X \bigcap Y = \emptyset\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h5&gt;度量方式&lt;/h5&gt;
&lt;hr&gt;
&lt;p&gt;对于一个项集，我们正常用支持度来度量它的频繁程度，其实就是其在数据集中出现的比例，这个很容易理解，就不多说了。&lt;/p&gt;
&lt;p&gt;那么下面要讨论的就是：&lt;strong&gt;如何度量一个关联规则&lt;/strong&gt;。一般使用下面两个概念：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;支持度S&lt;/strong&gt;：定义为X和Y同时出现在一个事务中得可能性，即：
    &lt;span class="math"&gt;\( S(X \Rightarrow Y) = \mid T(X \vee Y) \mid / \mid T \mid\)&lt;/span&gt;
    其中，&lt;span class="math"&gt;\(\mid T(X \vee Y) \mid\)&lt;/span&gt; 表示同时包含X和Y的事务数，&lt;span class="math"&gt;\(\mid T \mid\)&lt;/span&gt; 表示总事务数。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;支持度C&lt;/strong&gt;：定义为出现在关联规则前项中得事务中出现关联规则后项的比例，即：
    &lt;span class="math"&gt;\( C(X \Rightarrow Y) = \mid T(X \vee Y) \mid / \mid T(X) \mid\)&lt;/span&gt;
    其中，&lt;span class="math"&gt;\( \mid T(X) \mid\)&lt;/span&gt; 表示包含X的事务数。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h5&gt;例子&lt;/h5&gt;
&lt;hr&gt;
&lt;p&gt;这边举个简单地例子，方便理解上面的概念。比如设计一个购物数据：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;id&lt;/th&gt;
&lt;th align="center"&gt;items&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;1&lt;/td&gt;
&lt;td align="center"&gt;AB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;2&lt;/td&gt;
&lt;td align="center"&gt;AC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;3&lt;/td&gt;
&lt;td align="center"&gt;C&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;4&lt;/td&gt;
&lt;td align="center"&gt;ABC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;5&lt;/td&gt;
&lt;td align="center"&gt;BC&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;上面数据的意思，比如第一行就表示，id为1的人购买了A和B两个物品，其他的意思类似。那么这个AB就是一个2项集，因为存在ABC三种物品，这边就有6种关联规则：&lt;span class="math"&gt;\(A \Rightarrow B\)&lt;/span&gt;, &lt;span class="math"&gt;\(A \Rightarrow C\)&lt;/span&gt;, &lt;span class="math"&gt;\( B \Rightarrow C\)&lt;/span&gt;, &lt;span class="math"&gt;\( B \Rightarrow A\)&lt;/span&gt;, &lt;span class="math"&gt;\( C \Rightarrow A\)&lt;/span&gt;, &lt;span class="math"&gt;\( C \Rightarrow B\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;那么如何计算一个关联规则的支持度与可信度呢？&lt;/p&gt;
&lt;p&gt;试试关联规则 &lt;span class="math"&gt;\(A \Rightarrow B\)&lt;/span&gt;：&lt;/p&gt;
&lt;div class="math"&gt;$$ S(A \Rightarrow B) =  \mid T(A \vee B) \mid / \mid T \mid = 2/5 $$&lt;/div&gt;
&lt;div class="math"&gt;$$ C(A \Rightarrow B) =  \mid T(A \vee B) \mid / \mid T(A) \mid = 2/3 $$&lt;/div&gt;
&lt;p&gt;是不是很简单呢。试试计算一下其他的关联规则，多算几次就能够很了解其中的含义了。&lt;/p&gt;
&lt;hr&gt;
&lt;h5&gt;关联规则的作用&lt;/h5&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;关联规则的目的在于，找到变量之间支持度和可信度都比较高的那些关联规则。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关联规则的支持度，用于度量关联规则在数据库中得普适程度，是对关联规则重要性(适用性)的一种度量。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关联规则的可信度，这是一个相对指标，是对关联规则准确度的一个度量。值越高，代表这个关联规则的后项依赖前项的可能性比较高。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h4&gt;小节&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;这篇简单介绍了一下关联分析的一些概念问题，以及如何度量一个关联规则。但是，试想一想，要是 &lt;span class="math"&gt;\(I\)&lt;/span&gt; 中包含的项很多，事物数据表 &lt;span class="math"&gt;\(T\)&lt;/span&gt; 也很大，那么要计算所有关联规则的支持度和可信度，难度可想而知！这时候就需要使用一些算法去解决这个问题，现在比较流行的算法就是：处理静态关联规则的Apriori算法和处理动态关联规则的Carma算法。&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="data science"></category><category term="r"></category><category term="machine learning"></category><category term="association analysis"></category></entry><entry><title>Mac 系统重装</title><link href="//jacky-sj/reinstall-mac.html" rel="alternate"></link><published>2014-04-30T20:57:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-04-30:/reinstall-mac.html</id><summary type="html">&lt;p&gt;重装 Mac 的过程记录&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;话说Mac一般来讲不需要什么重装啊，不过世事无绝对啊，有时候人就是喜欢作死！！！比如前几天的我~~~算了，具体情况就不说了，反正就是作死，Mac系统出了问题。本来想着用Time Machine恢复一下就得了，也省事。不过仔细想了一想，很想自己安装一遍（博主的折腾精神有时候很是让自己“佩服”），然后就开始了Mac系统重装之旅！&lt;/p&gt;
&lt;h3&gt;一、制作USB安装盘&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;要安装首先就得制作一个启动U盘，当然你也可以使用Mac的Internet Recovery，不过我试了一下，反正我是连不上！不过即使连上了，那个下载应该也需要超久的时间，不是我可以等得了的。我之前更新Mac时，已经下载好了Mavericks（OS X 10.9），所以直接拿来用了。&lt;/p&gt;
&lt;h4&gt;具体操作如下：&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;将OS X 10.9安装文件放到桌面上，右键选择“显示包内容”；&lt;/li&gt;
&lt;li&gt;复制"Contents/Resources/createinstallmedia"到桌面；&lt;/li&gt;
&lt;li&gt;打开终端，执行命令：&lt;code&gt;sudo -s&lt;/code&gt;，切换到root（成功的话，应该会显示&lt;code&gt;bash-3.2#&lt;/code&gt;）；&lt;/li&gt;
&lt;li&gt;将U盘（8G以上）接入Mac，用磁盘工具进行格式化，格式选择&lt;strong&gt;"Mac OS扩展（日志式）"&lt;/strong&gt;，名称定为&lt;strong&gt;“OSX”&lt;/strong&gt;；&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在终端中执行下面的命令：（将其中的“username”换成你自己的用户名）&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/Users/username/Desktop/createinstallmedia --volume /Volumes/OSX --&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;applicationpath /Users/username/Desktop/"Install OS X Mavericks.app"&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;等待终端完成。因为需要将安装的文件全部拷贝到U盘中，需要的时间可能有些久，不用着急，喝杯咖啡看看网页！完成后的终端会显示“Copy complete.Done.”&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;根据上面的流程，制作的安装盘是完整的，也就是安装完成之后，Mac是有Recovery HD的（就是开机按住option可以看到得“恢复10.9”），也可以使用FileVault和find my Mac功能。网上一些直接利用磁盘工具制作的安装盘，应该是不具备这个能力的，所以不建议使用那些方法。&lt;/p&gt;
&lt;h3&gt;二、加密与备份&lt;/h3&gt;
&lt;hr&gt;
&lt;h4&gt;安装之前：&lt;/h4&gt;
&lt;p&gt;在重装Mac系统之前，需要对Mac里面的文件进行一个备份。也建议使用Dropbox这样的网盘，将自己的一部分文件同步在网盘上，这样就不会存在丢失的情况。备份好之后，就可以开始重新安装Mac系统了。&lt;/p&gt;
&lt;h4&gt;安装之后：&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;在安装好了Mac系统之后，我首先进行了一些基本的设置：触控板、输入源、iCloud账号设置等等；&lt;/li&gt;
&lt;li&gt;在完成这些基础设置之后，你可以选择打开FileVault加密，增强电脑的安全系数（不过打开后，开机速度可能会变慢一些）；&lt;/li&gt;
&lt;li&gt;强烈建议打开Time Machine，给电脑做个备份；&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;三、安装Command Line Tools&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;为什么需要将这个独立出来？哎，没办法啊。。。在Mac上很多事情都靠他，离了它，估计我就没法好好生活好好学习好好过日子了！！！（夸张夸张！）&lt;/p&gt;
&lt;p&gt;这个的安装，我是直接下载了XCode和Command Line Tools之后安装的。用App Store下载Xcode，那个速度我实在是等不了。&lt;/p&gt;
&lt;h3&gt;四、安装Java&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;由于平时需要使用Weka，当然还有那个什么，那个什么~~~反正很多啦，都是需要Java支持的，像Matlab！嘿嘿。。。所以去安装一个Java吧，虽然我很不喜欢它！&lt;/p&gt;
&lt;h3&gt;五、配置shell&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;Mac默认使用的时bash，表示不喜欢。在对电脑进行各种软件安装配置之前，必须把Terminal搞成我喜欢的样子，嘿嘿~~&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;切换shell到&lt;code&gt;zsh&lt;/code&gt;：&lt;code&gt;chsh -s /bin/zsh&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;首先安装&lt;code&gt;Homebrew&lt;/code&gt;，执行下面的命令即可：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ruby &amp;lt;(curl -fsSkL raw.github.com/mxcl/homebrew/go)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装&lt;code&gt;wget&lt;/code&gt;：&lt;code&gt;brew install wget&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;安装&lt;code&gt;oh-my-zsh&lt;/code&gt;：&lt;code&gt;wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;修改配置文件&lt;code&gt;.zshrc&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;修改主题文件，主题文件的目录为&lt;code&gt;~/.oh-my-zsh/themes&lt;/code&gt;，找到自己使用的主题，进行修改即可。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;六、R语言相关&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;每天都在使用R语言，离了这个可真是活不了！下载好了R 和 RStudio之后，直接安装就好了。不过，这边可能会出现一个问题，就是在Mac上可能会出现encoding之类的问题，这个时候就需要设置一下，打开终端运行以下的命令即可：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;defaults write org.R-project.R force.LANG en_US.UTF-8&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装好之后，将自己常用的包下载一下就OK了！&lt;/p&gt;
&lt;h3&gt;七、Python&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;除了R语言，应该算是这货用的最多，所以安装好了R之后，就开始来弄它了。&lt;/p&gt;
&lt;p&gt;Mac是自带Python的，10.9自带的版本是Python 2.7.5，我一般使用的是Python 2.7.6，所以首先需要更新一个Python。以前我使用的软件包管理系统是Macports，不过现在已经叛逃到了Homebrew了！&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;执行&lt;code&gt;brew install python&lt;/code&gt;就可以下载安装最新版的Python了。不过安装好了之后，还是用不了的。因为Mac还是会用自带的那个Python。这个我一般就是将Homebrew的软件包目录加入PATH中，并且将该软件包目录的位置放置于其它目录的上方。&lt;/p&gt;
&lt;p&gt;可以使用&lt;code&gt;sudo vi etc/paths&lt;/code&gt;打开系统的PATH，然后在里面的第一行添加Homebrew的软件包安装目录&lt;code&gt;\usr\local\bin&lt;/code&gt;，第二行添加为&lt;code&gt;\usr\local\sbin&lt;/code&gt;，其实只要再&lt;code&gt;\usr\bin&lt;/code&gt;的上方就行了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装好这些之后，可以使用Python自带的&lt;code&gt;easy_install&lt;/code&gt;安装&lt;code&gt;pip&lt;/code&gt;，即：&lt;code&gt;easy_install pip&lt;/code&gt;；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;pip&lt;/code&gt;安装需要的python库：&lt;code&gt;pip install numpy&lt;/code&gt;等等。我一般安装的是库有：&lt;code&gt;numpy, scipy, matplotlib, ipython, scikit-learn&lt;/code&gt;等。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;八、Sublime Text &amp;amp; TextMate&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;我一般使用的文本编辑器就是上面两个，ST3常用，TM用的稍微少一些。配置的时候，ST3稍微麻烦一些，TM则简单地多，只要点点点就可以了。&lt;/p&gt;
&lt;h4&gt;Sublime Text 3&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安装好ST之后先安装Package Control，打开view -&amp;gt; show console，在console中输入代码。可以到&lt;a href="https://sublime.wbond.net/installation"&gt;这里&lt;/a&gt;去查看安装的最新代码(区分ST2以及ST3)；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置安装主题Flatland（我的最爱），使用&lt;code&gt;shift + cmd + P&lt;/code&gt;打开Package Control，输入&lt;code&gt;install package&lt;/code&gt;，return之后等待一下。在弹出的窗口中输入&lt;code&gt;Flatland&lt;/code&gt;，安装即可。安装完成后，打开Prefereces -&amp;gt; Settings - User，添加配置：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;"color_scheme": "Packages/Theme - Flatland/Flatland Monokai.tmTheme",
"theme": "Flatland Dark.sublime-theme"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当然还可以对这个主题进行其它配置，可以自行Google；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改字体，还是在Setting-User中，添加：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;"font_face": "menlo",
"font_size": 13&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装一些常用的包：&lt;code&gt;ConvertToUTF8&lt;/code&gt;, &lt;code&gt;Enhanced-R&lt;/code&gt;, &lt;code&gt;SublimeLinter&lt;/code&gt;, &lt;code&gt;SublimeREPL&lt;/code&gt;, &lt;code&gt;OmniMarkupPreviewer&lt;/code&gt;, &lt;code&gt;Markdown Extended&lt;/code&gt;, &lt;code&gt;Jedi - Python autocompeltion&lt;/code&gt;, &lt;code&gt;Alignment&lt;/code&gt;, &lt;code&gt;BracketHighlighter&lt;/code&gt;, &lt;code&gt;SendText&lt;/code&gt;, &lt;code&gt;SideBarEnhancements&lt;/code&gt;, &lt;code&gt;TrailingSpaces&lt;/code&gt;等等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;对有些需要配置的包配置一下，其实我也就配置了跟R语言有关的包，以及R语言在ST的快捷键。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;TextMate&lt;/h4&gt;
&lt;p&gt;这个配置起来比较容易，只需要在Preferences -&amp;gt; Bundles下面选择需要安装的包就可以了。我安装了一些我常用的包，然后将主题更换成了&lt;code&gt;Made of Code&lt;/code&gt;，将&lt;code&gt;show command output&lt;/code&gt;修改成了&lt;code&gt;Right of text view&lt;/code&gt;。&lt;/p&gt;
&lt;h3&gt;九、安装其它的软件&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;完成上面的安装，基本上就能用了，但是我需要在R中使用Knitr和Sweave，所以我得安装MacTex，顺便还装了Lyx。&lt;/p&gt;
&lt;p&gt;安装好了MacTex之后，我就安装了其它一些平时会用的软件，像Octave、Weka、MySQL等等！&lt;/p&gt;
&lt;p&gt;剩下的就是常用软件了，什么Dropbox、Evernote、iWork等等！！！iWork那个下载速度很是蛋疼啊~~~&lt;/p&gt;
&lt;h3&gt;总结&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;因为是隔了好几天才动笔写这个记录的，所以应该记录之中不免会有些遗漏！当然，中间或多或少肯定也存在一些问题，欢迎指正！&lt;/p&gt;</content><category term="record"></category><category term="mac"></category></entry><entry><title>数据科学之机器学习12: Logistic回归</title><link href="//jacky-sj/logistic-regression.html" rel="alternate"></link><published>2014-04-27T10:34:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-04-27:/logistic-regression.html</id><summary type="html">&lt;p&gt;Logistic 回归&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;在数据科学系列的开头，花了三篇介绍了线性回归。线性回归模型应该是定量分析中最常用的一种统计分析方法。但是线性回归处理数据时，要求因变量是连续型变量。但是很多时候，需要处理的数据，其因变量并不是连续的。像性别、对错等等，这种离散的因变量，一般称为分类响应变量。&lt;/p&gt;
&lt;p&gt;在机器学习的&lt;a href="http://jackycode.github.io/blog/2014/03/30/data-science-an-introduction-to-machine-learning/"&gt;介绍篇&lt;/a&gt;中，已经介绍了监督学习与非监督学习。在监督学习中，最主要的两类问题，一个就是回归，另一个就是分类。而Logistic回归就是处理二元分类的一种方法，当然其也存在自身的问题，这个后面再讲。&lt;/p&gt;
&lt;h4&gt;Sigmoid函数&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;要了解Logistic回归，首先需要了解一下Sigmoid函数。为什么呢？&lt;/p&gt;
&lt;p&gt;一般来说，我们会定义二元分类变量的输出为0和1，这种函数叫做单位阶跃函数，也称Heaviside step function。这个函数的特点就是其取值可以从0突变到1，反之也可。学过数分的话就知道，这种函数有时候会非常难以处理，因为带跳突变，导致了不可微不可导。在这里，就可以借助Sigmoid函数，因为这个函数可以近似地描述单位阶跃函数的特点。首先看看Sigmoid函数：&lt;/p&gt;
&lt;div class="math"&gt;$$ p = \frac{exp(y)}{1+exp(y)} = \frac{1}{1 + exp(-y)}$$&lt;/div&gt;
&lt;p&gt;简单看一下这个函数，当 &lt;span class="math"&gt;\(y=0\)&lt;/span&gt; 时，&lt;span class="math"&gt;\(p=0.5\)&lt;/span&gt;；当 &lt;span class="math"&gt;\(y\)&lt;/span&gt; 变大，趋近于无穷时，&lt;span class="math"&gt;\(y\)&lt;/span&gt; 趋近1；反之，&lt;span class="math"&gt;\(y\)&lt;/span&gt; 趋近0。而且，这种趋近的速度是非常快的。正是因为这个趋近速度非常快，我们可以使用Sigmoid函数来处理这边的单位阶跃函数。&lt;/p&gt;
&lt;h4&gt;Logistic回归&lt;/h4&gt;
&lt;hr&gt;
&lt;h5&gt;模型建立&lt;/h5&gt;
&lt;p&gt;利用Sigmoid函数可以将单位阶跃函数做个近似，而Sigmoid函数是连续的，那么就可以利用之前的线性回归来建立模型。&lt;/p&gt;
&lt;p&gt;令 &lt;span class="math"&gt;\(y = X\beta\)&lt;/span&gt;，又 &lt;span class="math"&gt;\( p = \frac{1}{1 + exp(-y)}\)&lt;/span&gt;，变形可得Logistic回归模型：&lt;/p&gt;
&lt;div class="math"&gt;$$ logit(p) = ln(\frac{p}{1-p}) = X\beta $$&lt;/div&gt;
&lt;p&gt;上述的 &lt;span class="math"&gt;\(logit(p)\)&lt;/span&gt; 称为 &lt;span class="math"&gt;\(logit\)&lt;/span&gt; 变换，此时 &lt;span class="math"&gt;\(p\)&lt;/span&gt; 就是响应变量，&lt;span class="math"&gt;\(X\)&lt;/span&gt; 就是自变量。到这，模型就建立好了，剩下就是如何对参数进行估计了。&lt;/p&gt;
&lt;h5&gt;参数估计&lt;/h5&gt;
&lt;p&gt;参数估计可以从两个方面来考虑，一个从最优化的方式，一个从统计角度！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;最优化的方式&lt;/strong&gt;，是将模型转换成：&lt;span class="math"&gt;\( p = sigmod(X\beta)\)&lt;/span&gt;来考虑，对于估计值 &lt;span class="math"&gt;\(\hat{\beta}\)&lt;/span&gt;，应该使得其预测值 &lt;span class="math"&gt;\(\hat{p}\)&lt;/span&gt; 与实际值 &lt;span class="math"&gt;\(p\)&lt;/span&gt; 之间的差达到最小！即：&lt;/p&gt;
&lt;div class="math"&gt;$$ \hat{\beta} = \min_{\beta} \mid p - sigmod(X\beta) \mid$$&lt;/div&gt;
&lt;p&gt;有了这个，我们就可以使用最速下降法等等最优化的方法去求解参数的估计值了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;统计角度&lt;/strong&gt;，那就需要考虑模型中 &lt;span class="math"&gt;\(p\)&lt;/span&gt; 的统计意义了，这个属于广义线性模型的范畴，现在不想多说，有兴趣的话可以翻翻资料！也可以根据下面说的&lt;strong&gt;统计中的解释&lt;/strong&gt;去试试，看看如何使用极大似然估计去估计参数。&lt;/p&gt;
&lt;h5&gt;统计中的解释&lt;/h5&gt;
&lt;hr&gt;
&lt;p&gt;这里面的 &lt;span class="math"&gt;\(p\)&lt;/span&gt; 除了利用Sigmoid函数来解释之外，还可以利用统计中的二项分布来解释，而且从某种角度来说，这个解释会更便于理解。试想，我们这边需要处理的二元分类变量就是0和1。我们考虑0就是“不发生”，1就是“发生”，那么我们可以将前面的 &lt;span class="math"&gt;\(p\)&lt;/span&gt; 理解成发生的概率。通过对已知数据建立模型，估计出参数，我们就可以利用模型去预测在不同的自变量条件下，“发生”的概率是多大，从而达到一个分类的目的。&lt;/p&gt;
&lt;p&gt;从这边的分析就可以看到，Logistic回归的缺点：那就是欠拟合，会导致分类的精度下降。&lt;/p&gt;
&lt;h5&gt;R语言实现&lt;/h5&gt;
&lt;hr&gt;
&lt;p&gt;因为Logistic回归是属于广义线性回归模型的，在R中有专门处理广义线性模型的函数&lt;code&gt;glm&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;model &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; glm&lt;span class="p"&gt;(&lt;/span&gt;formula&lt;span class="p"&gt;,&lt;/span&gt; family&lt;span class="o"&gt;=&lt;/span&gt;binominal&lt;span class="p"&gt;(&lt;/span&gt;link &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; data&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kt"&gt;data.frame&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这里处理的方式中，利用了连接函数(link=logit)，感兴趣的话可以找找广义线性模型的内容看看，当然，以后如果介绍统计模型的话，这个肯定也是必讲得内容。&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="data science"></category><category term="r"></category><category term="machine learning"></category><category term="classificaton"></category><category term="regression"></category></entry><entry><title>数据科学之机器学习11: 聚类分析2</title><link href="//jacky-sj/cluster-analysis2.html" rel="alternate"></link><published>2014-04-24T09:39:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-04-24:/cluster-analysis2.html</id><summary type="html">&lt;p&gt;聚类分析简介 2&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;上一篇介绍了聚类分析的定义，给出了很多不同的相似性的度量方法。这一篇主要想介绍一下除了快速聚类之外的另外一种聚类方法：&lt;strong&gt;系统聚类法&lt;/strong&gt;。&lt;/p&gt;
&lt;h3&gt;二、系统聚类法&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;系统聚类法，hierarchical clustering method，是聚类分析方法中用的较多的一种。其具体过程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对于n个样品，构造n个类，每个样品单独作为一类。计算每个类之间的距离；&lt;/li&gt;
&lt;li&gt;合并距离最近的两个类为一个新类；&lt;/li&gt;
&lt;li&gt;计算新类与其它类之间的距离，重复2直到所有类合并称为1个类为止。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;那么类与类之间的距离如何定义呢？&lt;/p&gt;
&lt;p&gt;其实，类与类之间的距离有很多中定义方式常见的有：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;最短距离法，single linkage method，&lt;span class="math"&gt;\( D_{KL} = \min_{i \in G_K,j \in G_L} d_{ij}\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;最长距离法，complete linkage method，&lt;span class="math"&gt;\( D_{KL} = \max_{i \in G_K,j \in G_L} d_{ij}\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;中间距离法，median linkage method，即取最远距离与最近距离两者的中间距离；&lt;/li&gt;
&lt;li&gt;类平均法，average linkage method，&lt;span class="math"&gt;\( D_{KL} = \frac{1}{n_Kn_L} \sum_{i \in G_K,j \in G_L} d_{ij}\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;重心法，centroid hierarchical method，即取类重心之间的距离；&lt;/li&gt;
&lt;li&gt;离差平方和法，Ward's minimum variance method, 定义较为繁琐，可以自行Google；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;注&lt;/strong&gt;：系统聚类的方法并不困难，但是实现时会存在计算量的问题。系统聚类法一般是在样品间距离矩阵的基础上进行的，它需要计算所有点到所有点之间的距离，当样品量很大时，这个计算量会变得非常的大。因而，很多时候人们会采用动态聚类的方法去处理数据，动态聚类法中一种最常用的方法就是之前已经介绍过的KMeans方法。&lt;/p&gt;
&lt;h4&gt;R语言实现&lt;/h4&gt;
&lt;p&gt;在R语言中，自带了一个函数可以实现系统聚类：&lt;code&gt;hclust&lt;/code&gt;。可以自己查阅help。&lt;/p&gt;
&lt;h3&gt;三、聚类的一些问题&lt;/h3&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;量纲问题。实际问题中，由于数据采用的量纲不同，很多时候需要对数据进行一些变换，最常用的就是标准化。但也有一些其它方式：极差变换（数据除以极差）；主成分变换（用主成分代替本身数据）；对数变换等等。&lt;/li&gt;
&lt;li&gt;kmeans算法只有在类的平均值可以被定义的情况下使用，所以在一些特殊的场合，kmeans并不适用。比如分类数据等等!!&lt;/li&gt;
&lt;li&gt;kmeans算法使用平均值作为衡量，这就造成了一个新的问题。即kmeans不适用于含有异常值的数据，非凸面的数据以及大小值相差很大的数据。&lt;/li&gt;
&lt;li&gt;聚类的一个&lt;strong&gt;难点&lt;/strong&gt;在于：确定类的个数。通过上面介绍的算法来看，所有的方法都需要自己去定义类的个数。那么如何去定义类的个数呢？这是一个到现在还没有满意解决的问题。常用的方式就是观察样品散点图，查看变化率，以及使用一些假设检验的方式（感兴趣可以翻阅专业的书籍材料，比如上海财经出版社的应用多元分析中就有讲到这部分内容）。&lt;/li&gt;
&lt;/ol&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="data science"></category><category term="r"></category><category term="machine learning"></category><category term="clustering"></category></entry><entry><title>数据科学之机器学习10: 聚类分析1</title><link href="//jacky-sj/cluster-analysis1.html" rel="alternate"></link><published>2014-04-21T18:46:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-04-21:/cluster-analysis1.html</id><summary type="html">&lt;p&gt;聚类分析简介 1&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;上一篇介绍了聚类分析中的KMeans算法，这一节就来具体地说说聚类分析。聚类分析，cluster analysis，是一种研究“物以类聚”现代统计学分析方法，其目的是要把分类对象按照一定的规则分成若干个类。这些类别并非事先给定的，而是根据数据的特征确定的。&lt;/p&gt;
&lt;hr&gt;
&lt;h5&gt;NOTE：聚类的划分：&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;根据分类对象的不同，可以分为：&lt;strong&gt;Q型聚类分析&lt;/strong&gt;和&lt;strong&gt;R型聚类分析&lt;/strong&gt;。Q型是指对样品对象进行聚类；而R型则是对变量(属性)进行聚类。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;按照分析方法的不同，又可以分为：&lt;strong&gt;系统聚类法&lt;/strong&gt;、&lt;strong&gt;快速聚类法&lt;/strong&gt;和&lt;strong&gt;模糊聚类法&lt;/strong&gt;。上一篇介绍的KMeans法就是快速聚类法中的一种。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h4&gt;一、相似性的度量&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;在上一篇中，我们已经介绍过，聚类其实就是将相似度高的样品啊属性啊合并成一个类别。但是，上一篇我们仅仅给出了一种也是最简单的一种相似性的度量方式——欧式距离。这里我们详细看看相似性有哪些度量方式：&lt;/p&gt;
&lt;p&gt;除了使用&lt;strong&gt;有序尺度变量&lt;/strong&gt;（将属性划分为一级、二级等等的有次序关系的量来表示）和&lt;strong&gt;名义尺度变量&lt;/strong&gt;（使用既没有等级关系，又不存在数量关系的量来表示。比如男女）之外，一般采用的测量尺度的方式就是&lt;strong&gt;间隔尺度变量&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;间隔尺度变量&lt;/strong&gt;即是使用连续的量来表示测量尺度，一般都是连续型的，比如欧式距离、重量等等。一般来讲，在应对Q型聚类时会使用&lt;strong&gt;距离&lt;/strong&gt;去度量；而对R型聚类来说，则会使用&lt;strong&gt;相似系数&lt;/strong&gt;这种方式去度量。下面来分别看一看：&lt;/p&gt;
&lt;hr&gt;
&lt;h5&gt;a. 距离&lt;/h5&gt;
&lt;hr&gt;
&lt;p&gt;上一篇中使用的欧氏距离即是这里的一种，在介绍各种不同的距离定义之前，首先看看距离的定义需要满足哪些条件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先，距离必须是非负的。即：&lt;span class="math"&gt;\(d_{ij} \geqslant 0, \forall i,j\)&lt;/span&gt;;&lt;/li&gt;
&lt;li&gt;对于相同取值的样品，之间的距离必须为0。即：&lt;span class="math"&gt;\(d_{ij} = 0\)&lt;/span&gt;，当且仅当，第i个样品与第j个样品的各变量值相同；&lt;/li&gt;
&lt;li&gt;i样品到j样品的距离与j样品到i样品的距离相等。即：&lt;span class="math"&gt;\(d_{ij} = d_{ji}, \forall i, j\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;满足：&lt;span class="math"&gt;\(d_{ij} \leqslant d_{ik} + d_{kj}, \forall i,j,k\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下面就来看看常用的距离定义，首先看看最常用的Minkowski距离：&lt;/p&gt;
&lt;hr&gt;
&lt;h6&gt;(1). Minkowski距离&lt;/h6&gt;
&lt;div class="math"&gt;$$ d_{ij}(q) = [\sum_{k=1}^{p} {\mid x_{ik} - x_{jk} \mid ^ q}]^{1/q} $$&lt;/div&gt;
&lt;p&gt;观察这个距离可以看到，当&lt;span class="math"&gt;\(q=2\)&lt;/span&gt;时，上面定义的距离就是常用的欧氏距离。另外：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math"&gt;\(q=1\)&lt;/span&gt; 时，&lt;span class="math"&gt;\(d_{ij}=\sum_{k=1}^{p} {\mid x_{ik} - x_{jk} \mid}\)&lt;/span&gt; 称为&lt;strong&gt;绝对值距离&lt;/strong&gt;；&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(q=\infty\)&lt;/span&gt; 时，&lt;span class="math"&gt;\(d_{ij}=\max_{1 \leqslant k \leqslant p} {\mid x_{ik} - x_{jk} \mid}\)&lt;/span&gt; 称为&lt;strong&gt;切比雪夫距离&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Minkowski距离存在一个问题，就是当变量的单位不同或者测量值范围相差很大时，直接使用Minkowski距离效果不佳。这个时候，应该先对数据进行&lt;strong&gt;标准化&lt;/strong&gt;（就是减去均值除上标准差）之后再计算距离(这个后面还会说到)。&lt;/p&gt;
&lt;hr&gt;
&lt;h6&gt;(2). Lance距离(Lance and Williams)&lt;/h6&gt;
&lt;p&gt;当&lt;span class="math"&gt;\(x_{ji} &amp;gt; 0\)&lt;/span&gt;时，定义第i个样品到第j个样品的距离为：&lt;/p&gt;
&lt;div class="math"&gt;$$ d_{ij} = \sum_{k=1}^{p} {\frac{\mid x_{ik} - x_{jk} \mid}{x_{ik} + x_{jk}}} $$&lt;/div&gt;
&lt;p&gt;从公式就可以看出来，这个距离与变量之间的单位没有什么关系；而且其对异常值也不敏感，因而适用于一些高度偏斜的数据。&lt;/p&gt;
&lt;hr&gt;
&lt;h6&gt;(3). Mahalanobis距离(马氏距离)&lt;/h6&gt;
&lt;p&gt;上面的两种距离都没有考虑变量之间的相关性问题，马氏距离就可以考虑到这个问题。但是由于马氏距离定义的问题，在聚类分析中使用马氏距离并不合适。但是这里也还是给出马氏距离的定义：&lt;/p&gt;
&lt;div class="math"&gt;$$ d_{ij} = \sqrt{(x_i - x_j)^TS^{-1}(x_i - x_j)} $$&lt;/div&gt;
&lt;p&gt;其中 &lt;span class="math"&gt;\(x_i = (x_{i1}, \dots, x_{ip})^T\)&lt;/span&gt;，&lt;span class="math"&gt;\(x_j = (x_{j1}, \dots, x_{jp})^T\)&lt;/span&gt;，&lt;span class="math"&gt;\(S\)&lt;/span&gt; 为样本协方差阵。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;注：&lt;/em&gt;&lt;/strong&gt;为什么说马氏距离不适用与聚类分析呢？&lt;/p&gt;
&lt;p&gt;聚类分析是无监督算法中的一种，无监督算法是什么？无监督算法是没有先验信息的，所有的数据拿过来是没有什么目标信息啊什么的。没有不同类之间的先验信息，那么协方差阵&lt;/p&gt;
&lt;div class="math"&gt;$$S$$&lt;/div&gt;
&lt;p&gt;就无法计算。因而，在实际聚类分析中，马氏距离并不适用。&lt;/p&gt;
&lt;hr&gt;
&lt;h6&gt;(4). 斜交空间距离&lt;/h6&gt;
&lt;div class="math"&gt;$$ d_{ij} = [ \frac{1}{p^2} \sum_{k=1}^{p} \sum_{l=1}^{p} (x_{ik} -x_{jk})(x_{il} - x_{jl})r_{kl} ] ^ {1/2} $$&lt;/div&gt;
&lt;p&gt;其中 &lt;span class="math"&gt;\(r_{kl}\)&lt;/span&gt; 是变量 &lt;span class="math"&gt;\(x_k\)&lt;/span&gt; 与变量 &lt;span class="math"&gt;\(x_l\)&lt;/span&gt; 的相关系数。学过高等代数的应该可以很容易看明白这个定义。此外，当变量之间互不相关的时候，这里的 &lt;span class="math"&gt;\(d_{ij} = [d_{ij}(2)/p]_{Minkowski}\)&lt;/span&gt;，也就是退化到了欧氏距离（相差一个常数倍）。&lt;/p&gt;
&lt;hr&gt;
&lt;h5&gt;b. 相似系数&lt;/h5&gt;
&lt;hr&gt;
&lt;p&gt;对变量进行聚类时，通常使用相似系数来考量其间的相似度。那么相似系数的定义有需要满足哪些条件呢？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;完全相关。即：&lt;span class="math"&gt;\(c_{ij} = \pm 1\)&lt;/span&gt;，当且仅当&lt;span class="math"&gt;\(x_i = ax_j + b;a(\neq 0),b\)&lt;/span&gt;是常数；&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(\mid c_{ij} \mid \leqslant 1, \forall i, j\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(c_{ij} = c_{ji}, \forall i, j\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下面看看常用的两种相似系数：&lt;/p&gt;
&lt;hr&gt;
&lt;h6&gt;(1). 夹角余弦&lt;/h6&gt;
&lt;hr&gt;
&lt;p&gt;变量&lt;span class="math"&gt;\(x_i\)&lt;/span&gt;和&lt;span class="math"&gt;\(x_j\)&lt;/span&gt;的夹角余弦的定义为：&lt;/p&gt;
&lt;div class="math"&gt;$$ c_{ij} = \frac{\sum_{k=1}^{n} {x_{ki}x_{kj}} }{ [ (\sum_{k=1}^{n}{ x^2_{ki} })(\sum_{k=1}^{n} {x^2_{kj}} ) ]^{1/2} } $$&lt;/div&gt;
&lt;p&gt;学过解析几何应该很容易看出这个定义的含义所在，其实 &lt;span class="math"&gt;\(c_{ij} = \cos \theta_{ij}\)&lt;/span&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h6&gt;(2). 相关系数&lt;/h6&gt;
&lt;hr&gt;
&lt;div class="math"&gt;$$ c_{ij} = \frac { \sum _{ k=1 }^{ n }{ ({ x }_{ ki }-\overline{x_i})({ x }_{ kj }-\overline{x_j}) }  }{ \{ [\sum_{k=1}^{n}({ x }_{ ki }-\overline{x_i})^2][\sum_{k=1}^{n}({ x }_{ kj }-\overline{x_j})^2] \}^{1/2} } $$&lt;/div&gt;
&lt;p&gt;这里的相关系数其实就是统计里面通常所说的相关系数。其实，如果变量都是标准化了的，那么夹角余弦就是相关系数，看出来了吗？&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;小节&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;到这边，就把统计中常用的用于度量相似性的定义讲了一些。这些定义，大都有其自身的数学背景。有些来自于几何学，有些来自于线性空间理论。对于使用者来说，搞明白什么时候选择什么样的度量方式更加重要！下一篇，我们讲一讲聚类分析中的一个常用方法：&lt;strong&gt;系统聚类法&lt;/strong&gt;。&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="data science"></category><category term="r"></category><category term="machine learning"></category><category term="clustering"></category></entry><entry><title>数据科学之机器学习9: 聚类算法之Kmeans</title><link href="//jacky-sj/clustering-kmeans.html" rel="alternate"></link><published>2014-04-19T13:01:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-04-19:/clustering-kmeans.html</id><summary type="html">&lt;p&gt;k-means 聚类算法&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;The k-means algorithm&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;前面写了很多监督学习的东西，除了回归就是分类，今儿有点想换换口味，写写无监督学习的算法。k-means算法是一种聚类算法，聚类就是无监督学习里面的内容。那么先来说说聚类：&lt;/p&gt;
&lt;h3&gt;一、聚类简介&lt;/h3&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;聚类是一种无监督学习方法，它主要就是将相似的对象归并到一个类别中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;聚类分析的目的是把分类对象按照一定的规则，分成若干个类。这些类并不是事先给定的，而是在处理数据时，根据数据的特征确定的。因而，在处理之前无需对类的数目、结构等等作出假定(理论如此，实际应用时并不完全这样，以后讲聚类分析时再具体说)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在同一类别中，对象具有某种意义下的相似性；不同的类别中，对象具有某种意义下的不相似。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;聚类与分类的最大不同&lt;/strong&gt;：分类的目标事先已知，而聚类未知。正因为聚类产生的结构与分类相同，只是类别没有预先定义，所以聚类也被称为“无监督分类”。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;二、k-means法&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;k-means法是由MacQueen提出并命名的一种聚类算法。其使用聚类中的均值进行聚类划分，这样说不大好理解，可以先看一下算法的基本步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;从n个数据对象中任意取出k个样品对象作为初始聚类点（或者将所有数据分成k份，计算每一份中的重心（均值）作为初始聚类点）；&lt;/li&gt;
&lt;li&gt;对所有样品对象逐个归类，将每一个对象归入距离他最近的那个类（距离一般使用欧式距离），并将该类的凝聚点更新为这个类当前的均值；&lt;/li&gt;
&lt;li&gt;重复步骤2，直至所有对象都不能再分配为止。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;三、R语言实现&lt;/h3&gt;
&lt;hr&gt;
&lt;h4&gt;1. 自定义函数&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;自定义一个函数&lt;code&gt;se_kmeans&lt;/code&gt;，使用这个函数可以通过输入需要聚类的数据集以及类别数目k，即可得到每一个样品的类别以及各个类别的中心。该函数使用欧式距离作为相似性的度量（当然还有很多其它方式，之后的聚类分析中会讲到），具体的程序可以在&lt;a href="https://github.com/JackyCode/Data_Science"&gt;我的项目&lt;/a&gt;中找到，也可以直接到我的&lt;a href="https://github.com/JackyCode/Data_Science"&gt;github&lt;/a&gt;中查看源代码。这边给出测试代码以及结果：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;x1 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;x2 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;rbind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x1&lt;span class="p"&gt;,&lt;/span&gt; x2&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;clusters &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; se_kmeans&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;clusters&lt;/span&gt;
&lt;span class="code-line"&gt;plot&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; col&lt;span class="o"&gt;=&lt;/span&gt;clusters&lt;span class="o"&gt;$&lt;/span&gt;cluster&lt;span class="p"&gt;,&lt;/span&gt; pch&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;as.character&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;clusters&lt;span class="o"&gt;$&lt;/span&gt;cluster&lt;span class="p"&gt;),&lt;/span&gt; cex&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;points&lt;span class="p"&gt;(&lt;/span&gt;clusters&lt;span class="o"&gt;$&lt;/span&gt;center&lt;span class="p"&gt;,&lt;/span&gt; col&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;green&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; pch&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;o&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; cex &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;得到如下的一张图&lt;/p&gt;
&lt;p&gt;&lt;img alt="kmeans1" src="\images\article\a24\kmeans1.jpg"&gt;&lt;/p&gt;
&lt;p&gt;可以看到，分类效果是很好的。&lt;/p&gt;
&lt;h4&gt;2. 使用&lt;code&gt;kmeans&lt;/code&gt;函数&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;可以使用&lt;code&gt;stats&lt;/code&gt;包中的&lt;code&gt;kmeans&lt;/code&gt;函数来实现，示例如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;x1 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;x2 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;rbind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x1&lt;span class="p"&gt;,&lt;/span&gt; x2&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;clusters &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; kmeans&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;clusters&lt;/span&gt;
&lt;span class="code-line"&gt;plot&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; col&lt;span class="o"&gt;=&lt;/span&gt;clusters&lt;span class="o"&gt;$&lt;/span&gt;cluster&lt;span class="p"&gt;,&lt;/span&gt; pch&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;as.character&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;clusters&lt;span class="o"&gt;$&lt;/span&gt;cluster&lt;span class="p"&gt;),&lt;/span&gt; cex&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;points&lt;span class="p"&gt;(&lt;/span&gt;clusters&lt;span class="o"&gt;$&lt;/span&gt;centers&lt;span class="p"&gt;,&lt;/span&gt; col&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;green&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; pch&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;o&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; cex &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;得到这样一张图&lt;/p&gt;
&lt;p&gt;&lt;img alt="kmeans2" src="\images\article\a24\kmeans2.jpg"&gt;&lt;/p&gt;
&lt;p&gt;从图中可以看出，kmeans的分类效果还是蛮不错的，当然我们可以计算一下误判，不过这显然是很小的。&lt;/p&gt;</content><category term="data science"></category><category term="r"></category><category term="machine learning"></category><category term="clustering"></category></entry><entry><title>数据科学之机器学习8: 决策树之ID3</title><link href="//jacky-sj/cls-decision-trees-id3.html" rel="alternate"></link><published>2014-04-14T16:02:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-04-14:/cls-decision-trees-id3.html</id><summary type="html">&lt;p&gt;决策树算法之 ID3&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;ID3算法的核心问题就在于：如何选取在决策树的每个节点处要测试的属性。那么如何去选择呢？当然，我们要选取&lt;strong&gt;分类能力最好的属性&lt;/strong&gt;，那么怎么去确定哪个属性是分类能力最好的呢？ID3算法中，使用&lt;strong&gt;信息增益&lt;/strong&gt;作为评判标准。在看信息增益之前，我们先看看这个决策树的构造过程：&lt;/p&gt;
&lt;h3&gt;一、构造过程&lt;/h3&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;选取&lt;strong&gt;分类能力最好的属性&lt;/strong&gt;作为决策树根部节点的测试；&lt;/li&gt;
&lt;li&gt;为根节点属性的每一个可能值产生一个分支；&lt;/li&gt;
&lt;li&gt;以各个分支节点为根节点，重复上述过程。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;二、信息增益&lt;/h3&gt;
&lt;hr&gt;
&lt;h4&gt;1. 熵&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;在看信息增益之前，首先需要介绍一个概念，那就是&lt;strong&gt;香农熵&lt;/strong&gt;，简称为&lt;strong&gt;熵&lt;/strong&gt;。相信学过物理的应该大都听过这个名词，在热力学中不就有个熵增原理嘛。其实，&lt;strong&gt;熵是信息论中广泛使用的一个度量标准，刻画了任意样例集合的纯度。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;熵是信息的期望值&lt;/strong&gt;，所以可以用熵来刻画一个数据集的纯度。若用 &lt;span class="math"&gt;\(x_i,i=1,2,\dots,n\)&lt;/span&gt; 来表示数据集所包含的属性，那么这个数据集的熵为：&lt;/p&gt;
&lt;div class="math"&gt;$$ H = - \sum_{i=1}^{n}{p(x_i)l(x_i)} $$&lt;/div&gt;
&lt;p&gt;其中，&lt;span class="math"&gt;\(p(x_i)\)&lt;/span&gt; 表示选取 &lt;span class="math"&gt;\(x_i\)&lt;/span&gt; 作为分类的最终类别的概率；&lt;span class="math"&gt;\(l(x_i)\)&lt;/span&gt; 为 &lt;span class="math"&gt;\(x_i\)&lt;/span&gt; 的信息，定义为：&lt;span class="math"&gt;\( l(x_i) = - \log_2p(x_i)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h4&gt;2. 信息增益&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;有了熵之后就可以刻画一个数据集的纯度，也就是熵值。那么什么信息增益呢？&lt;/p&gt;
&lt;p&gt;简单来说，&lt;strong&gt;一个属性的信息增益就是：使用这个属性分割样例集合而导致的熵值降低&lt;/strong&gt;。那么要选取分类能力最好的属性，就是要选取使得信息增益最大的那个属性。&lt;/p&gt;
&lt;p&gt;一个属性A对样例集合S的信息增益定义为：&lt;/p&gt;
&lt;div class="math"&gt;$$ Gain(S, A) = H(S) - \sum_{v \in A} { \frac{\# S_v}{\# S} H(S_v) } $$&lt;/div&gt;
&lt;p&gt;其中，&lt;span class="math"&gt;\(S_v\)&lt;/span&gt; 表示集合S中，属性A取值为&lt;span class="math"&gt;\(v\)&lt;/span&gt;的那部分数据；&lt;span class="math"&gt;\(\# S_v\)&lt;/span&gt; 表示，集合S中，属性A取值为&lt;span class="math"&gt;\(v\)&lt;/span&gt;的个数；&lt;span class="math"&gt;\(\# S\)&lt;/span&gt; 表示集合S中观测的个数。&lt;/p&gt;
&lt;h4&gt;3. 简单的例子&lt;/h4&gt;
&lt;hr&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;序号&lt;/th&gt;
&lt;th align="center"&gt;age&lt;/th&gt;
&lt;th align="center"&gt;income&lt;/th&gt;
&lt;th align="center"&gt;buy_iphone&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;1&lt;/td&gt;
&lt;td align="center"&gt;senior&lt;/td&gt;
&lt;td align="center"&gt;high&lt;/td&gt;
&lt;td align="center"&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;2&lt;/td&gt;
&lt;td align="center"&gt;senior&lt;/td&gt;
&lt;td align="center"&gt;low&lt;/td&gt;
&lt;td align="center"&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;3&lt;/td&gt;
&lt;td align="center"&gt;youth&lt;/td&gt;
&lt;td align="center"&gt;high&lt;/td&gt;
&lt;td align="center"&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;4&lt;/td&gt;
&lt;td align="center"&gt;youth&lt;/td&gt;
&lt;td align="center"&gt;low&lt;/td&gt;
&lt;td align="center"&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;5&lt;/td&gt;
&lt;td align="center"&gt;senior&lt;/td&gt;
&lt;td align="center"&gt;high&lt;/td&gt;
&lt;td align="center"&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;6&lt;/td&gt;
&lt;td align="center"&gt;youth&lt;/td&gt;
&lt;td align="center"&gt;high&lt;/td&gt;
&lt;td align="center"&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;7&lt;/td&gt;
&lt;td align="center"&gt;senior&lt;/td&gt;
&lt;td align="center"&gt;high&lt;/td&gt;
&lt;td align="center"&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;考虑上面这个问题，我们来计算一下各个属性的信息增益。&lt;/p&gt;
&lt;p&gt;首先，我们可以看到，这个数据集S最终分类buy_iphone有两种取值：&lt;span class="math"&gt;\(yes,no\)&lt;/span&gt;。则数据集S的熵值为：&lt;/p&gt;
&lt;div class="math"&gt;$$ H(S) = -\frac{4}{7} \log_2{\frac{4}{7} } - \frac{3}{7} \log_2{\frac{3}{7} }  \approx 0.985$$&lt;/div&gt;
&lt;p&gt;若按照age分类，age有两个属性：&lt;span class="math"&gt;\(senior, youth\)&lt;/span&gt;，分别有4个和3个。age = senior时，yes有2个，no有2个则有：&lt;/p&gt;
&lt;div class="math"&gt;$$ H_{age}(S_{senior}) = -\frac{2}{4} \log_2{\frac{2}{4}} - \frac{2}{4} \log_2{\frac{2}{4}} \approx 1 $$&lt;/div&gt;
&lt;div class="math"&gt;$$ H_{age}(S_{youth}) = -\frac{2}{3} \log_2 {\frac{2}{3}} - \frac{1}{3} \log_2 {\frac{1}{3}} \approx 0.918 $$&lt;/div&gt;
&lt;p&gt;则有：&lt;/p&gt;
&lt;div class="math"&gt;$$ H_{age}(S) = \frac{4}{7} \times 1 + \frac{3}{7} \times 0.918 = 0.965 $$&lt;/div&gt;
&lt;p&gt;则age属性的信息增益为：&lt;/p&gt;
&lt;div class="math"&gt;$$ H(S) - H_{age}(S) = 0.985 - 0.965 = 0.020 $$&lt;/div&gt;
&lt;p&gt;那么属性income的信息增益怎么去计算，可以动手试试。&lt;/p&gt;
&lt;h3&gt;三、ID3算法的伪代码&lt;/h3&gt;
&lt;hr&gt;
&lt;h5&gt;定义：&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;data：为训练样本集&lt;/li&gt;
&lt;li&gt;label：为目标属性 （比如例子中的属性buy_iphone）&lt;/li&gt;
&lt;li&gt;attrs：出目标属性外，供算法学习测试使用的其它属性 （比如例子中的age和income属性）&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;伪代码：&lt;/h5&gt;
&lt;p&gt;ID3(data, label, attrs)：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建决策树的Root节点；&lt;/li&gt;
&lt;li&gt;若lable中取值单一，则返回 &lt;code&gt;label=label&lt;/code&gt; 的单节点树；&lt;/li&gt;
&lt;li&gt;若attrs为空，则返回 &lt;code&gt;label=（data中取值最多的那个label）&lt;/code&gt; 的单节点树；&lt;/li&gt;
&lt;li&gt;否则：&lt;ol&gt;
&lt;li&gt;选取attrs中分类能力最好的属性作为Root的决策属性，记为A；&lt;/li&gt;
&lt;li&gt;对A的每一个可能取值vi：&lt;ol&gt;
&lt;li&gt;在Root添加一个分支对应 &lt;code&gt;A = vi&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;data_vi = data中 &lt;code&gt;A = vi&lt;/code&gt; 的子集，label_vi 表示 data_vi 所对应的目标属性取值；&lt;/li&gt;
&lt;li&gt;若 data_vi 为空集：&lt;ol&gt;
&lt;li&gt;在新分支下加一个叶子节点，节点 &lt;code&gt;label =（data中取值最多的那个label）&lt;/code&gt; ;&lt;/li&gt;
&lt;li&gt;否则，加一个子树：ID3(data_vi, label_vi, attrs);&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;结束&lt;/li&gt;
&lt;li&gt;返回Root&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;四、R语言实现&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;见&lt;a href="https://github.com/JackyCode/Data_Science"&gt;我的项目&lt;/a&gt;&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="data science"></category><category term="r"></category><category term="machine learning"></category><category term="classification"></category></entry><entry><title>数据科学之机器学习7: 决策树</title><link href="//jacky-sj/cls-decision-trees.html" rel="alternate"></link><published>2014-04-11T19:00:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-04-11:/cls-decision-trees.html</id><summary type="html">&lt;p&gt;决策树算法简介&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;一、开始&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;在介绍决策树的概念内容之前，先来初步了解一下决策树的流程。这是一个很简单的概念，通过一张简单的流程图就可以大致了解决策树是干什么的，怎么干的。&lt;/p&gt;
&lt;p&gt;&lt;img alt="decision trees" src="\images\article\a21\decisiontrees.jpg"&gt;&lt;/p&gt;
&lt;h3&gt;二、相关概念&lt;/h3&gt;
&lt;hr&gt;
&lt;h4&gt;1. 一些概念&lt;/h4&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;决策树学习是一种逼近离散值目标函数的方法。&lt;/li&gt;
&lt;li&gt;决策树通过把实例从根节点排列到某个叶子节点来分类实例，叶子的节点即为实例所属的分类。&lt;/li&gt;
&lt;li&gt;决策树上的每一个节点，指定了对实例的某一个属性的测试，并且，该节点的每一个后续分支对应该属性的一个可能值。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;2. 分类方法&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;从树的根节点开始，测试这个节点指定的属性，然后按照给定实例的该属性值对应的分支向下移动。然后以新节点作为根节点重复上面的过程直至结束。&lt;/p&gt;
&lt;h3&gt;三、 评价&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;通过决策树的流程，可以发现决策树的计算复杂度不高，而且其输出的结果易于理解，并且对缺失值不敏感。&lt;/p&gt;
&lt;p&gt;但是，正是由于其划分过于细致，可能会导致过度匹配问题(与回归中的overfitting类似)。&lt;/p&gt;
&lt;h3&gt;四、主要的决策树算法&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;从决策树的流程可以看出，&lt;strong&gt;如何选择属性作为节点以测试实例&lt;/strong&gt;是最为关键的一步。不同的算法采取了不同的方法，主要的决策树算法有这样几个：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID3&lt;/li&gt;
&lt;li&gt;C4.5 （数据挖掘十大算法之一，也是ID3算法的改进）&lt;/li&gt;
&lt;li&gt;C5.0 （C4.5的改进，适用于处理大数据集，采用Boosting方式提高模型准确率，因而又称BoostingTrees。）&lt;/li&gt;
&lt;li&gt;CART（数据挖掘十大算法之一）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下一篇就开始讲讲一些决策树的算法。&lt;/p&gt;</content><category term="data science"></category><category term="r"></category><category term="machine learning"></category><category term="classification"></category></entry><entry><title>数据科学之机器学习6: 分类之朴素贝叶斯</title><link href="//jacky-sj/cls-naive-bayes.html" rel="alternate"></link><published>2014-04-08T15:54:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-04-08:/cls-naive-bayes.html</id><summary type="html">&lt;p&gt;朴素贝叶斯算法&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;0、kNN算法的优缺点&lt;/h3&gt;
&lt;p&gt;与kNN算法一样，朴素贝叶斯算法也是数据挖掘十大算法之一。我们介绍kNN算法时，并没有讨论kNN算法的优缺点，这边首先看看这个问题。&lt;/p&gt;
&lt;p&gt;从构造kNN算法的过程可以看到，这个分类算法的&lt;strong&gt;精度很高&lt;/strong&gt;。因为这个算法计算了所有点与待分类点之间的相似度，然后去确定带分类点的类别。由此可见，这个算法对&lt;strong&gt;异常值并不敏感&lt;/strong&gt;。但是正是因为它需要计算所有点之间的距离，所以其&lt;strong&gt;复杂度是很高的&lt;/strong&gt;，换句话就是，如果数据量大的话，这个算法会很费时，并不高效。&lt;/p&gt;
&lt;h3&gt;一、贝叶斯决策&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;贝叶斯定理给出了条件概率之间的关系，是一个非常重要的定理。这里直接给出贝叶斯定理的结论：&lt;/p&gt;
&lt;div class="math"&gt;$$ P(B  \mid A) = \frac{P(A \mid B)P(B) }{P(A)} $$&lt;/div&gt;
&lt;p&gt;在贝叶斯决策理论里面，要判断点&lt;span class="math"&gt;\(x\)&lt;/span&gt;是否属于&lt;span class="math"&gt;\(C_i\)&lt;/span&gt;类，只要验证是否存在：&lt;/p&gt;
&lt;div class="math"&gt;$$ p(C_i \mid x) = \max_{j} \{ P(C_j \mid x) \} $$&lt;/div&gt;
&lt;p&gt;即是，使得 &lt;span class="math"&gt;\(p(C_i \mid x)\)&lt;/span&gt; 达到最大的那个 &lt;span class="math"&gt;\(C_i\)&lt;/span&gt; 就是 &lt;span class="math"&gt;\(x\)&lt;/span&gt; 所属的类别。&lt;/p&gt;
&lt;h3&gt;二、具体流程&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;要计算 &lt;span class="math"&gt;\(P(C_i \mid x)\)&lt;/span&gt;，那么就需要计算 &lt;span class="math"&gt;\(\frac{P(x \mid C_i)P(C_i )}{P(x)}\)&lt;/span&gt;，我们知道对于每一个 &lt;span class="math"&gt;\(P(C_i \mid x)\)&lt;/span&gt;，其计算公式中的分母都是 &lt;span class="math"&gt;\(P(x)\)&lt;/span&gt;，所以有：&lt;/p&gt;
&lt;div class="math"&gt;$$ P(C_i \mid x) \propto P(x \mid C_i)P(C_i ) $$&lt;/div&gt;
&lt;p&gt;所以我们实际计算时，只需要考虑上式右侧的大小即可。首先我们来确定一些符号的意思：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math"&gt;\(x = [x_1, x_2, \dots, x_p]\)&lt;/span&gt; 为一个带分类的项，&lt;span class="math"&gt;\(x_i\)&lt;/span&gt; 为其特征；&lt;/li&gt;
&lt;li&gt;data表示一个已知分类的数据集(&lt;span class="math"&gt;\(n \times p\)&lt;/span&gt; 的矩阵)，其每一行代表一个观测，每一列代表一个特征；&lt;/li&gt;
&lt;li&gt;label表示data中每一个数据对应的类别标签(&lt;span class="math"&gt;\( n \times 1\)&lt;/span&gt; 的矩阵)，比如 data 的第一行观测的类别就是 label 中的第一个取值；&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(C = [ C_1, C_2, \dots, C_m ]\)&lt;/span&gt; 为一个类别集合，一般来说 &lt;span class="math"&gt;\(m &amp;lt; p\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;步骤：&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在已知分类的数据集data中统计：&lt;/p&gt;
&lt;p&gt;
&lt;div class="math"&gt;$$P(C_i), i = 1, 2, \dots, m$$&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;div class="math"&gt;$$P(x_j \mid C_i), i = 1, 2, \dots, m; j = 1, 2, \dots p$$&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;计算&lt;/p&gt;
&lt;p&gt;
&lt;div class="math"&gt;$$P(x \mid C_i)P(C_i ) = P(C_i) \prod_{j=1}^{p} {P(x_j \mid C_i)}, i = 1, 2, \dots, m$$&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;若&lt;/p&gt;
&lt;p&gt;
&lt;div class="math"&gt;$$P(x \mid C_k)P(C_k) = \max\{ P(x \mid C_i)P(C_i ) \}$$&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;则 &lt;span class="math"&gt;\(x \in C_k\)&lt;/span&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;三、一些存在的问题&lt;/h3&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;当步骤的第2步中，&lt;span class="math"&gt;\(P(x \mid C_i)P(C_i ) = P(C_i) \prod_{j=1}^{p} {P(x_j \mid C_i)}, i = 1, 2, \dots, m\)&lt;/span&gt;，中 &lt;span class="math"&gt;\(P(x_j \mid C_i)\)&lt;/span&gt; 可能在样本较小时取值出现0，那么就会影响乘积；&lt;/li&gt;
&lt;li&gt;计算机计算时会出现精度问题，比如，如果 &lt;span class="math"&gt;\(P(x_j \mid C_i)\)&lt;/span&gt; 的值有很多都是非常小的（像0.000001），那么计算机在计算是会将其四舍五入成0。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;出现上面的情况应该怎么办呢？&lt;/p&gt;
&lt;p&gt;学数学的应该都清楚，遇到这种问题有一个很简单的处理方式，那就是取个对数。虽说取对数后会改变值的大小，但是取对数不会改变原本数据趋势，即原来大的数，取对数后还是大的。&lt;/p&gt;
&lt;p&gt;此外，对于 &lt;span class="math"&gt;\(P(x_j \mid C_i)\)&lt;/span&gt; 可能在样本较小时取值出现0的情况，处理也很简单，那就是将每一个 &lt;span class="math"&gt;\(x_j\)&lt;/span&gt; 的初值都设置成1，所有特征的基数都从1开始，不会影响结果。（这时需要注意，所有特征的初值都是1，对应的总数初值也会发生变化。）&lt;/p&gt;
&lt;h3&gt;四、R语言实现&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;见&lt;a href="https://github.com/JackyCode/Data_Science"&gt;我的项目&lt;/a&gt;&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="data science"></category><category term="r"></category><category term="machine learning"></category><category term="classification"></category></entry><entry><title>数据科学之机器学习5：分类之k-近邻算法</title><link href="//jacky-sj/cls-knn.html" rel="alternate"></link><published>2014-04-05T19:59:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-04-05:/cls-knn.html</id><summary type="html">&lt;p&gt;kNN 算法介绍&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;基本思想&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;kNN，k-Nearest Neighbor algorithm，也就这边的k-近邻算法，是数据挖掘十大算法之一，是一个比较简单的分类方法。&lt;/p&gt;
&lt;p&gt;其基本的思想是：对于一个输入样本（未知分类的样本），考虑其与测试样本中与之距离最近（特征最相似）的k个样本，用这k个样本中出现最多的分类作为输入样本的分类。&lt;/p&gt;
&lt;h4&gt;具体流程&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;对于输入样本中的每一个点，进行以下操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;计算点与测试样本中点的距离；&lt;/li&gt;
&lt;li&gt;取出与当前点距离最小的k个点；&lt;/li&gt;
&lt;li&gt;确定k个点的分类，计算各个分类的频数；&lt;/li&gt;
&lt;li&gt;返回频数最高的类别，作为该输入点的预测分类。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;距离的计算&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;上面一直在说，计算输入样本中点与测试样本中点之间的距离，那么这个距离应该怎么计算呢？这个距离一般就是使用欧式距离：&lt;/p&gt;
&lt;div class="math"&gt;$$ d = \sqrt{(x - y)^T(x - y)} $$&lt;/div&gt;
&lt;p&gt;其中 &lt;span class="math"&gt;\(x^T=[x_1, x_2,\dots,x_n], y^T=[y_1,y_2,\dots,y_n]\)&lt;/span&gt;。二维的表示就是：&lt;/p&gt;
&lt;div class="math"&gt;$$ d = \sqrt{(x - y)^T(x - y)} = \sqrt{(x_1 - y_1)^2 + (x_2 - y_2)^2} $$&lt;/div&gt;
&lt;h4&gt;R语言实现&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;见&lt;a href="https://github.com/JackyCode/Data_Science/tree/master/kNN"&gt;我的github&lt;/a&gt;。&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="data science"></category><category term="r"></category><category term="machine learning"></category><category term="classification"></category></entry><entry><title>数据科学之机器学习4：线性回归3</title><link href="//jacky-sj/linear-regression3.html" rel="alternate"></link><published>2014-04-02T18:51:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-04-02:/linear-regression3.html</id><summary type="html">&lt;p&gt;线性回归 3&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;这是介绍线性回归的最后一篇，首先回顾一下之前的两篇。第一篇主要就是介绍了如何去估计回归系数得到回归方程，以及在R语言中如何使用自带的函数去实现。第二篇主要介绍了对于回归方程和回归系数的显著性检验，以及给出了我自己写的一个处理线性回归的函数。&lt;/p&gt;
&lt;p&gt;这一篇介绍线性回归中回归诊断的一些问题，也就是估计出回归方程，检验了回归方程的显著性以及回归系数的显著性后，对这个模型所做的进一步的诊断分析。然后对存在的问题进行探讨，选择不同的方式去解决这些问题。这大致可以分成三块：残差分析，影响分析以及共线性问题。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;一、残差分析&lt;/h4&gt;
&lt;hr&gt;
&lt;h5&gt;1. 残差&lt;/h5&gt;
&lt;hr&gt;
&lt;p&gt;首先看一看残差的定义，常用的残差大致有三种：残差，标准化残差以及学生化残差：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;残差：&lt;span class="math"&gt;\(\hat{\varepsilon} = y - \hat{y} = (1-H)y\)&lt;/span&gt;,其中 &lt;span class="math"&gt;\(H=X(X^TX)^{-1}X\)&lt;/span&gt; 称作帽子矩阵；&lt;/li&gt;
&lt;li&gt;标准化残差：&lt;span class="math"&gt;\(ZRE = \hat{\varepsilon} / \hat{\sigma}\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;学生化残差：&lt;span class="math"&gt;\(SRE_i = \hat{\varepsilon}_i / (\hat{\sigma}\sqrt{1-h_{ii}})\)&lt;/span&gt;，其中 &lt;span class="math"&gt;\(h_{ii}\)&lt;/span&gt; 为帽子矩阵对角线上第&lt;span class="math"&gt;\(i\)&lt;/span&gt;个元素。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;R语言中&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;residuals(),rstandard(),rstudent()&lt;/code&gt;函数计算残差，标准化残差以及学生化残差。具体用法，请使用&lt;code&gt;help&lt;/code&gt;函数查看。&lt;/p&gt;
&lt;hr&gt;
&lt;h5&gt;2. 残差图&lt;/h5&gt;
&lt;hr&gt;
&lt;p&gt;以残差为纵坐标，观测值、预测值活则观测时间等等作为横坐标的散点图，称为&lt;strong&gt;残差图&lt;/strong&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;R语言中&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;model &lt;span class="o"&gt;=&lt;/span&gt; lm&lt;span class="p"&gt;(&lt;/span&gt;y&lt;span class="o"&gt;~&lt;/span&gt;x1&lt;span class="o"&gt;+&lt;/span&gt;x2&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;y_pred &lt;span class="o"&gt;=&lt;/span&gt; predict&lt;span class="p"&gt;(&lt;/span&gt;model&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;y_res &lt;span class="o"&gt;=&lt;/span&gt; residuals&lt;span class="p"&gt;(&lt;/span&gt;model&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;plot&lt;span class="p"&gt;(&lt;/span&gt;y_res &lt;span class="o"&gt;~&lt;/span&gt; y_pred&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;h5&gt;3. 异方差问题&lt;/h5&gt;
&lt;hr&gt;
&lt;h6&gt;a. 问题的提出&lt;/h6&gt;
&lt;hr&gt;
&lt;p&gt;在进行回归方程估计之前，一般都会假设误差的方差是齐性的。如果残差图出现类似下面的情况，则这批数据可能存在异方差问题，即方差非齐性。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;随着横坐标的增大，纵坐标的值波动越来越大；&lt;/li&gt;
&lt;li&gt;随着横坐标的增大，纵坐标的值波动越来越小；&lt;/li&gt;
&lt;li&gt;随着横坐标的增大，纵坐标的值波动复杂多变，没有系统关系；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;大部分时候，考虑前两种就可以了。那么具体如何数值化地检验异方差呢，一般使用的是等级相关系数法，这里不做介绍(可到线性回归的书籍中寻找)。&lt;/p&gt;
&lt;hr&gt;
&lt;h6&gt;b. 问题的解决&lt;/h6&gt;
&lt;hr&gt;
&lt;p&gt;一般有两种方式解决异方差问题，一种是加权最小二乘；另一种是对因变量作适当的变化。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;加权最小二乘&lt;/p&gt;
&lt;p&gt;即是将回归系数的估计转化成：&lt;span class="math"&gt;\(\hat{\beta}=(X^TWX)^{-1}X^TWy\)&lt;/span&gt;，其中 &lt;span class="math"&gt;\(W\)&lt;/span&gt; 是一个对角矩阵，用于给每一个数据点加上一个权重。一般使用“核”来对附近的点赋予较高的权重，常用的核就是高斯核，其对应的权重为：&lt;/p&gt;
&lt;p&gt;
&lt;div class="math"&gt;$$w_{ii}=exp(\frac{\|x^{(i)}-x\|}{-2k^2})$$&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;从上式可以看出，点&lt;span class="math"&gt;\(x\)&lt;/span&gt;离&lt;span class="math"&gt;\(x^{(i)}\)&lt;/span&gt;越近，所得到的权重越高。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对因变量作适当变化&lt;/p&gt;
&lt;p&gt;常用的变换有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math"&gt;\(z = \sqrt{y}\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(z = ln(y)\)&lt;/span&gt;（对数变换）&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(z = 1/y\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(z = \frac{x^{\lambda}-1}{\lambda}\)&lt;/span&gt;(Box-Cox变换)，其中&lt;span class="math"&gt;\(\lambda=0\)&lt;/span&gt;时，即是对数变换&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h5&gt;4. 异常点&lt;/h5&gt;
&lt;hr&gt;
&lt;h6&gt;a. 问题的提出&lt;/h6&gt;
&lt;hr&gt;
&lt;p&gt;一般将标准化残差的绝对值大于等于2的称为可疑点；将标准化残差的绝对值大于等于3的称为异常点。&lt;/p&gt;
&lt;hr&gt;
&lt;h6&gt;b. 问题的解决&lt;/h6&gt;
&lt;hr&gt;
&lt;p&gt;一般来说，剔除异常数据即可。&lt;/p&gt;
&lt;hr&gt;
&lt;h5&gt;5. 自相关问题&lt;/h5&gt;
&lt;hr&gt;
&lt;p&gt;在作回归之前，总是会假设 &lt;span class="math"&gt;\(cov(\varepsilon_i, \varepsilon_j)=0,\forall i \neq j\)&lt;/span&gt;。但是实际情况下，可能并不满足这个假设，这就是存在了自相关问题。对于自相关问题，一般使用残差图，自相关系数以及DW检验去进行检验；而处理的方式一般是：迭代法和差分法。这里不做详细介绍，感兴趣的可以去找找相关材料。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;二、影响分析&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;分析观测值对回归结果的影响，从而找出对回归结果影响较大的观测点的分析方法叫做影响分析。一般使用Cook距离去度量第&lt;span class="math"&gt;\(i\)&lt;/span&gt;个观测值对回归影响大小，Cook距离的定义如下：&lt;/p&gt;
&lt;div class="math"&gt;$$D_i(M,MSE) = \frac{(\hat{\beta}_{(i)}-\hat{\beta})^TM(\hat{\beta}_{(i)}-\hat{\beta})}{MSE}$$&lt;/div&gt;
&lt;p&gt;其中，&lt;span class="math"&gt;\(M\)&lt;/span&gt;为观测数据的离差阵，&lt;span class="math"&gt;\(MSE\)&lt;/span&gt;为回归模型的均方误差。一般 &lt;span class="math"&gt;\(\|D_i\| \geqslant 4/n\)&lt;/span&gt; 时，称其为强影响点。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;R语言中&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;cooks.distance()&lt;/code&gt;函数计算Cook距离。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;三、共线性诊断&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;共线性是指，在多元线性回归中，自变量之间存在线性关系或者近似线性关系。如果出现这种情况，那么在模型内部就会隐藏部分变量的显著性，也会导致参数估计的误差增大，影响模型的稳定性。&lt;/p&gt;
&lt;hr&gt;
&lt;h5&gt;a. 检验方法&lt;/h5&gt;
&lt;hr&gt;
&lt;p&gt;常用的检验方法有特征值法，条件数和方差膨胀因子（VIF）。&lt;/p&gt;
&lt;hr&gt;
&lt;h6&gt;特征值法&lt;/h6&gt;
&lt;hr&gt;
&lt;p&gt;首先介绍一个结论：当矩阵&lt;span class="math"&gt;\(X^TX\)&lt;/span&gt;至少有一个特征根为0时，&lt;span class="math"&gt;\(X\)&lt;/span&gt; 的列向量间必存在多重共线性。&lt;/p&gt;
&lt;p&gt;即可证：&lt;span class="math"&gt;\(X^TX\)&lt;/span&gt; 有多少个特征根接近于零，设计阵 &lt;span class="math"&gt;\(X\)&lt;/span&gt; 就有多少个多重共线性。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;在R语言中&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以使用&lt;code&gt;eigen()&lt;/code&gt;函数去计算特征值和特征向量。&lt;/p&gt;
&lt;hr&gt;
&lt;h6&gt;条件数&lt;/h6&gt;
&lt;hr&gt;
&lt;p&gt;上述的特征值法中，特征根近似为0，这个标准好想并不明确。那么这边就给出一个条件数的定义：&lt;/p&gt;
&lt;div class="math"&gt;$$k_i = \frac{\lambda_m}{\lambda_i}$$&lt;/div&gt;
&lt;p&gt;其中，&lt;span class="math"&gt;\(\lambda_m\)&lt;/span&gt; 为最大的那个特征根。一般认为，若&lt;span class="math"&gt;\(k_i\)&lt;/span&gt;介于10到30之间为弱相关；在30到100之间为中等相关；超过100为强相关。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;在R语言中&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以使用&lt;code&gt;kappa()&lt;/code&gt;函数计算条件数。&lt;/p&gt;
&lt;hr&gt;
&lt;h6&gt;VIF&lt;/h6&gt;
&lt;hr&gt;
&lt;p&gt;定义VIF为：&lt;/p&gt;
&lt;div class="math"&gt;$$VIF_i = \frac{\text{第i个回归系数的方差}}{\text{自变量不相关时第i个回归系数的方差}} = \frac{1}{1-R^2_i} = \frac{1}{TOL_i}$$&lt;/div&gt;
&lt;p&gt;其中 &lt;span class="math"&gt;\(TOL_i\)&lt;/span&gt; 称为容忍度；&lt;span class="math"&gt;\(R^2_i\)&lt;/span&gt; 为自变量 &lt;span class="math"&gt;\(x_i\)&lt;/span&gt; 对其余自变量的复决定系数。一般认为，VIF超过10，模型就存在共线性问题。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;在R语言中&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以使用&lt;code&gt;vif()&lt;/code&gt;函数计算VIF的值。&lt;/p&gt;
&lt;hr&gt;
&lt;h5&gt;b. 多重共线性的处理&lt;/h5&gt;
&lt;hr&gt;
&lt;p&gt;一般有这样几种处理方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;剔除一些不重要的解释变量&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用变量选择的方式剔除部分变量，作回归；&lt;/li&gt;
&lt;li&gt;检验VIF，若存在共线性，删除VIF值最大的变量，作回归；&lt;/li&gt;
&lt;li&gt;再次检验VIF，若还存在共线性，再删除其中VIF值最大的那个；&lt;/li&gt;
&lt;li&gt;重复直至消除共线性。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;增大样本容量&lt;/p&gt;
&lt;p&gt;当变量的个数接近样本容量的数值时，自变量间容易产生多重共线性。所以增大样本容量是解决多重共线性的一种方式，但是在现实中，这种做法基本不可能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;主成分回归&lt;/p&gt;
&lt;p&gt;这是一个比较大的主题，这里不做介绍。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有偏估计等等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3&gt;最后&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;到这里，除了变量选择问题，线性回归的内容基本上就已经梳理了一遍。变量选择问题，方法简单的非常简单，难的非常难（像lasso），所以暂时还不想写这些内容。&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="data science"></category><category term="r"></category><category term="machine learning"></category><category term="regression"></category></entry><entry><title>数据科学之机器学习3：线性回归2</title><link href="//jacky-sj/linear-regression2.html" rel="alternate"></link><published>2014-04-01T16:56:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-04-01:/linear-regression2.html</id><summary type="html">&lt;p&gt;线性回归 2&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;上一篇简单介绍了线性回归中系数估计的问题，给出了一元以及多元情况下，系数估计值的表达式！此外，还给出了在R语言中如何使用自带的函数计算系数估计值。&lt;/p&gt;
&lt;p&gt;这一篇，打算介绍一下线性回归中的一些显著性检验问题。这个就是完全属于统计学中的理论内容，不过依旧有着很强的实际意义。简单来说，显著性检验不能通过，说明你的线性回归的效果不好，可能你就需要选择其它的方式去处理你手头的数据，而不是选择线性回归了。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;一、回归方程的显著性检验&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;考虑回归方程是否显著，意思就是查看自变量 &lt;span class="math"&gt;\(x_1,x_2,\dots,x_p\)&lt;/span&gt; 从整体上是否对因变量 &lt;span class="math"&gt;\(y\)&lt;/span&gt; 有显著的影响。则，我们可以考虑这样的假设检验问题：&lt;/p&gt;
&lt;div class="math"&gt;$$ H_0:\beta_0=\beta_1=\dots=\beta_p=0;~H_1:\beta_0,\beta_1,\dots,\beta_p\text{不全为0}$$&lt;/div&gt;
&lt;p&gt;显然，如果原假设成立的话，自变量对因变量的影响不大，也就是用线性回归模型来解释就显得不合适了。&lt;/p&gt;
&lt;p&gt;在正态假设下，原假设 &lt;span class="math"&gt;\(H_0\)&lt;/span&gt; 成立时，有 &lt;span class="math"&gt;\(F\)&lt;/span&gt; 检验统计量：&lt;/p&gt;
&lt;div class="math"&gt;$$ F = \frac{SSR/p}{SSE/(n-p-1)} \sim F(p,n-p-1) $$&lt;/div&gt;
&lt;p&gt;其中 &lt;span class="math"&gt;\(SSR=\sum_{i=1}^{n}{(\hat{y}_i-\overline{y})^2}\)&lt;/span&gt; 为回归平方和，&lt;span class="math"&gt;\(SSE=\sum_{i=1}^{n}{(y_i-\hat{y}_i)^2}\)&lt;/span&gt; 为残差平方和。对于给定的显著性水平 &lt;span class="math"&gt;\(\alpha\)&lt;/span&gt;，拒绝域为：&lt;span class="math"&gt;\(\{F \geqslant F_{1-\alpha}(p,n-p-1)\}\)&lt;/span&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;二、回归系数的显著性检验&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;显然，线性回归中很有可能就存在某个自变量对因变量的影响很小，那么它的回归系数就会接近0.因此有如下的假设检验问题：&lt;/p&gt;
&lt;div class="math"&gt;$$H_{0j}:\beta_j = 0; ~ H_{1j}:\beta_j \neq 0, ~ j=0,1,\dots,p$$&lt;/div&gt;
&lt;p&gt;在原假设成立的条件下，&lt;span class="math"&gt;\(t\)&lt;/span&gt;统计量有：&lt;/p&gt;
&lt;div class="math"&gt;$$t_j = \frac{\hat{\beta}_j}{\sqrt{c_{jj}}\hat{\sigma}} \sim t(n-p-1)$$&lt;/div&gt;
&lt;p&gt;其中，&lt;/p&gt;
&lt;div class="math"&gt;$$(c_{ij})=(X^TX)^{-1},i,j=0,1,\dots,p;~\hat{\sigma}=\sqrt{\frac{1}{n-p-1}\sum_{i=1}^{n}{(y_i-\hat{y}_i)^2}}$$&lt;/div&gt;
&lt;p&gt;。对于给定的显著性水平&lt;span class="math"&gt;\(\alpha\)&lt;/span&gt;，拒绝域为：&lt;span class="math"&gt;\(\{\|t_j\| \geqslant t_{\alpha/2}\}\)&lt;/span&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;三、R语言中的实现&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;在上一篇中可以看到，&lt;code&gt;lm&lt;/code&gt;函数加上&lt;code&gt;summary&lt;/code&gt;函数会有很多的输出内容。其实，那些输出中就含有上述的假设检验的结果，很容易就可以找到，这里不做阐述！&lt;/p&gt;
&lt;p&gt;我自己也写了一个关于线性回归的R语言函数，托管在&lt;a href="https://github.com/JackyCode/Data_Science/tree/master/Linear_Regression"&gt;我的github&lt;/a&gt;上面，函数内部对于线性回归的过程大都涉及到了，有兴趣可以看看。&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="data science"></category><category term="r"></category><category term="machine learning"></category><category term="regression"></category></entry><entry><title>数据科学之机器学习2：线性回归1</title><link href="//jacky-sj/linear-regression1.html" rel="alternate"></link><published>2014-03-30T19:02:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-03-30:/linear-regression1.html</id><summary type="html">&lt;p&gt;线性回归 1&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;一、回归分析&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;在统计分析中，最大的两支应该算是相关分析和回归分析。而回归分析应该是统计学的核心。回归分析，就是研究因变量 &lt;span class="math"&gt;\(y\)&lt;/span&gt; 与自变量 &lt;span class="math"&gt;\(x\)&lt;/span&gt; 之间的关系，存在条件数学期望：&lt;span class="math"&gt;\(f(x)=E(y\|x)\)&lt;/span&gt;。此时有：&lt;span class="math"&gt;\(y=f(x)+\varepsilon\)&lt;/span&gt;，一般假设&lt;span class="math"&gt;\(\varepsilon \sim N(0,\sigma^2)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;回归分析有很多变种：简单线性回归；多项式回归；Logistic回归；非参数回归；非线性回归等等。本篇就介绍最简单的线性回归，首先来看看一元线性回归。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;二、一元线性回归&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;对于一元线性回归来说，&lt;span class="math"&gt;\(f(x)\)&lt;/span&gt; 就是线性的，则有：&lt;span class="math"&gt;\(f(x)=E(y\|x)=\beta_0 + \beta_1 x\)&lt;/span&gt;。通过已知的数据，可以估计出 &lt;span class="math"&gt;\(\beta_0,\beta_1\)&lt;/span&gt; 的估计值：&lt;span class="math"&gt;\(\hat{\beta}_0,\hat{\beta}_1\)&lt;/span&gt;。那么就有 &lt;span class="math"&gt;\(y\)&lt;/span&gt; 的预测值：&lt;span class="math"&gt;\(\hat{y} = \hat{\beta}_0 + \hat{\beta}_1 x\)&lt;/span&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h5&gt;1. 如何计算 &lt;span class="math"&gt;\(\beta_0,\beta_1\)&lt;/span&gt; 的估计值 &lt;span class="math"&gt;\(\hat{\beta}_0,\hat{\beta}_1\)&lt;/span&gt; 呢？&lt;/h5&gt;
&lt;hr&gt;
&lt;p&gt;定义离差平方和：&lt;/p&gt;
&lt;div class="math"&gt;$$Q(\beta_0,\beta_1) = \sum_{i=1}^{n}(y_i-f(x_i))^2$$&lt;/div&gt;
&lt;p&gt;显然，我们希望 &lt;span class="math"&gt;\(f(x_i)\)&lt;/span&gt; 的值与真实值 &lt;span class="math"&gt;\(y_i\)&lt;/span&gt; 越接近越好。那么就是需要离差平方和越小越好。则得到目标：&lt;/p&gt;
&lt;div class="math"&gt;$$ \min_{\beta_0,\beta_1}{\sum_{i=1}^{n}(y_i-f(x_i))^2} $$&lt;/div&gt;
&lt;p&gt;如何寻找 &lt;span class="math"&gt;\(\hat{\beta}_0,\hat{\beta}_1\)&lt;/span&gt; 使得上面方程达到最小呢？这个就需要对其对 &lt;span class="math"&gt;\(\hat{\beta}_0,\hat{\beta}_1\)&lt;/span&gt; 求偏导，得到：&lt;/p&gt;
&lt;div class="math"&gt;$$\frac{\partial Q}{\partial \beta_0}=-2\sum_{i=1}^{n}{(y_i-\beta_0-\beta_1x_i)}$$&lt;/div&gt;
&lt;div class="math"&gt;$$\frac{\partial Q}{\partial \beta_1}=-2\sum_{i=1}^{n}{(y_i-\beta_0-\beta_1x_i)x_i}$$&lt;/div&gt;
&lt;p&gt;令上述两式都等于0，计算得到：&lt;/p&gt;
&lt;div class="math"&gt;$$\hat{\beta}_0=\overline{y}-\hat{\beta}_1\overline{x}$$&lt;/div&gt;
&lt;div class="math"&gt;$$\hat{\beta}_1=\frac{\sum_{i=1}^{n}{(x_i-\overline{x})(y_i-\overline{x})}}{\sum_{i=1}^{n}{(x-\overline{x})^2}}$$&lt;/div&gt;
&lt;p&gt;这样就得到 &lt;span class="math"&gt;\(\beta_0,\beta_1\)&lt;/span&gt; 的估计值 &lt;span class="math"&gt;\(\hat{\beta}_0,\hat{\beta}_1\)&lt;/span&gt;。这个方法就叫做OLS，即普通最小二乘(ordinary least squares)。&lt;/p&gt;
&lt;hr&gt;
&lt;h5&gt;2. R语言实现&lt;/h5&gt;
&lt;hr&gt;
&lt;p&gt;在R语言中有自带的函数可以处理线性回归，那就是&lt;code&gt;lm&lt;/code&gt;函数。这里使用自带的数据&lt;code&gt;cars&lt;/code&gt;做演示：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;cars&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 使用数据集cars，与with函数类似&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; lingre &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; lm&lt;span class="p"&gt;(&lt;/span&gt;dist &lt;span class="o"&gt;~&lt;/span&gt; speed&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;lingre&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;Call&lt;span class="o"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;lm&lt;span class="p"&gt;(&lt;/span&gt;formula &lt;span class="o"&gt;=&lt;/span&gt; dist &lt;span class="o"&gt;~&lt;/span&gt; speed&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;Residuals&lt;span class="o"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    Min      &lt;span class="m"&gt;1&lt;/span&gt;Q  Median      &lt;span class="m"&gt;3&lt;/span&gt;Q     Max&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;-29.069&lt;/span&gt;  &lt;span class="m"&gt;-9.525&lt;/span&gt;  &lt;span class="m"&gt;-2.272&lt;/span&gt;   &lt;span class="m"&gt;9.215&lt;/span&gt;  &lt;span class="m"&gt;43.201&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;Coefficients&lt;span class="o"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            Estimate Std. Error t value Pr&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;|&lt;/span&gt;&lt;span class="kp"&gt;t&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;(&lt;/span&gt;Intercept&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;-17.5791&lt;/span&gt;     &lt;span class="m"&gt;6.7584&lt;/span&gt;  &lt;span class="m"&gt;-2.601&lt;/span&gt;   &lt;span class="m"&gt;0.0123&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;speed         &lt;span class="m"&gt;3.9324&lt;/span&gt;     &lt;span class="m"&gt;0.4155&lt;/span&gt;   &lt;span class="m"&gt;9.464&lt;/span&gt; &lt;span class="m"&gt;1.49e-12&lt;/span&gt; &lt;span class="o"&gt;***&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;---&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;Signif. codes&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="m"&gt;0&lt;/span&gt; ‘&lt;span class="o"&gt;***&lt;/span&gt;’ &lt;span class="m"&gt;0.001&lt;/span&gt; ‘&lt;span class="o"&gt;**&lt;/span&gt;’ &lt;span class="m"&gt;0.01&lt;/span&gt; ‘&lt;span class="o"&gt;*&lt;/span&gt;’ &lt;span class="m"&gt;0.05&lt;/span&gt; ‘&lt;span class="m"&gt;.&lt;/span&gt;’ &lt;span class="m"&gt;0.1&lt;/span&gt; ‘ ’ &lt;span class="m"&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;Residual standard error&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15.38&lt;/span&gt; on &lt;span class="m"&gt;48&lt;/span&gt; degrees of freedom&lt;/span&gt;
&lt;span class="code-line"&gt;Multiple R&lt;span class="o"&gt;-&lt;/span&gt;squared&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="m"&gt;0.6511&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    Adjusted R&lt;span class="o"&gt;-&lt;/span&gt;squared&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="m"&gt;0.6438&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="bp"&gt;F&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;statistic&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;89.57&lt;/span&gt; on &lt;span class="m"&gt;1&lt;/span&gt; and &lt;span class="m"&gt;48&lt;/span&gt; DF&lt;span class="p"&gt;,&lt;/span&gt;  p&lt;span class="o"&gt;-&lt;/span&gt;value&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.49e-12&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; plot&lt;span class="p"&gt;(&lt;/span&gt;dist &lt;span class="o"&gt;~&lt;/span&gt; speed&lt;span class="p"&gt;,&lt;/span&gt; pch&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 画出散点图&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; abline&lt;span class="p"&gt;(&lt;/span&gt;lingre&lt;span class="p"&gt;,&lt;/span&gt; col&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 添加拟合直线&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;detach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;cars&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 使用完记得释放&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;从这里可以得到回归方程：&lt;span class="math"&gt;\(\hat{dist} = -17.5791 + 3.9324 \times speed\)&lt;/span&gt;。（对于其它的结果是什么意思，可以去查看线性回归的相关书籍）&lt;/p&gt;
&lt;p&gt;另外，得到拟合直线的图像：&lt;/p&gt;
&lt;p&gt;&lt;img alt="lingre_one" src="\images\article\a16\lingre_one.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;三、多元线性回归&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;对于多元线性回归来说，其计算方式与一元线性回归类似，区别在于，多元的时候需要利用矩阵来处理。首先看一下回归模型：&lt;/p&gt;
&lt;div class="math"&gt;$$ y = \beta_0 + \beta_1 x_1 + \beta_2 x_2 + \dots + \beta_p x_p + \varepsilon $$&lt;/div&gt;
&lt;p&gt;其中 &lt;span class="math"&gt;\(p\)&lt;/span&gt; 代表自变量的个数。&lt;/p&gt;
&lt;p&gt;若取 &lt;span class="math"&gt;\(x^T_0=[1, 1, \dots, 1]_{1 \times n}\)&lt;/span&gt;，则可将上述模型改写成：&lt;span class="math"&gt;\(y=X\beta+\varepsilon\)&lt;/span&gt;。其中：&lt;/p&gt;
&lt;div class="math"&gt;$$y^T=[y_1,y_2,\dots,y_n], X=[x_0,x_1,\dots,x_p], \beta^T=[\beta_0,\beta_1,\dots,\beta_p], \varepsilon^T=[\varepsilon_1,\varepsilon_2,\dots,\varepsilon_n]$$&lt;/div&gt;
&lt;p&gt;其中 &lt;span class="math"&gt;\(x^T_i=[x_{1i},x_{2i},\dots,x_{ni}]\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;这样我们就可以将离差平方和 &lt;span class="math"&gt;\(\sum_{i=1}^{n}{(y_i-\beta_0 + \beta_1 x_1 + \beta_2 x_2 + \dots + \beta_p x_p)^2}\)&lt;/span&gt; 写成矩阵形式：&lt;/p&gt;
&lt;div class="math"&gt;$$(y-X\beta)^T(y-X\beta)$$&lt;/div&gt;
&lt;p&gt;求导可得：&lt;span class="math"&gt;\(-2X^T(y-X\beta)\)&lt;/span&gt; (这里用到矩阵求导的知识，一般介绍&lt;strong&gt;线性模型&lt;/strong&gt;的书籍中会讲到；当然也可以直接对上面不是矩阵形式的离差平和求导)。令其等于0，可得：&lt;/p&gt;
&lt;div class="math"&gt;$$\hat{\beta} = (X^TX)^{-1}X^Ty$$&lt;/div&gt;
&lt;hr&gt;
&lt;h5&gt;R语言实现&lt;/h5&gt;
&lt;hr&gt;
&lt;p&gt;对于R语言的实现，依旧使用&lt;code&gt;lm&lt;/code&gt;函数：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;lingre_mul &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; lm&lt;span class="p"&gt;(&lt;/span&gt;y &lt;span class="o"&gt;~&lt;/span&gt; x1 &lt;span class="o"&gt;+&lt;/span&gt; x2&lt;span class="p"&gt;,&lt;/span&gt; data&lt;span class="o"&gt;=&lt;/span&gt;datasets&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;lingre_mul&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这里就不再用实际数据去演示了。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;四、最后&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;至此，就把线性回归的基础内容介绍完了。但其实线性回归还存在很多其它的问题。比如说回归诊断（就是检查回归的效果），变量选择等等等等。感兴趣的话，可以找本讲线性回归的书看看，有很多！&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="data science"></category><category term="r"></category><category term="machine learning"></category><category term="regression"></category></entry><entry><title>数据科学之机器学习1：简介</title><link href="//jacky-sj/data-science-introduction-to-machine-learning.html" rel="alternate"></link><published>2014-03-30T16:39:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-03-30:/data-science-introduction-to-machine-learning.html</id><summary type="html">&lt;p&gt;简单说说机器学习&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;上一篇“&lt;a href="http://jackycode.github.io/blog/2014/03/27/an-introduction-to-data-science/"&gt;数据科学简介&lt;/a&gt;”简单地说了一下数据科学是什么，以及它包罗的东西。这一篇打算简单介绍一下&lt;strong&gt;机器学习&lt;/strong&gt;，并理一理机器学习中涉及的内容。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;机器学习的定义&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;一般来说，教科书介绍一样东西，首先会给它下一个确切的定义。不过，对于机器学习的定义，我还真不知道该怎么去下。有太多的版本，太多的述说方式，不知道用哪个好。这里就列举一些我觉得有代表性的，讲的容易懂的那些定义。对于机器学习是什么，看看这些定义，应该就能够有个大致的了解了。&lt;/p&gt;
&lt;p&gt;首先，在“&lt;a href="http://www.amazon.cn/Machine-Learning-The-Art-and-Science-of-Algorithms-That-Make-Sense-of-Data-Flach-Peter/dp/1107422221/ref=tmm_pap_title_0"&gt;Machine Learning: the art and science of algorithms that make sense of data&lt;/a&gt;”一书中，有这样一个定义：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Machine Learning is the systematic study of algorithms and systems that improve their knowledge or performance with experience.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个定义说的比较简单直白，就是说，机器学习就是研究如何通过经验(其实就是数据)去改进性能的算法(这个翻译学得不好，见谅！)。我们可以简单这样理解，机器学习就是研究这么一类算法，通过这类算法呢，系统可以从数据中获取信息来提升自己的性能。最简单的说法就是将数据转换成有用的信息。&lt;/p&gt;
&lt;p&gt;在“&lt;a href="http://www.amazon.cn/Machine-Learning-The-Art-and-Science-of-Algorithms-That-Make-Sense-of-Data-Flach-Peter/dp/1107422221/ref=tmm_pap_title_0"&gt;Machine Learning: the art and science of algorithms that make sense of data&lt;/a&gt;”书中，还有这么一句话，将机器学习的流程说的很清楚：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Machine learning is concerned with using the right features to build the right models that achieve the right task.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这句话就是说，机器学习关心的就是：如何通过对特征(数据)建立模型去完成一些任务。在Andrew Ng的机器学习视频中，还列出了Tom Mitchell给出的定义，与上面的说法有些相近：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A computer program is said to learn from experience E with respect to some task T and some performance measure P, if its performance on T, as measured by P, improves with experience E.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;上一篇博文里曾说，数据科学是统计、计算机科学以及专业知识的结合。而其实，机器学习就是统计与计算机科学的结合。正因如此，机器学习是数据科学的核心。&lt;/em&gt;&lt;/strong&gt;简单来说，机器学习就是：研究让机器通过学习过去的经验，达到提高处理相同任务能力的算法。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;机器学习的类别&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;机器学习大致可以分为两类：监督学习(supervised learning)和无监督学习(unsupervised learning)。&lt;/p&gt;
&lt;p&gt;如何区分呢？&lt;strong&gt;区别就在于，测试数据有没有给出确切的类别或者结果。若给出了就是监督学习，若没有则是无监督学习&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;比如说回归：其给定的测试样本中，一组自变量的值肯定对应一个确定的因变量的值；再说分类：对于给出的测试样本中的每一个数据，其都会有自己所属的类别。所以回归与分类就属于监督学习的范畴，也就是可以通过既定的数据去做预测。&lt;/p&gt;
&lt;p&gt;而无监督学习不同，其给出的数据不存在任何其它信息，比方说聚类，给你一批数据，没有任何信息，让你把数据分成几个类别。一般来说，这时候就需要计算数据之间的相似度(距离)，然后把距离近的归位一类。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;最后&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;到这里，基本上来说，机器学习是干什么的应该有了一些了解了。至于机器学习的分类，监督学习和无监督学习还不明白也不要紧。等弄明白了回归，分类以及聚类等等的是干什么的，自然就明白这两者之间的区别了。&lt;/p&gt;</content><category term="data science"></category><category term="r"></category><category term="machine learning"></category></entry><entry><title>数据科学简介</title><link href="//jacky-sj/an-introduction-to-data-science.html" rel="alternate"></link><published>2014-03-27T14:39:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-03-27:/an-introduction-to-data-science.html</id><summary type="html">&lt;p&gt;数据科学简介&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;对于这两年渐渐兴起的大数据，云计算之类的技术，相信没有人会陌生。即便不知道这个东西是什么，但也是应该听得耳朵起茧子了。归结原因呢，出现这些技术实在是因为现在的数据越来越多，以前的很多数据分析技术越来越不合适。即便是简单的最小二乘线性回归，直接放到大数据上用，跑起来也是够累的。这时候，各种处理大数据的技术就纷纷崛起了，和之前的云计算相同的就是，大数据也改变了计算机原本的使用方式。&lt;/p&gt;
&lt;p&gt;OK，说说数据科学吧。数据科学，Data Science，这个玩意儿最早有一本书，叫做“What is Data Science”，O'Reilly出版的（不得不说其出版了太多太牛太厉害的书籍材料，牛得不需要解释）。数据科学就像是一个综合体，包罗的东西非常多，大致有三个方面。&lt;/p&gt;
&lt;h5&gt;第一，概率统计（数学）&lt;/h5&gt;
&lt;p&gt;这个提供了大数据的很多理论基础。大数据的处理技术，需要用到非常之多的概率统计学知识。而要想学好概率统计，那你数学得先学学好才行。简单罗列一下：概率论基础，统计学基础，高等概率论，测度论，高等参数统计，随机过程等等等等。这些内容都是理论基础，要是理论学的不咋样，估计折腾大数据也就是玩玩工具，弄点儿结果出来。话说，如果真没学好理论，能不能把结果解释清楚还需要质疑，更何况自己去设计改进一个技术算法呢。&lt;/p&gt;
&lt;p&gt;嗯，说到这，回过头去看看泛函分析吧~&lt;/p&gt;
&lt;h5&gt;第二，计算机科学&lt;/h5&gt;
&lt;p&gt;这个就提供了大数据处理的工具平台了。那么多的数据，你就是理论学得再牛，没有计算机，你自己手算试试！你说你要处理数据，OK，计算机提供了工具平台，那么你就得学习如何运用这些系统环境吧，那么就得学习&lt;strong&gt;分布式计算机系统环境&lt;/strong&gt;，这个主流的有：Hadoop(鼎鼎大名吧); Spark(也听说过吧); Cassandra等等。&lt;/p&gt;
&lt;p&gt;好了，环境搞明白了，下面你就得发号施令，让计算机去处理数据了。计算可不是人类，你可以跟他讲普通话，讲英文让他帮你干活。你要想它听你的，你得先学会点它能懂的、能听明白的话。OK，编程语言就降临了。一般来说，用于数据处理的语言有R，Python，Octave（与Matlab类似，只是这个开源免费），Matlab等等。为了使用各个平台，说不得你也得学点Java，C，C++。&lt;/p&gt;
&lt;p&gt;写到这边，估计已经头大了，这么多东西，这数据科学是不是恐怖了点，谁能受得了啊！！！是的，包含的东西的确多了点，但是学习起来还是很好玩的，我保证(当然，前提你得跟我一样，看见数学不会头晕)！&lt;/p&gt;
&lt;p&gt;当然除了上面提到的，数据科学包含的计算机知识还有很多，像数据结构啊，数据库啊，Mahout这样的架构啊等等。&lt;/p&gt;
&lt;h5&gt;第三，专业&lt;/h5&gt;
&lt;p&gt;这个也就是应用啦。练就了一身绝世内功（理论基础），找到了一把趁手的绝世神兵（计算机科学），现在需要决定的就是出山之后是想做个武林盟主呢，还是独创一个门派，也就是想把这些东西用到哪些地方去。像生物学，跟统计一结合就成了生物统计，要是再加上点计算机科学，那就成了生物学数据科学。OK，这么说应该是很明白的了。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;数据科学家Drew Conway绘制过一幅图，很好地描述了我上面所说的东西：&lt;/p&gt;
&lt;p&gt;&lt;img alt="Venn diagram" src="/images/article/drew-conway-data-science-venn-diagram.jpg"&gt;&lt;/p&gt;
&lt;p&gt;前几天图灵上出了一本书，叫做“&lt;a href="http://www.ituring.com.cn/book/1268"&gt;Software Design 中文版 01&lt;/a&gt;”。里面介绍了数据科学的很多基础内容，也给出了很多的学习材料，大部分都是网上的视频教程。此外书中还介绍了一些如何使用Excel，R以及Mahout这些工具的基础知识，有兴趣倒是可以入手一本，作为学习数据科学的开始。&lt;/p&gt;</content><category term="data science"></category><category term="r"></category><category term="machine learning"></category></entry><entry><title>找回曾经的Kindle</title><link href="//jacky-sj/kindle.html" rel="alternate"></link><published>2014-03-24T14:15:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-03-24:/kindle.html</id><summary type="html">&lt;p&gt;落灰的 Kindle&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;iPad与Kindle&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;自从买了iPad之后，看书大都就在iPad上进行了。但是最近觉得吧，iPad看时间长点，眼睛会吃不消，所以今天早上就把我抽屉里的Kindle又拿了出来，倒腾了一下。以后还是拿这家伙看书吧，对眼睛来说，这个还是要好点的。&lt;/p&gt;
&lt;p&gt;看惯了iPad那炫丽的屏幕，一下看Kindle觉得挺柔和、舒服以及不适应的。只是，好久没动Kindle，里面的东西着实乱了一点。无从下手，不知该如何收拾，所以就直接先卸载了多看系统，然后将Kindle恢复出厂设置了(好狠啊有木有)。重启之后，登录，然后将自己买的一些电子书推送进去，最终干净整齐在我控制之下的Kindle又回来：&lt;/p&gt;
&lt;p&gt;&lt;img alt="kindle" src="/images/article/kindle.jpg"&gt;&lt;/p&gt;
&lt;p&gt;说实话，Kindle看书的效果的确没有iPad爽。iPad那叫一个炫丽精致啊！！！不过，那个长时间看也太伤眼睛了一点。这次就决定，以后除了那些注重图片啊之类的书籍杂志，大部分的电子书还是用Kindle看比较好。&lt;/p&gt;
&lt;h4&gt;多看与Kindle&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;这次卸载了多看系统就没打算再装，因为觉得现在Kindle对中文书籍的支持也蛮好的，没必要搞个多看系统了。更何况，&lt;code&gt;iduokan&lt;/code&gt;推送服务有限制，好像超过20M就不行了。&lt;/p&gt;
&lt;p&gt;只是多看里面有不少的书籍，不安装多看系统，在Kindle上有些是看不了了(除了图灵出的“码农”可以推送到Kindle)。不过想了一想，觉得也没什么。我大部分在多看上下载的书籍都是免费的，iPhone上看看就好了(个人觉得，iPhone上的多看阅读器体验最好)。那些买了觉得很好的书，我大都也买了纸质的，像&lt;a href="http://macshuo.com/"&gt;Mac君&lt;/a&gt;的&lt;a href="http://www.amazon.cn/dp/B00ID5UV30"&gt;'MacTalk：人生元编程'&lt;/a&gt;等等。&lt;/p&gt;</content><category term="kindle"></category></entry><entry><title>记录：最近对博客的一些修改</title><link href="//jacky-sj/octopress3.html" rel="alternate"></link><published>2014-03-18T18:52:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-03-18:/octopress3.html</id><summary type="html">&lt;p&gt;记录修改 Octopress 配置的过程&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;前两天发现了一款很不错的主题&lt;code&gt;bootstrap&lt;/code&gt;，心中一直很是惦记，终于还是在昨天晚上换了主题。趁着换主题的时间，我也顺便为我的博客添加了一些其它的功能，也设置了一下侧边栏，详情如下。&lt;/p&gt;
&lt;h4&gt;1. 加入Google Analytics&lt;/h4&gt;
&lt;p&gt;对于自己的博客，总是想了解它的现状的。起码我希望知道我的博客有没人来看，所以加了这个功能。&lt;/p&gt;
&lt;p&gt;加入这个功能的方法很简单，就是去&lt;a href="http://www.google.com/analytics/"&gt;Google Analytics&lt;/a&gt;注册个帐号，然后把你的帐号填到&lt;code&gt;_config.yml&lt;/code&gt;中对应的位置就OK啦。&lt;/p&gt;
&lt;p&gt;当然我就遇到了一个问题，就是填入帐号之后，Google Analytics总是跟踪不到。最后我只能把&lt;code&gt;_config.yml&lt;/code&gt;中的帐号注释掉，然后进入&lt;code&gt;source/_includes/head.html&lt;/code&gt;中，添加了申请帐号之后给出的脚本。等了大概几分钟，Google Analytics就显示跟踪到了。如果你遇到类似的问题，可以试一下这个方法。&lt;/p&gt;
&lt;h4&gt;2. 加入数学公式支持&lt;/h4&gt;
&lt;p&gt;首先启用MathJax，即在&lt;code&gt;source/_includes/custom/footer.html&lt;/code&gt;的第一行添加代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!--&lt;/span&gt; &lt;span class="nx"&gt;mathjax&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="nx"&gt;similar&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stackexchange&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;text/x-mathjax-config&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="nx"&gt;MathJax&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Hub&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Config&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nx"&gt;jax&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;input/TeX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;output/HTML-CSS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nx"&gt;tex2jax&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="nx"&gt;inlineMath&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="nx"&gt;displayMath&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;$$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;$$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="nx"&gt;processEscapes&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="nx"&gt;skipTags&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;script&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;noscript&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;style&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;textarea&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pre&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;code&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="nx"&gt;messageStyle&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;none&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="s2"&gt;&amp;quot;HTML-CSS&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;preferredFont&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;TeX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;availableFonts&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;STIX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;TeX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;添加之后，就在博客里面引入了MathJax，那么就可以在markdown里面直接输入公式了，例如：&lt;code&gt;$n^2$&lt;/code&gt;就可以解析成&lt;span class="math"&gt;\(n^2\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;在引入MathJax之后，我更换了解析器，因为自带的&lt;code&gt;rdiscount&lt;/code&gt;解析器对于MathJax的细节处理存在一些小问题。更换解析器，可以到&lt;code&gt;Gemfile&lt;/code&gt;中添加：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;kramdown&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;~&amp;gt; 0.13.8&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后在终端运行：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;bundle&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;最后，在&lt;code&gt;_config.yml&lt;/code&gt;文件中，将解析器更换：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;kramdown&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;使用kramdown，有两点需要注意：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;公式无论行内行间都以&lt;code&gt;$$&lt;/code&gt;开头；行间公式，必须独占一行；&lt;/li&gt;
&lt;li&gt;代码块开头必须空一行，否则代码高亮会失效。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;至于其它的，可以去&lt;a href="http://kramdown.rubyforge.org/syntax.html"&gt;官方文档&lt;/a&gt;查看。&lt;/p&gt;
&lt;h4&gt;3. 更换主题&lt;/h4&gt;
&lt;p&gt;如何更换主题，在之前的文章里面早已说过。这次就是将主题更换成了&lt;code&gt;bootstrap&lt;/code&gt;。&lt;/p&gt;
&lt;h4&gt;4. 侧边栏的修改&lt;/h4&gt;
&lt;h5&gt;a. 关于我&lt;/h5&gt;
&lt;p&gt;添加自己的简介，可以在&lt;code&gt;custom/asides/&lt;/code&gt;文件夹下添加&lt;code&gt;about.html&lt;/code&gt;，然后添加内容：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;section&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;well&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;about&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;nav nav-list&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;nav-header&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{ root_url }}/about&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;关于我&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;介绍一下自己&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;可以留下联系方式，比如微博等等&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;section&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这里我使用了我博客主题的样式，就是里面的&lt;code&gt;class&lt;/code&gt;和&lt;code&gt;id&lt;/code&gt;的值。这些值需要你根据自己博客的主题样式设定，可以参看其自带的侧边栏的一些网页，比如&lt;code&gt;_includes/asides/recent_post.html&lt;/code&gt;。&lt;/p&gt;
&lt;h5&gt;b. 文章分类&lt;/h5&gt;
&lt;p&gt;给自己的文章分类，需要的操作稍微麻烦一些。首先需要在&lt;code&gt;plugins&lt;/code&gt;目录下创建&lt;code&gt;category_list_tag.rb&lt;/code&gt;文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;Jekyll&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CategoryListTag&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;Liquid&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Tag&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="n"&gt;categories&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;registers&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:site&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;categories&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="n"&gt;categories&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;category&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;posts_in_category&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;registers&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:site&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;categories&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;category&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;category_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;registers&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:site&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;category_dir&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;category_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;category_dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gsub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/_|\P{Word}/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gsub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/-{2,}/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;downcase&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;li class=&amp;#39;category&amp;#39;&amp;gt;&amp;lt;a href=&amp;#39;/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;category_url&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/&amp;#39;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;category&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; (&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;posts_in_category&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;)&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="n"&gt;html&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="no"&gt;Liquid&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Template&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register_tag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;category_list&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;Jekyll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;CategoryListTag&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后新建&lt;code&gt;source/_includes/asides/category_list.html&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;section&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;well&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;category_list&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;nav nav-list&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;nav-header&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;文章分类&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;categories&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;% category_list %}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;section&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样就可以了。&lt;/p&gt;
&lt;h5&gt;c. 推荐站点&lt;/h5&gt;
&lt;p&gt;跟添加&lt;strong&gt;关于我&lt;/strong&gt;类似，可以直接在&lt;code&gt;custom/asides/&lt;/code&gt;目录下添加&lt;code&gt;links.html&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;section&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;well&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;links&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;nav nav-list&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;nav-header&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;推荐站点&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://macshuo.com/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;MacTalk-池建强的随想录&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://yihui.name/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Yihui Xie&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;section&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;d. License&lt;/h5&gt;
&lt;p&gt;与推荐站点一样，可以在&lt;code&gt;custom/asides/&lt;/code&gt;目录下添加&lt;code&gt;license.html&lt;/code&gt;。然后到&lt;a href="http://creativecommons.org/licenses/by-nc-sa/2.5/cn/"&gt;署名-非商业性使用-相同方式共享 2.5 中国大陆&lt;/a&gt;网页获取license的网页代码。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;建好这些文件后，别忘了在&lt;code&gt;_config.yml&lt;/code&gt;中修改侧边栏项：&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;default_asides: [custom/asides/about.html, asides/category_list.html]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;5. 其它一些修改&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;将博客大部分文字换成了中文；&lt;/li&gt;
&lt;li&gt;去除了之前的Home页；&lt;/li&gt;
&lt;li&gt;修改各篇文章内部的图片大小，统一使用8cm*8cm；&lt;/li&gt;
&lt;li&gt;将所有的头部的导图长度加长。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h4&gt;参考资源&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.yanjiuyanjiu.com/blog/20130402/"&gt;研究研究: 我的Octopress配置&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.cnblogs.com/oec2003/archive/2013/05/31/3109577.html"&gt;冯威的学习专栏: Octopress博客设置&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://shanewfx.github.io/blog/2012/08/13/improve-blog-theme/"&gt;思考的轨迹: Octopress主题改造&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.google.com.hk/search?newwindow=1&amp;amp;safe=strict&amp;amp;espv=210&amp;amp;es_sm=119&amp;amp;q=octopress%E6%95%99%E7%A8%8B&amp;amp;oq=octopress%E6%95%99%E7%A8%8B&amp;amp;gs_l=serp.12..35i39.5308.6241.0.8806.10.8.0.0.0.1.237.921.0j3j2.5.0....0...1c.1j4.35.serp..6.4.789.PMKW2jRRdPI"&gt;。。。&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="blog"></category></entry><entry><title>R语言记录7：相关分析</title><link href="//jacky-sj/r-series-7.html" rel="alternate"></link><published>2014-03-17T16:46:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-03-17:/r-series-7.html</id><summary type="html">&lt;p&gt;R 语言编程 7 - 相关分析&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;变量之间的关系，大致可分为两种：&lt;em&gt;函数关系&lt;/em&gt;和&lt;em&gt;相关关系&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;函数关系，简单来说就是可以将变量之间的关系用方程(其实就是函数)来描述：&lt;span class="math"&gt;\(y=f(x)\)&lt;/span&gt;，处理这种关系对应的统计方法就是&lt;strong&gt;&lt;em&gt;回归分析&lt;/em&gt;&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;相关关系，就是指变量之间存在不完全确定的依赖关系，其数值不能够使用函数表示出来，这个对应的就是&lt;strong&gt;&lt;em&gt;相关分析&lt;/em&gt;&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;判断变量之间是否存在相关关系，最直接简单的方法就是画出两个变量之间的散点图。&lt;/p&gt;
&lt;h4&gt;1. 散点图&lt;/h4&gt;
&lt;p&gt;我们使用&lt;code&gt;cars&lt;/code&gt;数据集中的数据进行演示,&lt;code&gt;cars&lt;/code&gt;数据集中包含了汽车速度与制动距离的数据，显然直观感觉这两个变量之间肯定存在相关关系。画个散点图看看：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;cars&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  speed dist&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;1&lt;/span&gt;     &lt;span class="m"&gt;4&lt;/span&gt;    &lt;span class="m"&gt;2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;2&lt;/span&gt;     &lt;span class="m"&gt;4&lt;/span&gt;   &lt;span class="m"&gt;10&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;3&lt;/span&gt;     &lt;span class="m"&gt;7&lt;/span&gt;    &lt;span class="m"&gt;4&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;4&lt;/span&gt;     &lt;span class="m"&gt;7&lt;/span&gt;   &lt;span class="m"&gt;22&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;5&lt;/span&gt;     &lt;span class="m"&gt;8&lt;/span&gt;   &lt;span class="m"&gt;16&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;6&lt;/span&gt;     &lt;span class="m"&gt;9&lt;/span&gt;   &lt;span class="m"&gt;10&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; with &lt;span class="p"&gt;(&lt;/span&gt;cars&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt;   plot&lt;span class="p"&gt;(&lt;/span&gt;speed&lt;span class="p"&gt;,&lt;/span&gt; dist&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;得到如下图形：&lt;/p&gt;
&lt;p&gt;&lt;img alt="scatter" src="/images/article/RSeries7/scatter.jpg"&gt;&lt;/p&gt;
&lt;p&gt;从散点图看，汽车速度与其制动距离存在相关关系。但是，仅仅从图像来看，我们只能得到大概是否相关，而不能给出一个确切的描述。那么就希望能够找到一个方法，能够描述变量之间有多相关，程度有多大。&lt;/p&gt;
&lt;h4&gt;2. 相关的种类&lt;/h4&gt;
&lt;p&gt;根据相关程度，我们可以给相关进行分类：完全相关，不完全相关，完全不相关；而根据相关方向的不同，又可以分类：正相关(一个变大另一个也变大)，负相关。那么怎么用数学的方式去描述这些种类呢，那就需要用到相关系数。&lt;/p&gt;
&lt;h5&gt;(1). 相关系数&lt;/h5&gt;
&lt;p&gt;相关系数的符号用来代表正负相关( &lt;span class="math"&gt;\(+\)&lt;/span&gt; -&amp;gt; 正；&lt;span class="math"&gt;\(-\)&lt;/span&gt; -&amp;gt; 负)，其值的大小用来描述相关程度的大小(0~1:完全不相关~完全相关)。相关系数的定义有很多，常用的有Person相关系数、Spearman相关系数等等。这里给出最常用的Person相关系数的计算方法：&lt;/p&gt;
&lt;div class="math"&gt;$$\gamma=\frac{\sum_{i=1}^{n}{(x_i-\overline{x})(y_i-\overline{y})}}{\sqrt{\sum_{i=1}^{n}{(x_i-\overline{x})^2}\sum_{i=1}^{n}{(y_i-\overline{y})^2}}}$$&lt;/div&gt;
&lt;p&gt;当样本个数充分大时，样本相关系数可以作为总体相关系数的估计。&lt;/p&gt;
&lt;p&gt;在R中，可以使用&lt;code&gt;cor&lt;/code&gt;函数来得到变量间的相关系数矩阵：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; cor&lt;span class="p"&gt;(&lt;/span&gt;cars&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;          speed      dist&lt;/span&gt;
&lt;span class="code-line"&gt;speed &lt;span class="m"&gt;1.0000000&lt;/span&gt; &lt;span class="m"&gt;0.8068949&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;dist  &lt;span class="m"&gt;0.8068949&lt;/span&gt; &lt;span class="m"&gt;1.0000000&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;可以看到，&lt;span class="math"&gt;\(corr(speed, dist)=0.8068949\)&lt;/span&gt;，说明汽车速度与其制动距离之间存在较强的正相关关系。&lt;/p&gt;
&lt;h6&gt;注：&lt;/h6&gt;
&lt;p&gt;可以指定&lt;code&gt;cor&lt;/code&gt;的参数得到不同的相关系数：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; cor&lt;span class="p"&gt;(&lt;/span&gt;cars&lt;span class="p"&gt;,&lt;/span&gt; method&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;spearman&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;          speed      dist&lt;/span&gt;
&lt;span class="code-line"&gt;speed &lt;span class="m"&gt;1.0000000&lt;/span&gt; &lt;span class="m"&gt;0.8303568&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;dist  &lt;span class="m"&gt;0.8303568&lt;/span&gt; &lt;span class="m"&gt;1.0000000&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;(2). 相关性的显著性检验&lt;/h5&gt;
&lt;p&gt;得到了两个变量之间的相关系数，那就需要检验，得到的结果是否能够通过显著性检验。即相关性到底显著与否。&lt;/p&gt;
&lt;p&gt;这里需要建立假设检验：&lt;span class="math"&gt;\(H_0:\)&lt;/span&gt; 变量X和Y不相关；那么可以构造检验统计量如下：&lt;/p&gt;
&lt;div class="math"&gt;$$T = \frac{\gamma(X,Y)\sqrt{n-2}}{\sqrt{1-\gamma(X,Y)^2}}$$&lt;/div&gt;
&lt;p&gt;在零假设成立的条件下，&lt;span class="math"&gt;\(T \sim t(n-2)\)&lt;/span&gt;。那么若有 &lt;span class="math"&gt;\(T &amp;gt; t_{1-\alpha}(n-2)\)&lt;/span&gt;，则拒绝原假设，说明变量X和Y存在显著的相关关系。&lt;/p&gt;
&lt;h6&gt;注：这里提到的内容可以到参数统计的书籍上寻找。&lt;/h6&gt;
&lt;p&gt;在R中，我们可以使用&lt;code&gt;cor.test&lt;/code&gt;函数很轻松地对此进行检验：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;cars&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt;   cor.test&lt;span class="p"&gt;(&lt;/span&gt;speed&lt;span class="p"&gt;,&lt;/span&gt; dist&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    Pearson&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;s product-moment correlation&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;data&lt;span class="o"&gt;:&lt;/span&gt;  speed and dist&lt;/span&gt;
&lt;span class="code-line"&gt;t &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;9.464&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; df &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;48&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; p&lt;span class="o"&gt;-&lt;/span&gt;value &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1.49e-12&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;alternative hypothesis&lt;span class="o"&gt;:&lt;/span&gt; true correlation is not equal to &lt;span class="m"&gt;0&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;95&lt;/span&gt; percent confidence interval&lt;span class="o"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="m"&gt;0.6816422&lt;/span&gt; &lt;span class="m"&gt;0.8862036&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;sample estimates&lt;span class="o"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      cor&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;0.8068949&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;从结果可以看到，&lt;span class="math"&gt;\(t=9.464\)&lt;/span&gt; 这个不容易看出来结果，因为还需要查表。我们可以选择直接看&lt;span class="math"&gt;\(p\)&lt;/span&gt;值：1.49e-12，比0.05小太多了。故而拒绝原假设，认为汽车速度与制动距离存在高度相关关系。&lt;/p&gt;
&lt;h6&gt;注：这里如何修改，使得其使用spearman相关系数呢？&lt;/h6&gt;
&lt;p&gt;到此，就将相关分析的大致内容进行了阐述。但是，相关分析也还有很多其它内容，比如偏相关等等。&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="r"></category><category term="data science"></category></entry><entry><title>R语言记录6：描述统计2</title><link href="//jacky-sj/r-series-6.html" rel="alternate"></link><published>2014-03-14T16:31:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-03-14:/r-series-6.html</id><summary type="html">&lt;p&gt;R 语言编程 6 - EDA 2&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;二. 可视化&lt;/h4&gt;
&lt;p&gt;开头我们就说过，描述性统计分析包括计算统计量的值，也可以进行制表画图。首先我们看看如何在R中绘制列联表：&lt;/p&gt;
&lt;h5&gt;1. 频数表和列联表&lt;/h5&gt;
&lt;p&gt;如果数据集中对应的变量都是定性变量，即是上一节中我们所说的分类数据（还记得分组数据的描述性统计量的计算吗）。对于这种数据，作图很多时候并没有太大的意义。一般，我们会采取绘制列联表的方式去描述数据。&lt;/p&gt;
&lt;p&gt;在数据集&lt;code&gt;mtcars&lt;/code&gt;中，有不少定性变量，这里取出其中的&lt;code&gt;am&lt;/code&gt;,&lt;code&gt;gear&lt;/code&gt;和&lt;code&gt;carb&lt;/code&gt;作演示。首先看看一维的情况：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; dataSub &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;data.frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;am&lt;span class="o"&gt;=&lt;/span&gt;mtcars&lt;span class="o"&gt;$&lt;/span&gt;am&lt;span class="p"&gt;,&lt;/span&gt; gear&lt;span class="o"&gt;=&lt;/span&gt;mtcars&lt;span class="o"&gt;$&lt;/span&gt;gear&lt;span class="p"&gt;,&lt;/span&gt; carb&lt;span class="o"&gt;=&lt;/span&gt;mtcars&lt;span class="o"&gt;$&lt;/span&gt;carb&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dataSub&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  am gear carb&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;    &lt;span class="m"&gt;4&lt;/span&gt;    &lt;span class="m"&gt;4&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;2&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;    &lt;span class="m"&gt;4&lt;/span&gt;    &lt;span class="m"&gt;4&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;3&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;    &lt;span class="m"&gt;4&lt;/span&gt;    &lt;span class="m"&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;4&lt;/span&gt;  &lt;span class="m"&gt;0&lt;/span&gt;    &lt;span class="m"&gt;3&lt;/span&gt;    &lt;span class="m"&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;5&lt;/span&gt;  &lt;span class="m"&gt;0&lt;/span&gt;    &lt;span class="m"&gt;3&lt;/span&gt;    &lt;span class="m"&gt;2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;6&lt;/span&gt;  &lt;span class="m"&gt;0&lt;/span&gt;    &lt;span class="m"&gt;3&lt;/span&gt;    &lt;span class="m"&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dataSub&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt;   mytable &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;am&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="kp"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;gear&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="kp"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;carb&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt;   mytable&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;am&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="m"&gt;0&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;19&lt;/span&gt; &lt;span class="m"&gt;13&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;gear&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="m"&gt;3&lt;/span&gt;  &lt;span class="m"&gt;4&lt;/span&gt;  &lt;span class="m"&gt;5&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;15&lt;/span&gt; &lt;span class="m"&gt;12&lt;/span&gt;  &lt;span class="m"&gt;5&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;carb&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;2&lt;/span&gt;  &lt;span class="m"&gt;3&lt;/span&gt;  &lt;span class="m"&gt;4&lt;/span&gt;  &lt;span class="m"&gt;6&lt;/span&gt;  &lt;span class="m"&gt;8&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;  &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;一维的情况，其实就是统计频数，把每个类别各自的频数计算出来就可以了。像&lt;code&gt;am&lt;/code&gt;变量，其结果告诉我们，用自动挡的有19人，用手动挡的是13人(0 -&amp;gt; 19; 1 -&amp;gt; 13)。再来看看二维的：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dataSub&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt;   mytable2 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;am&lt;span class="p"&gt;,&lt;/span&gt; carb&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="kp"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;carb&lt;span class="p"&gt;,&lt;/span&gt; am&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt;   mytable2&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   carb&lt;/span&gt;
&lt;span class="code-line"&gt;am  &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;8&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    am&lt;/span&gt;
&lt;span class="code-line"&gt;carb &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="m"&gt;8&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;可以看到，对于二维来说，绘制的方法与一维类似。但是，这里有个可以深入的东西，那就是边际列表。也就是利用二维列联表得到一维列联表：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dataSub&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt;   mytable2 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;am&lt;span class="p"&gt;,&lt;/span&gt; carb&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="kp"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;carb&lt;span class="p"&gt;,&lt;/span&gt; am&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt;   mytableConvert &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;margin.table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;mytable2&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt;       &lt;span class="kp"&gt;margin.table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;mytable2&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# 选项1和2控制按行和按列&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt;   mytableConvert&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;am&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="m"&gt;0&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;19&lt;/span&gt; &lt;span class="m"&gt;13&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;carb&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;2&lt;/span&gt;  &lt;span class="m"&gt;3&lt;/span&gt;  &lt;span class="m"&gt;4&lt;/span&gt;  &lt;span class="m"&gt;6&lt;/span&gt;  &lt;span class="m"&gt;8&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;  &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;可以看到，使用&lt;code&gt;margin.table&lt;/code&gt;函数可以很容易得到一个列表的边际列表。下面看看三维的情况：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dataSub&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt;   mytable3 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;am&lt;span class="p"&gt;,&lt;/span&gt; carb&lt;span class="p"&gt;,&lt;/span&gt; gear&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt;   mytable3&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; gear &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   carb&lt;/span&gt;
&lt;span class="code-line"&gt;am  &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;8&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; gear &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   carb&lt;/span&gt;
&lt;span class="code-line"&gt;am  &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;8&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; gear &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   carb&lt;/span&gt;
&lt;span class="code-line"&gt;am  &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;8&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其实&lt;code&gt;table&lt;/code&gt;函数可以处理三维以及三维以上的列联表，你可以自己试一试。现在我们已经能够使用R轻松地绘制出频数表了，但很多时候，我们希望得到的是频率表，那应该怎么绘制呢？试试这个函数&lt;code&gt;prop.table()&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dataSub&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt;   mytable &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;am&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="kp"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;gear&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="kp"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;carb&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt;   &lt;span class="kp"&gt;prop.table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;mytable&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;am&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="m"&gt;0&lt;/span&gt;       &lt;span class="m"&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;0.59375&lt;/span&gt; &lt;span class="m"&gt;0.40625&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;二维以及以上都可以这么处理。那么，如果需要求的是全局相对频率列联表呢？想想，那不就是频数除以总数嘛，直接一句代码不就搞定了嘛：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dataSub&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt;   mytable2 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;am&lt;span class="p"&gt;,&lt;/span&gt; carb&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="kp"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;carb&lt;span class="p"&gt;,&lt;/span&gt; am&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt;   mytable2&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="kp"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;mytable2&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   carb&lt;/span&gt;
&lt;span class="code-line"&gt;am        &lt;span class="m"&gt;1&lt;/span&gt;       &lt;span class="m"&gt;2&lt;/span&gt;       &lt;span class="m"&gt;3&lt;/span&gt;       &lt;span class="m"&gt;4&lt;/span&gt;       &lt;span class="m"&gt;6&lt;/span&gt;       &lt;span class="m"&gt;8&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0.09375&lt;/span&gt; &lt;span class="m"&gt;0.18750&lt;/span&gt; &lt;span class="m"&gt;0.09375&lt;/span&gt; &lt;span class="m"&gt;0.21875&lt;/span&gt; &lt;span class="m"&gt;0.00000&lt;/span&gt; &lt;span class="m"&gt;0.00000&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;0.12500&lt;/span&gt; &lt;span class="m"&gt;0.12500&lt;/span&gt; &lt;span class="m"&gt;0.00000&lt;/span&gt; &lt;span class="m"&gt;0.09375&lt;/span&gt; &lt;span class="m"&gt;0.03125&lt;/span&gt; &lt;span class="m"&gt;0.03125&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;2. 图形&lt;/h5&gt;
&lt;p&gt;常用的图形一般有：直方图，散点图，框须图等等。我们一个一个来看一下：&lt;/p&gt;
&lt;h6&gt;a. 直方图&lt;/h6&gt;
&lt;p&gt;我们使用&lt;code&gt;mtcars$mpg&lt;/code&gt;数据作演示，首先你可以检查一下&lt;code&gt;mpg&lt;/code&gt;的范围，然后确定频数直方图的分割大小(使用参数&lt;code&gt;break&lt;/code&gt;设定)，这里我们不设定，让R自动生成：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;mtcars&lt;span class="o"&gt;$&lt;/span&gt;mpg&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;10.4&lt;/span&gt; &lt;span class="m"&gt;33.9&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; hist&lt;span class="p"&gt;(&lt;/span&gt;mtcars&lt;span class="o"&gt;$&lt;/span&gt;mpg&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;得到如下的图形：&lt;/p&gt;
&lt;p&gt;&lt;img alt="Histogram1" src="/images/article/RSeries6/Histogram1.jpg"&gt;&lt;/p&gt;
&lt;p&gt;其实更多地，我们希望得到频率直方图，并且给出其核密度曲线以及正态密度曲线。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; hist&lt;span class="p"&gt;(&lt;/span&gt;mtcars&lt;span class="o"&gt;$&lt;/span&gt;mpg&lt;span class="p"&gt;,&lt;/span&gt; probability&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; dens &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; density&lt;span class="p"&gt;(&lt;/span&gt;mtcars&lt;span class="o"&gt;$&lt;/span&gt;mpg&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; mean &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;mtcars&lt;span class="o"&gt;$&lt;/span&gt;mpg&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; sd &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; sd&lt;span class="p"&gt;(&lt;/span&gt;mtcars&lt;span class="o"&gt;$&lt;/span&gt;mpg&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; lines&lt;span class="p"&gt;(&lt;/span&gt;dens&lt;span class="p"&gt;,&lt;/span&gt; col&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; lty&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; curve&lt;span class="p"&gt;(&lt;/span&gt;dnorm&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; sd&lt;span class="p"&gt;),&lt;/span&gt; col&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; add&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; legend&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;topright&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; inset &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0.05&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;density&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;normal&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt;   lty &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; col &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;得到图形如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt="Histogram2" src="/images/article/RSeries6/Histogram2.jpg"&gt;&lt;/p&gt;
&lt;h6&gt;b. 散点图&lt;/h6&gt;
&lt;p&gt;我们可以使用&lt;code&gt;plot&lt;/code&gt;函数直接画出散点图，此外，我这里还给散点图加上了一条拟合曲线。&lt;code&gt;lowess()&lt;/code&gt;函数可以用特殊的曲线对二维数据进行非线性拟合(多维的情况需要使用&lt;code&gt;loess()&lt;/code&gt;函数)。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; plot&lt;span class="p"&gt;(&lt;/span&gt;mtcars&lt;span class="o"&gt;$&lt;/span&gt;disp &lt;span class="o"&gt;~&lt;/span&gt; mtcars&lt;span class="o"&gt;$&lt;/span&gt;mpg&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; lines&lt;span class="p"&gt;(&lt;/span&gt;lowess&lt;span class="p"&gt;(&lt;/span&gt;mtcars&lt;span class="o"&gt;$&lt;/span&gt;mpg&lt;span class="p"&gt;,&lt;/span&gt; mtcars&lt;span class="o"&gt;$&lt;/span&gt;disp&lt;span class="p"&gt;),&lt;/span&gt; lwd&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; col&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="Scatter" src="/images/article/RSeries6/Scatter.jpg"&gt;&lt;/p&gt;
&lt;h6&gt;c. 框须图&lt;/h6&gt;
&lt;p&gt;框须图,也称为盒形图、箱线图。其通过绘制连续型变量的五数(最小最大值，中位数以及上下侧四分位数)来描述变量的分布。可以使用&lt;code&gt;boxplot&lt;/code&gt;函数来得到：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; boxplot&lt;span class="p"&gt;(&lt;/span&gt;mtcars&lt;span class="o"&gt;$&lt;/span&gt;mpg&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="box1" src="/images/article/RSeries6/box1.jpg"&gt;&lt;/p&gt;
&lt;p&gt;也可以使用&lt;code&gt;boxplot&lt;/code&gt;函数展示分组变量，例如这里&lt;code&gt;mtcars&lt;/code&gt;中有&lt;code&gt;am&lt;/code&gt;变量，可以使用该函数画出不同的&lt;code&gt;am&lt;/code&gt;值对应的箱线图：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; boxplot&lt;span class="p"&gt;(&lt;/span&gt;mpg &lt;span class="o"&gt;~&lt;/span&gt; am&lt;span class="p"&gt;,&lt;/span&gt; data&lt;span class="o"&gt;=&lt;/span&gt;mtcars&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="box2" src="/images/article/RSeries6/box2.jpg"&gt;&lt;/p&gt;
&lt;p&gt;到这边，就基本上把描述统计的一些主体内容说了一下。不过，描述统计并不是只有这点东西，此外，我讲的这些作图啊，制表啊其实都没有深入地去讲。而且对于R语言的研究学习来说，我上面做的图还太简单了，没有给图起名称，也没有横纵轴的名称等等。这些在R语言的帮助文档里有详细的讲解说明，有兴趣的话可以看看。&lt;/p&gt;</content><category term="r"></category><category term="data science"></category></entry><entry><title>R语言记录5：描述统计1</title><link href="//jacky-sj/r-series-5.html" rel="alternate"></link><published>2014-03-12T15:57:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-03-12:/r-series-5.html</id><summary type="html">&lt;p&gt;R 语言编程 5 - EDA 1&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;数据的统计分析分为：&lt;strong&gt;&lt;em&gt;描述性统计分析&lt;/em&gt;&lt;/strong&gt;和&lt;strong&gt;&lt;em&gt;统计推断&lt;/em&gt;&lt;/strong&gt;两个部分。描述性统计分析，一般又称为探索性统计分析。简单来讲，描述统计就是用简单直观的方法给出数据的一种易于理解的描述，比如说散点图，频率直方图；又或者计算简单的统计量，如均值方差等等。下面先来看看如何计算常用的描述性统计量：&lt;/p&gt;
&lt;h4&gt;一. 描述性统计量&lt;/h4&gt;
&lt;h5&gt;1. 单组数据&lt;/h5&gt;
&lt;p&gt;常用的描述性统计量大致有这么几个：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;样本大小。即样本的个数，一般用&lt;span class="math"&gt;\(n\)&lt;/span&gt;表示；&lt;/li&gt;
&lt;li&gt;样本均值。即 &lt;span class="math"&gt;\(\overline{X}=\frac{1}{n}\sum_{i=1}^{n}{X_i}\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;样本方差。即 &lt;span class="math"&gt;\(s^2=\frac{1}{n}\sum_{i=1}^{n}{(X_i-\overline{X})^2}\)&lt;/span&gt;;&lt;/li&gt;
&lt;li&gt;样本分位数、偏度、峰度等等。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在R语言中，&lt;code&gt;summary()&lt;/code&gt;函数可以得到样本数据的最小值、最大值、四分位数以及均值。这里我们使用R语言自带的数据集&lt;code&gt;mtcars&lt;/code&gt;作演示，你可以使用我们之前教过的方法先看看&lt;code&gt;mtcars&lt;/code&gt;中的数据长什么样子(&lt;code&gt;head&lt;/code&gt;函数，&lt;code&gt;??&lt;/code&gt;得到帮助)。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; str&lt;span class="p"&gt;(&lt;/span&gt;mtcars&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 可以查看数据集的一些基本信息&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s"&gt;&amp;#39;data.frame&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;   &lt;span class="m"&gt;32&lt;/span&gt; obs. of  &lt;span class="m"&gt;11&lt;/span&gt; variables&lt;span class="o"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="o"&gt;$&lt;/span&gt; mpg &lt;span class="o"&gt;:&lt;/span&gt; num  &lt;span class="m"&gt;21&lt;/span&gt; &lt;span class="m"&gt;21&lt;/span&gt; &lt;span class="m"&gt;22.8&lt;/span&gt; &lt;span class="m"&gt;21.4&lt;/span&gt; &lt;span class="m"&gt;18.7&lt;/span&gt; &lt;span class="m"&gt;18.1&lt;/span&gt; &lt;span class="m"&gt;14.3&lt;/span&gt; &lt;span class="m"&gt;24.4&lt;/span&gt; &lt;span class="m"&gt;22.8&lt;/span&gt; &lt;span class="m"&gt;19.2&lt;/span&gt; &lt;span class="kc"&gt;...&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="o"&gt;$&lt;/span&gt; cyl &lt;span class="o"&gt;:&lt;/span&gt; num  &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;8&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;8&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="kc"&gt;...&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="o"&gt;$&lt;/span&gt; disp&lt;span class="o"&gt;:&lt;/span&gt; num  &lt;span class="m"&gt;160&lt;/span&gt; &lt;span class="m"&gt;160&lt;/span&gt; &lt;span class="m"&gt;108&lt;/span&gt; &lt;span class="m"&gt;258&lt;/span&gt; &lt;span class="m"&gt;360&lt;/span&gt; &lt;span class="kc"&gt;...&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="o"&gt;$&lt;/span&gt; hp  &lt;span class="o"&gt;:&lt;/span&gt; num  &lt;span class="m"&gt;110&lt;/span&gt; &lt;span class="m"&gt;110&lt;/span&gt; &lt;span class="m"&gt;93&lt;/span&gt; &lt;span class="m"&gt;110&lt;/span&gt; &lt;span class="m"&gt;175&lt;/span&gt; &lt;span class="m"&gt;105&lt;/span&gt; &lt;span class="m"&gt;245&lt;/span&gt; &lt;span class="m"&gt;62&lt;/span&gt; &lt;span class="m"&gt;95&lt;/span&gt; &lt;span class="m"&gt;123&lt;/span&gt; &lt;span class="kc"&gt;...&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="o"&gt;$&lt;/span&gt; drat&lt;span class="o"&gt;:&lt;/span&gt; num  &lt;span class="m"&gt;3.9&lt;/span&gt; &lt;span class="m"&gt;3.9&lt;/span&gt; &lt;span class="m"&gt;3.85&lt;/span&gt; &lt;span class="m"&gt;3.08&lt;/span&gt; &lt;span class="m"&gt;3.15&lt;/span&gt; &lt;span class="m"&gt;2.76&lt;/span&gt; &lt;span class="m"&gt;3.21&lt;/span&gt; &lt;span class="m"&gt;3.69&lt;/span&gt; &lt;span class="m"&gt;3.92&lt;/span&gt; &lt;span class="m"&gt;3.92&lt;/span&gt; &lt;span class="kc"&gt;...&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="o"&gt;$&lt;/span&gt; wt  &lt;span class="o"&gt;:&lt;/span&gt; num  &lt;span class="m"&gt;2.62&lt;/span&gt; &lt;span class="m"&gt;2.88&lt;/span&gt; &lt;span class="m"&gt;2.32&lt;/span&gt; &lt;span class="m"&gt;3.21&lt;/span&gt; &lt;span class="m"&gt;3.44&lt;/span&gt; &lt;span class="kc"&gt;...&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="o"&gt;$&lt;/span&gt; qsec&lt;span class="o"&gt;:&lt;/span&gt; num  &lt;span class="m"&gt;16.5&lt;/span&gt; &lt;span class="m"&gt;17&lt;/span&gt; &lt;span class="m"&gt;18.6&lt;/span&gt; &lt;span class="m"&gt;19.4&lt;/span&gt; &lt;span class="m"&gt;17&lt;/span&gt; &lt;span class="kc"&gt;...&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="o"&gt;$&lt;/span&gt; vs  &lt;span class="o"&gt;:&lt;/span&gt; num  &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="kc"&gt;...&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="o"&gt;$&lt;/span&gt; am  &lt;span class="o"&gt;:&lt;/span&gt; num  &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="kc"&gt;...&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="o"&gt;$&lt;/span&gt; gear&lt;span class="o"&gt;:&lt;/span&gt; num  &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="kc"&gt;...&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="o"&gt;$&lt;/span&gt; carb&lt;span class="o"&gt;:&lt;/span&gt; num  &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="kc"&gt;...&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;mtcars&lt;span class="o"&gt;$&lt;/span&gt;mpg&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   Min. &lt;span class="m"&gt;1&lt;/span&gt;st Qu.  Median    Mean &lt;span class="m"&gt;3&lt;/span&gt;rd Qu.    Max.&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="m"&gt;10.40&lt;/span&gt;   &lt;span class="m"&gt;15.42&lt;/span&gt;   &lt;span class="m"&gt;19.20&lt;/span&gt;   &lt;span class="m"&gt;20.09&lt;/span&gt;   &lt;span class="m"&gt;22.80&lt;/span&gt;   &lt;span class="m"&gt;33.90&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;可以使用&lt;code&gt;mean&lt;/code&gt;和&lt;code&gt;sd&lt;/code&gt;函数得到样本均值和样本标准差，&lt;code&gt;quantile&lt;/code&gt;函数计算样本分位数：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;mtcars&lt;span class="o"&gt;$&lt;/span&gt;mpg&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;20.09062&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; sd&lt;span class="p"&gt;(&lt;/span&gt;mtcars&lt;span class="o"&gt;$&lt;/span&gt;mpg&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;6.026948&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; quantile&lt;span class="p"&gt;(&lt;/span&gt;mtcars&lt;span class="o"&gt;$&lt;/span&gt;mpg&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.25&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="m"&gt;25&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;15.425&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt; quantile(mtcars$mpg, c(0.25, 0.75))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;   25%&lt;/span&gt;    &lt;span class="m"&gt;75&lt;/span&gt;%&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;15.425&lt;/span&gt; &lt;span class="m"&gt;22.800&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;但是在R的基础包里面并没有计算偏度(skewness)和峰度(kurtosis)的函数，我们可以自定义一个函数，用来计算常用的描述性统计量：&lt;/p&gt;
&lt;p&gt;首先给出偏度&lt;span class="math"&gt;\(\beta_s\)&lt;/span&gt;与峰度&lt;span class="math"&gt;\(\beta_k\)&lt;/span&gt;的计算公式：&lt;/p&gt;
&lt;div class="math"&gt;$$\beta_s = \frac{E(X-E(X))^3}{[E(X-E(X))^2]^{3/2}}$$&lt;/div&gt;
&lt;div class="math"&gt;$$\beta_k = \frac{E(X-E(X))^4}{[E(X-E(X))^2]^2} - 3$$&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; desc.stats &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; na.omit&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;# na.omit=TRUE 表示忽略缺失值&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt;   &lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;na.omit&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt;       x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; x&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="kp"&gt;is.na&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt;   n &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt;   mean &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt;   var &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; var&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt;   sd &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; sd&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt;   skew &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;x&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;sd&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;n&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt;   kurt &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;x&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;sd&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;n &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt;   &lt;span class="kr"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;mean&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; Variance&lt;span class="o"&gt;=&lt;/span&gt;var&lt;span class="p"&gt;,&lt;/span&gt; skewness&lt;span class="o"&gt;=&lt;/span&gt;skew&lt;span class="p"&gt;,&lt;/span&gt; kurtosis&lt;span class="o"&gt;=&lt;/span&gt;kurt&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; desc.stats&lt;span class="p"&gt;(&lt;/span&gt;mtcars&lt;span class="o"&gt;$&lt;/span&gt;mpg&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="kp"&gt;mean&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;20.09062&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;$&lt;/span&gt;Variance&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;36.3241&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;$&lt;/span&gt;skewness&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;0.610655&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;$&lt;/span&gt;kurtosis&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;-0.372766&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;到此为止，我们就可以使用R语言对一组数据进行简单的探索性分析了。其实，在R语言的很多扩展包里面，都有计算描述性统计量的函数，例如Hmisc包中有&lt;code&gt;describe()&lt;/code&gt;函数，可以返回变量数目，缺失值数目，均值，分位数等等信息；在fBasic包中有&lt;code&gt;skewness()&lt;/code&gt;和&lt;code&gt;kurtosis()&lt;/code&gt;函数，可以分别求偏度与峰度，在该包内还有一个函数，&lt;code&gt;basicStats()&lt;/code&gt;可以得到大部分的描述性统计量。&lt;/p&gt;
&lt;h5&gt;2. 多组数据&lt;/h5&gt;
&lt;p&gt;若是存在多组数据，那么在R中如何对数据进行统计量的计算呢？我们不妨先来试试&lt;code&gt;summary&lt;/code&gt;函数能否对多组数据做出很好的处理：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; mtcars.sub &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;data.frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;mpg&lt;span class="o"&gt;=&lt;/span&gt;mtcars&lt;span class="o"&gt;$&lt;/span&gt;mpg&lt;span class="p"&gt;,&lt;/span&gt; wt&lt;span class="o"&gt;=&lt;/span&gt;mtcars&lt;span class="o"&gt;$&lt;/span&gt;wt&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 取出两个变量&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;mtcars.sub&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      mpg              wt&lt;/span&gt;
&lt;span class="code-line"&gt; Min.   &lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;10.40&lt;/span&gt;   Min.   &lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;1.513&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="m"&gt;1&lt;/span&gt;st Qu.&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;15.43&lt;/span&gt;   &lt;span class="m"&gt;1&lt;/span&gt;st Qu.&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;2.581&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; Median &lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;19.20&lt;/span&gt;   Median &lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;3.325&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; Mean   &lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;20.09&lt;/span&gt;   Mean   &lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;3.217&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="m"&gt;3&lt;/span&gt;rd Qu.&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;22.80&lt;/span&gt;   &lt;span class="m"&gt;3&lt;/span&gt;rd Qu.&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;3.610&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; Max.   &lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;33.90&lt;/span&gt;   Max.   &lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;5.424&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;显然，&lt;code&gt;summary&lt;/code&gt;函数能够直接对多组数据进行计算。那么怎么批量地对多组数据使用我们自定义的函数&lt;code&gt;desc.stats&lt;/code&gt;呢？还记得我们曾经介绍过&lt;code&gt;sapply&lt;/code&gt;函数吗，想想它的功能就知道如何解决这个问题了吧。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;sapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;mtcars.sub&lt;span class="p"&gt;,&lt;/span&gt; desc.stats&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;         mpg       wt&lt;/span&gt;
&lt;span class="code-line"&gt;mean     &lt;span class="m"&gt;20.09062&lt;/span&gt;  &lt;span class="m"&gt;3.21725&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;Variance &lt;span class="m"&gt;36.3241&lt;/span&gt;   &lt;span class="m"&gt;0.957379&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;skewness &lt;span class="m"&gt;0.610655&lt;/span&gt;  &lt;span class="m"&gt;0.4231465&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;kurtosis &lt;span class="m"&gt;-0.372766&lt;/span&gt; &lt;span class="m"&gt;-0.02271075&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3. 分组数据&lt;/h5&gt;
&lt;p&gt;我们知道，很多时候我们会对数据进行分类。像这里的数据&lt;code&gt;mtcars&lt;/code&gt;，其有变量&lt;code&gt;am&lt;/code&gt;用来表示自动挡(0)和手动挡(1)。那么我们就需要对其进行分组，然后求出各组的描述性统计量。还记得&lt;code&gt;tapply()&lt;/code&gt;,&lt;code&gt;by()&lt;/code&gt;和&lt;code&gt;aggregate()&lt;/code&gt;函数吗?试试看：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; mtcars.sub2 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;data.frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;mpg&lt;span class="o"&gt;=&lt;/span&gt;mtcars&lt;span class="o"&gt;$&lt;/span&gt;mpg&lt;span class="p"&gt;,&lt;/span&gt; am&lt;span class="o"&gt;=&lt;/span&gt;mtcars&lt;span class="o"&gt;$&lt;/span&gt;am&lt;span class="p"&gt;,&lt;/span&gt; carb&lt;span class="o"&gt;=&lt;/span&gt;mtcars&lt;span class="o"&gt;$&lt;/span&gt;carb&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;tapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;mtcars.sub2&lt;span class="o"&gt;$&lt;/span&gt;mpg&lt;span class="p"&gt;,&lt;/span&gt; mtcars.sub2&lt;span class="o"&gt;$&lt;/span&gt;am&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="sb"&gt;`0`&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   Min. &lt;span class="m"&gt;1&lt;/span&gt;st Qu.  Median    Mean &lt;span class="m"&gt;3&lt;/span&gt;rd Qu.    Max.&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="m"&gt;10.40&lt;/span&gt;   &lt;span class="m"&gt;14.95&lt;/span&gt;   &lt;span class="m"&gt;17.30&lt;/span&gt;   &lt;span class="m"&gt;17.15&lt;/span&gt;   &lt;span class="m"&gt;19.20&lt;/span&gt;   &lt;span class="m"&gt;24.40&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="sb"&gt;`1`&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   Min. &lt;span class="m"&gt;1&lt;/span&gt;st Qu.  Median    Mean &lt;span class="m"&gt;3&lt;/span&gt;rd Qu.    Max.&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="m"&gt;15.00&lt;/span&gt;   &lt;span class="m"&gt;21.00&lt;/span&gt;   &lt;span class="m"&gt;22.80&lt;/span&gt;   &lt;span class="m"&gt;24.39&lt;/span&gt;   &lt;span class="m"&gt;30.40&lt;/span&gt;   &lt;span class="m"&gt;33.90&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;mtcars.sub2&lt;span class="o"&gt;$&lt;/span&gt;mpg&lt;span class="p"&gt;,&lt;/span&gt; mtcars.sub2&lt;span class="o"&gt;$&lt;/span&gt;am&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;mtcars.sub2&lt;span class="o"&gt;$&lt;/span&gt;am&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   Min. &lt;span class="m"&gt;1&lt;/span&gt;st Qu.  Median    Mean &lt;span class="m"&gt;3&lt;/span&gt;rd Qu.    Max.&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="m"&gt;10.40&lt;/span&gt;   &lt;span class="m"&gt;14.95&lt;/span&gt;   &lt;span class="m"&gt;17.30&lt;/span&gt;   &lt;span class="m"&gt;17.15&lt;/span&gt;   &lt;span class="m"&gt;19.20&lt;/span&gt;   &lt;span class="m"&gt;24.40&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;------------------------------------------------------------&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;mtcars.sub2&lt;span class="o"&gt;$&lt;/span&gt;am&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   Min. &lt;span class="m"&gt;1&lt;/span&gt;st Qu.  Median    Mean &lt;span class="m"&gt;3&lt;/span&gt;rd Qu.    Max.&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="m"&gt;15.00&lt;/span&gt;   &lt;span class="m"&gt;21.00&lt;/span&gt;   &lt;span class="m"&gt;22.80&lt;/span&gt;   &lt;span class="m"&gt;24.39&lt;/span&gt;   &lt;span class="m"&gt;30.40&lt;/span&gt;   &lt;span class="m"&gt;33.90&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; aggregate&lt;span class="p"&gt;(&lt;/span&gt;mpg &lt;span class="o"&gt;~&lt;/span&gt; am&lt;span class="p"&gt;,&lt;/span&gt; mtcars.sub2&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  am mpg.Min. mpg.1st Qu. mpg.Median mpg.Mean mpg.3rd Qu. mpg.Max.&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;0&lt;/span&gt;    &lt;span class="m"&gt;10.40&lt;/span&gt;       &lt;span class="m"&gt;14.95&lt;/span&gt;      &lt;span class="m"&gt;17.30&lt;/span&gt;    &lt;span class="m"&gt;17.15&lt;/span&gt;       &lt;span class="m"&gt;19.20&lt;/span&gt;    &lt;span class="m"&gt;24.40&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;2&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;    &lt;span class="m"&gt;15.00&lt;/span&gt;       &lt;span class="m"&gt;21.00&lt;/span&gt;      &lt;span class="m"&gt;22.80&lt;/span&gt;    &lt;span class="m"&gt;24.39&lt;/span&gt;       &lt;span class="m"&gt;30.40&lt;/span&gt;    &lt;span class="m"&gt;33.90&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;同样的，如果存在多个分类，我们依旧可以使用上面的函数作出处理：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; aggregate&lt;span class="p"&gt;(&lt;/span&gt;mpg &lt;span class="o"&gt;~&lt;/span&gt; am&lt;span class="o"&gt;+&lt;/span&gt;carb&lt;span class="p"&gt;,&lt;/span&gt; mtcars.sub2&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  am carb mpg.Min. mpg.1st Qu. mpg.Median mpg.Mean mpg.3rd Qu. mpg.Max.&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;0&lt;/span&gt;    &lt;span class="m"&gt;1&lt;/span&gt;    &lt;span class="m"&gt;18.10&lt;/span&gt;       &lt;span class="m"&gt;19.75&lt;/span&gt;      &lt;span class="m"&gt;21.40&lt;/span&gt;    &lt;span class="m"&gt;20.33&lt;/span&gt;       &lt;span class="m"&gt;21.45&lt;/span&gt;    &lt;span class="m"&gt;21.50&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;2&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;    &lt;span class="m"&gt;1&lt;/span&gt;    &lt;span class="m"&gt;22.80&lt;/span&gt;       &lt;span class="m"&gt;26.18&lt;/span&gt;      &lt;span class="m"&gt;29.85&lt;/span&gt;    &lt;span class="m"&gt;29.10&lt;/span&gt;       &lt;span class="m"&gt;32.78&lt;/span&gt;    &lt;span class="m"&gt;33.90&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;3&lt;/span&gt;  &lt;span class="m"&gt;0&lt;/span&gt;    &lt;span class="m"&gt;2&lt;/span&gt;    &lt;span class="m"&gt;15.20&lt;/span&gt;       &lt;span class="m"&gt;16.30&lt;/span&gt;      &lt;span class="m"&gt;18.95&lt;/span&gt;    &lt;span class="m"&gt;19.30&lt;/span&gt;       &lt;span class="m"&gt;21.90&lt;/span&gt;    &lt;span class="m"&gt;24.40&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;4&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;    &lt;span class="m"&gt;2&lt;/span&gt;    &lt;span class="m"&gt;21.40&lt;/span&gt;       &lt;span class="m"&gt;24.85&lt;/span&gt;      &lt;span class="m"&gt;28.20&lt;/span&gt;    &lt;span class="m"&gt;27.05&lt;/span&gt;       &lt;span class="m"&gt;30.40&lt;/span&gt;    &lt;span class="m"&gt;30.40&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;5&lt;/span&gt;  &lt;span class="m"&gt;0&lt;/span&gt;    &lt;span class="m"&gt;3&lt;/span&gt;    &lt;span class="m"&gt;15.20&lt;/span&gt;       &lt;span class="m"&gt;15.80&lt;/span&gt;      &lt;span class="m"&gt;16.40&lt;/span&gt;    &lt;span class="m"&gt;16.30&lt;/span&gt;       &lt;span class="m"&gt;16.85&lt;/span&gt;    &lt;span class="m"&gt;17.30&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;6&lt;/span&gt;  &lt;span class="m"&gt;0&lt;/span&gt;    &lt;span class="m"&gt;4&lt;/span&gt;    &lt;span class="m"&gt;10.40&lt;/span&gt;       &lt;span class="m"&gt;11.85&lt;/span&gt;      &lt;span class="m"&gt;14.30&lt;/span&gt;    &lt;span class="m"&gt;14.30&lt;/span&gt;       &lt;span class="m"&gt;16.25&lt;/span&gt;    &lt;span class="m"&gt;19.20&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;7&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;    &lt;span class="m"&gt;4&lt;/span&gt;    &lt;span class="m"&gt;15.80&lt;/span&gt;       &lt;span class="m"&gt;18.40&lt;/span&gt;      &lt;span class="m"&gt;21.00&lt;/span&gt;    &lt;span class="m"&gt;19.27&lt;/span&gt;       &lt;span class="m"&gt;21.00&lt;/span&gt;    &lt;span class="m"&gt;21.00&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;8&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;    &lt;span class="m"&gt;6&lt;/span&gt;    &lt;span class="m"&gt;19.70&lt;/span&gt;       &lt;span class="m"&gt;19.70&lt;/span&gt;      &lt;span class="m"&gt;19.70&lt;/span&gt;    &lt;span class="m"&gt;19.70&lt;/span&gt;       &lt;span class="m"&gt;19.70&lt;/span&gt;    &lt;span class="m"&gt;19.70&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;9&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;    &lt;span class="m"&gt;8&lt;/span&gt;    &lt;span class="m"&gt;15.00&lt;/span&gt;       &lt;span class="m"&gt;15.00&lt;/span&gt;      &lt;span class="m"&gt;15.00&lt;/span&gt;    &lt;span class="m"&gt;15.00&lt;/span&gt;       &lt;span class="m"&gt;15.00&lt;/span&gt;    &lt;span class="m"&gt;15.00&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;到此为止，就介绍完了如何使用R计算描述性统计量的内容。下一次我们讲看看如何将数据可视化，也就是如何在R中作图以及制表。&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="r"></category><category term="data science"></category></entry><entry><title>R语言记录4：自定义函数的深入</title><link href="//jacky-sj/r-series-4.html" rel="alternate"></link><published>2014-03-10T16:50:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-03-10:/r-series-4.html</id><summary type="html">&lt;p&gt;R 语言编程 4 - 函数&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;在第一份笔记中，已经介绍过控制语句以及自定义函数。但是当时讲的很简单，只是讲了语法。这次打算深入介绍一下，如何在R中写出一个稳健的自定义函数。首先先介绍一个常用的控制语句&lt;code&gt;ifelse&lt;/code&gt;。&lt;/p&gt;
&lt;h4&gt;一. 善用&lt;code&gt;ifelse&lt;/code&gt;&lt;/h4&gt;
&lt;h6&gt;1. 首先生成一组成绩数据&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; scoreList &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; scoreList&lt;span class="o"&gt;$&lt;/span&gt;name &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Wang&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Li&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Sun&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; scoreList&lt;span class="o"&gt;$&lt;/span&gt;score &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;90&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;70&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;2. 然后对成绩进行分级&lt;/h6&gt;
&lt;p&gt;一般来说，可能我们会想到利用循环，在学生成绩中一个一个比较。大于&lt;span class="math"&gt;\(60\)&lt;/span&gt;及格，小于就不及格。但是循环相对而言是费资源的，在R语言中，处理像这种问题，完全可以避开循环去做。回想一下，之前讲&lt;code&gt;any&lt;/code&gt;和&lt;code&gt;all&lt;/code&gt;函数时，可以使用&lt;code&gt;which&lt;/code&gt;函数取出满足条件的元素的位置。当然这也是一个不错的方式，但其实还有更好的方法，那就是利用&lt;code&gt;ifelse&lt;/code&gt;函数：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; con &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; scoreList&lt;span class="o"&gt;$&lt;/span&gt;score &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;60&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; scoreList&lt;span class="o"&gt;$&lt;/span&gt;level &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;ifelse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;con&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;good&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;not good&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果使用&lt;code&gt;which&lt;/code&gt;函数的话，也不复杂：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; scoreList&lt;span class="o"&gt;$&lt;/span&gt;level2 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;rep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;good&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; scoreList&lt;span class="o"&gt;$&lt;/span&gt;level2&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kp"&gt;which&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;scoreList&lt;span class="o"&gt;$&lt;/span&gt;score&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;60&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;not good&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;上面两种方式比较起来的话，当然个人更喜欢第一种啦。便于理解逻辑性也强。不过第二种方式怎么看怎么觉得牛，哈哈。&lt;/p&gt;
&lt;h4&gt;二. 自定义函数的深入&lt;/h4&gt;
&lt;h6&gt;1. 首先先设计一个计算简单的函数&lt;/h6&gt;
&lt;p&gt;R语言是统计软件，那么就设计一个函数，能够输出一组值的均值，方差好了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;Summary.MeanAndSd &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  mean &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  sd &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; sd&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样看起来程序已经写好了，但其实是有问题的。我们来测试一下。&lt;/p&gt;
&lt;h6&gt;2. 生成一组服从&lt;span class="math"&gt;\(N(0,1)\)&lt;/span&gt;的随机数用来测试&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;set.seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# 设定种子&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;Summary.MeanAndSd&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;result &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; Summary.MeanAndSd&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;运行可以发现，直接调用函数&lt;code&gt;Summary.MeanAndSd&lt;/code&gt;函数没有任何输出；即使赋值给&lt;code&gt;result&lt;/code&gt;，&lt;code&gt;result&lt;/code&gt;也只得到了方差。&lt;/p&gt;
&lt;h6&gt;3. 选择返回值(&lt;code&gt;return&lt;/code&gt;函数):&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;Summary.MeanAndSd &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  mean &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  sd &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; sd&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kr"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; sd&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; Summary.MeanAndSd&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;-0.06053267&lt;/span&gt;  &lt;span class="m"&gt;0.79990931&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这次就可以得到输出，赋值给&lt;code&gt;result&lt;/code&gt;也就可以成功了。下面我们来将程序加一个功能，那就是计算置信区间。&lt;/p&gt;
&lt;h6&gt;4. 函数参数：&lt;/h6&gt;
&lt;p&gt;计算置信区间，那就需要知道置信度&lt;span class="math"&gt;\(\alpha\)&lt;/span&gt;的大小。这个时候函数就必须能够接受参数：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;Summary.MeanAndSd &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; alpha&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  mean &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  sd &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; sd&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  upper &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; alpha&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  ci &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; mean &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; qnorm&lt;span class="p"&gt;(&lt;/span&gt;alpha&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;sd&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="kp"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# qnorm计算正态分布的分位数&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kr"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;mean &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; sd &lt;span class="o"&gt;=&lt;/span&gt; sd&lt;span class="p"&gt;,&lt;/span&gt; ci &lt;span class="o"&gt;=&lt;/span&gt; ci&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# 使用列表输出结果是常用方式&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;Summary.MeanAndSd&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.05&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;运行上面的程序能够很轻松地得到结果。但是，如果我们运行&lt;code&gt;Summary.MeanAndSd(x)&lt;/code&gt;，程序就会报错，它会提醒你没有键入&lt;code&gt;alpha&lt;/code&gt;。但实际上，大部分默认情况下，&lt;span class="math"&gt;\(\alpha=0.05\)&lt;/span&gt;，完全可以将其设定成默认值：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;Summary.MeanAndSd &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; alpha&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0.05&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  mean &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  sd &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; sd&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  upper &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; alpha&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  ci &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; mean &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; qnorm&lt;span class="p"&gt;(&lt;/span&gt;alpha&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;sd&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="kp"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# qnorm计算正态分布的分位数&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kr"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;mean &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; sd &lt;span class="o"&gt;=&lt;/span&gt; sd&lt;span class="p"&gt;,&lt;/span&gt; ci &lt;span class="o"&gt;=&lt;/span&gt; ci&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# 使用列表输出结果是常用方式&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这回再运行&lt;code&gt;Summary.MeanAndSd(x)&lt;/code&gt;可以发现没有问题了。这里我们选取了列表作为输出的方式，这是一个常用的方式，利于查看保存。&lt;/p&gt;
&lt;h6&gt;5. 参数的合法性：&lt;/h6&gt;
&lt;p&gt;我们知道&lt;span class="math"&gt;\(\alpha\)&lt;/span&gt;是介于&lt;span class="math"&gt;\((0,1)\)&lt;/span&gt;之间的值，而且一般来说，&lt;span class="math"&gt;\(\alpha&amp;lt;0.5\)&lt;/span&gt;。但上面的程序并不能够处理这类的问题，当参数不合法时，它依然能够计算出一个结果：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; Summary.MeanAndSd&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="kp"&gt;mean&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;-0.06053267&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;$&lt;/span&gt;sd&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;0.7999093&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;$&lt;/span&gt;ci&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;-0.18117539&lt;/span&gt;  &lt;span class="m"&gt;0.06011005&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; Summary.MeanAndSd&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="kp"&gt;mean&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;-0.06053267&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;$&lt;/span&gt;sd&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;0.7999093&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;$&lt;/span&gt;ci&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;-0.0152177&lt;/span&gt; &lt;span class="m"&gt;-0.1058476&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样的结果显然是不合理的，函数并不具备一定的报错能力。对于用户不合法的输入参数，程序要能够及时停止程序的运行，并且告诉用户哪里错了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;Summary.MeanAndSd &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; alpha&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0.05&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;alpha &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; alpha &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="kp"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;The argument &amp;#39;alpha&amp;#39; should be between 0 and 1!&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="kr"&gt;else&lt;/span&gt; &lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;alpha &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="kp"&gt;warning&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;The argument &amp;#39;alpha&amp;#39; is often smaller than 0.5 and  close to 0!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  mean &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  sd &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; sd&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  upper &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; alpha&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  ci &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; mean &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; qnorm&lt;span class="p"&gt;(&lt;/span&gt;alpha&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;sd&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="kp"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# qnorm计算正态分布的分位数&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kr"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;mean &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; sd &lt;span class="o"&gt;=&lt;/span&gt; sd&lt;span class="p"&gt;,&lt;/span&gt; ci &lt;span class="o"&gt;=&lt;/span&gt; ci&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# 使用列表输出结果是常用方式&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;运行一下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; Summary.MeanAndSd&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;Error &lt;span class="kr"&gt;in&lt;/span&gt; Summary.MeanAndSd&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  The argument &lt;span class="s"&gt;&amp;#39;alpha&amp;#39;&lt;/span&gt; should be between &lt;span class="m"&gt;0&lt;/span&gt; and &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; Summary.MeanAndSd&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="kp"&gt;mean&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;-0.06053267&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;$&lt;/span&gt;sd&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;0.7999093&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;$&lt;/span&gt;ci&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;-0.0152177&lt;/span&gt; &lt;span class="m"&gt;-0.1058476&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;Warning &lt;span class="kp"&gt;message&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;In Summary.MeanAndSd&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  The argument &lt;span class="s"&gt;&amp;#39;alpha&amp;#39;&lt;/span&gt; is often smaller than &lt;span class="m"&gt;0.5&lt;/span&gt; and  close to &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样程序就具备了一定的稳健性，能够具备一些报错的能力。但是在实际处理数据的时候，往往还会遇到一种情况，那就是缺失值。想想看，上面写的程序能够很好地应付存在缺失值的数据吗？显然是不行的。&lt;/p&gt;
&lt;h6&gt;6. 注意缺失值&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 生成一组具有缺失值的数据&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;set.seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; y &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; y &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;y&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;NA&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;试试上面的程序，能否得到结果:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; Summary.MeanAndSd&lt;span class="p"&gt;(&lt;/span&gt;y&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="kp"&gt;mean&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="kc"&gt;NA&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;$&lt;/span&gt;sd&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="kc"&gt;NA&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;$&lt;/span&gt;ci&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="kc"&gt;NA&lt;/span&gt; &lt;span class="kc"&gt;NA&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;显然上面的程序无法处理存在缺失值的数据。回想一下，我们之前学过&lt;code&gt;na.rm&lt;/code&gt;参数，我们可以通过设定此参数剔除缺失值：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;Summary.MeanAndSd &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; alpha&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0.05&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;alpha &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; alpha &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="kp"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;The argument &amp;#39;alpha&amp;#39; should be between 0 and 1!&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="kr"&gt;else&lt;/span&gt; &lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;alpha &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="kp"&gt;warning&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;The argument &amp;#39;alpha&amp;#39; is often smaller than 0.5 and  close to 0!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;any&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;is.na&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;y&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="kp"&gt;warning&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;There are any &amp;#39;NA&amp;#39; in the data, we&amp;#39;ll ignore these datas!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  mean &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; na.rm&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  sd &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; sd&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; na.rm&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  n &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;ifelse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;any&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;is.na&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;y&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="kp"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kp"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;is.na&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="kp"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# n &amp;lt;- length(x)-sum(is.na(x)) 也可以&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  upper &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; alpha&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  ci &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; mean &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; qnorm&lt;span class="p"&gt;(&lt;/span&gt;alpha&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;sd&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="kp"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;n&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# qnorm计算正态分布的分位数&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kr"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;mean &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; sd &lt;span class="o"&gt;=&lt;/span&gt; sd&lt;span class="p"&gt;,&lt;/span&gt; ci &lt;span class="o"&gt;=&lt;/span&gt; ci&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# 使用列表输出结果是常用方式&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;现在运行一下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; Summary.MeanAndSd&lt;span class="p"&gt;(&lt;/span&gt;y&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="kp"&gt;mean&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;-0.06053267&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;$&lt;/span&gt;sd&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;0.7999093&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;$&lt;/span&gt;ci&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="m"&gt;0.2900366&lt;/span&gt; &lt;span class="m"&gt;-0.4111019&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;Warning &lt;span class="kp"&gt;message&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;In Summary.MeanAndSd&lt;span class="p"&gt;(&lt;/span&gt;y&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  There are any &lt;span class="s"&gt;&amp;#39;NA&amp;#39;&lt;/span&gt; &lt;span class="kr"&gt;in&lt;/span&gt; the data&lt;span class="p"&gt;,&lt;/span&gt; we&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;ll ignore these datas!&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样上面的程序就具备了处理缺失值的能力，它能够自动识别数据中是否存在缺失值，如果存在的话就剔除缺失值再进行计算，并且提醒用户存在缺失值。&lt;/p&gt;
&lt;p&gt;但其实R语言中存在另外一个方式，可以使得程序具备处理缺失值等等的问题。可以使用使用&lt;code&gt;...&lt;/code&gt;参数，使得自定义函数能够接受其它某些函数的参数，想象一下，如果可以这样调用我们的函数，&lt;code&gt;Summary.MeanAndSd(y, na.rm=TRUE)&lt;/code&gt;，是不是perfect。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;Summary.MeanAndSd &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; alpha&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0.05&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;...&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;alpha &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; alpha &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="kp"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;The argument &amp;#39;alpha&amp;#39; should be between 0 and 1!&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="kr"&gt;else&lt;/span&gt; &lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;alpha &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="kp"&gt;warning&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;The argument &amp;#39;alpha&amp;#39; is often smaller than 0.5 and  close to 0!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="c1"&gt;# ellipsis.arguments &amp;lt;- list(...)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  mean &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;...&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  sd &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; sd&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;...&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  n &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;ifelse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;any&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;is.na&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;y&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="kp"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kp"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;is.na&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="kp"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  upper &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; alpha&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  ci &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; mean &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; qnorm&lt;span class="p"&gt;(&lt;/span&gt;alpha&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;sd&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="kp"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;n&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# qnorm计算正态分布的分位数&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kr"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;mean &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; sd &lt;span class="o"&gt;=&lt;/span&gt; sd&lt;span class="p"&gt;,&lt;/span&gt; ci &lt;span class="o"&gt;=&lt;/span&gt; ci&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# 使用列表输出结果是常用方式&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样就可以直接使用&lt;code&gt;Summary.MeanAndSd(y, na.rm=TRUE)&lt;/code&gt;来计算了。&lt;/p&gt;
&lt;h6&gt;7. 递归函数&lt;/h6&gt;
&lt;p&gt;递归函数即自调用函数，有些时候我们会使用到，这里举个例子：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;plusFun1 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kr"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;ifelse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; plusFun&lt;span class="p"&gt;(&lt;/span&gt;x &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; x&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;当然也可以使用R的内置函数&lt;code&gt;Recall&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;plusFun2 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kr"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;ifelse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;Recall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="m"&gt;+1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; x&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;三. 小结&lt;/h4&gt;
&lt;p&gt;今天讲了如何在R语言里面构造一个稳健的函数，以及&lt;code&gt;ifelse&lt;/code&gt;和&lt;code&gt;Recall&lt;/code&gt;函数的使用。写完这些，基本上R语言的基础就结束了。下面就开始写如何使用R语言去解决统计问题。由于我是概率统计专业的，而且是数学系出生，所以写的东西会有不少的理论。&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="r"></category><category term="data science"></category></entry><entry><title>R语言记录3:数据的导入及复杂操作</title><link href="//jacky-sj/r-series-3.html" rel="alternate"></link><published>2014-03-09T11:16:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-03-09:/r-series-3.html</id><summary type="html">&lt;p&gt;R 语言编程 3 - 数据相关2&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;上一节介绍了R语言中常用的数据类型，并且介绍了R语言中对数据的一些简单操作，如创建查看向量或者矩阵等等。今天就介绍一下如何从文件中导入数据，以及对数据进行一些较为复杂的操作。&lt;/p&gt;
&lt;h4&gt;一. 读取数据&lt;/h4&gt;
&lt;p&gt;R语言读取数据有很多方式，如&lt;code&gt;scan&lt;/code&gt;函数，&lt;code&gt;read.table&lt;/code&gt;函数等等。我这里还想介绍另外两个函数，&lt;code&gt;read.csv&lt;/code&gt;和&lt;code&gt;read.delim&lt;/code&gt;函数，因为处理数据，大部分时候遇到的文件是csv文件或者txt文件，而这两个函数可以很好的读取此类型的文件。&lt;/p&gt;
&lt;h5&gt;1. &lt;code&gt;scan&lt;/code&gt;函数&lt;/h5&gt;
&lt;p&gt;首先简单说说&lt;code&gt;scan&lt;/code&gt;函数，这个函数在默认的情况下，希望所有输入的数据都是数值型的。&lt;code&gt;scan&lt;/code&gt;函数读取的数据必须是同一模式的，如果没有指定参数，scan将从R控制台读取数据，直到遇到一个空白行停止。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;scan&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;7&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;Read &lt;span class="m"&gt;6&lt;/span&gt; items&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; x&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;也可以通过设定参数，设定读取的数据类型：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; y &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;scan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;what&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 读取字符型数据&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;7&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;Read &lt;span class="m"&gt;6&lt;/span&gt; items&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; y&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;1&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;2&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;3&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;2&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;3&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;也可以直接读取一个同一模式的数据文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; z &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;scan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;example.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;Read &lt;span class="m"&gt;9&lt;/span&gt; items&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; z&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="m"&gt;8&lt;/span&gt; &lt;span class="m"&gt;9&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其中&lt;code&gt;example.txt&lt;/code&gt;的内容如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;1   2   3&lt;/span&gt;
&lt;span class="code-line"&gt;4   5   6&lt;/span&gt;
&lt;span class="code-line"&gt;7   8   9&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注意最后留一个空白行，以便R读取数据时可以找到终止位置(否则会出现&lt;code&gt;warning&lt;/code&gt;)。&lt;/p&gt;
&lt;h5&gt;2. &lt;code&gt;read.table&lt;/code&gt;函数&lt;/h5&gt;
&lt;p&gt;顾名思义，&lt;code&gt;read.table&lt;/code&gt;函数即是以&lt;strong&gt;数据框&lt;/strong&gt;的格式在R中读取数据。这里就涉及到一个新的概念，&lt;strong&gt;数据框&lt;/strong&gt;。前一节我们提到过，可以使用列表和数据框去存储具有不同模式的数据。&lt;strong&gt;数据框&lt;/strong&gt;可以存储具有相同长度的变量，并且在统计中，其每一行就是样本的一个观测值，有多少行就有多少次观测。我们可以使用&lt;code&gt;data.frame&lt;/code&gt;函数来生成一个数据框：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; name &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Li&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Wang&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Sun&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; age &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;23&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; Datafr &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;data.frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;name &lt;span class="o"&gt;=&lt;/span&gt; name&lt;span class="p"&gt;,&lt;/span&gt; age &lt;span class="o"&gt;=&lt;/span&gt; age&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; Datafr&lt;/span&gt;
&lt;span class="code-line"&gt;  name age&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;1&lt;/span&gt;   Li  &lt;span class="m"&gt;21&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;2&lt;/span&gt; Wang  &lt;span class="m"&gt;22&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;3&lt;/span&gt;  Sun  &lt;span class="m"&gt;23&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;此外，数据框还有一个优点：可以在不影响原始数据的情况下，改变数据。比如我想知道，数据里面每个人的年龄比18大多少：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; Datafr2 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;data.frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;name &lt;span class="o"&gt;=&lt;/span&gt; name&lt;span class="p"&gt;,&lt;/span&gt; age &lt;span class="o"&gt;=&lt;/span&gt; age&lt;span class="p"&gt;,&lt;/span&gt; age.u &lt;span class="o"&gt;=&lt;/span&gt; age&lt;span class="m"&gt;-18&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; Datafr2&lt;/span&gt;
&lt;span class="code-line"&gt;  name age age.u&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;1&lt;/span&gt;   Li  &lt;span class="m"&gt;21&lt;/span&gt;     &lt;span class="m"&gt;3&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;2&lt;/span&gt; Wang  &lt;span class="m"&gt;22&lt;/span&gt;     &lt;span class="m"&gt;4&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;3&lt;/span&gt;  Sun  &lt;span class="m"&gt;23&lt;/span&gt;     &lt;span class="m"&gt;5&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;那么如何使用&lt;code&gt;read.table&lt;/code&gt;函数呢，看看如下示例：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; example &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; read.table&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;example.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; header&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; example&lt;/span&gt;
&lt;span class="code-line"&gt;  V1 V2 V3&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;2&lt;/span&gt;  &lt;span class="m"&gt;3&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;2&lt;/span&gt;  &lt;span class="m"&gt;4&lt;/span&gt;  &lt;span class="m"&gt;5&lt;/span&gt;  &lt;span class="m"&gt;6&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;3&lt;/span&gt;  &lt;span class="m"&gt;7&lt;/span&gt;  &lt;span class="m"&gt;8&lt;/span&gt;  &lt;span class="m"&gt;9&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其中&lt;code&gt;header&lt;/code&gt;参数指定数据文件的第一行是否为变量名。当没有变量名时，可以使用参数&lt;code&gt;col.names&lt;/code&gt;来指定：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; example &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; read.table&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;example.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; header&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; col.names&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;x1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;x2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;x3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; example&lt;/span&gt;
&lt;span class="code-line"&gt;  x1 x2 x3&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;2&lt;/span&gt;  &lt;span class="m"&gt;3&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;2&lt;/span&gt;  &lt;span class="m"&gt;4&lt;/span&gt;  &lt;span class="m"&gt;5&lt;/span&gt;  &lt;span class="m"&gt;6&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;3&lt;/span&gt;  &lt;span class="m"&gt;7&lt;/span&gt;  &lt;span class="m"&gt;8&lt;/span&gt;  &lt;span class="m"&gt;9&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;当然&lt;code&gt;read.table&lt;/code&gt;函数读取数据时，可以使用&lt;code&gt;sep=参数&lt;/code&gt;指定分隔符。这些可以使用&lt;code&gt;?read.table&lt;/code&gt;查看。&lt;/p&gt;
&lt;h5&gt;3. &lt;code&gt;read.csv&lt;/code&gt;和&lt;code&gt;read.delim&lt;/code&gt;函数&lt;/h5&gt;
&lt;p&gt;使用方法与&lt;code&gt;read.table&lt;/code&gt;函数类似，可以直接读取csv文件和txt文件。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;dataCsv &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; read.csv&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;example.csv&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; header&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;dataTxt &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; read.delim&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;example.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; header&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;二. 数据操作&lt;/h4&gt;
&lt;p&gt;上一节介绍了一些简单的数据操作，这次讲一讲较为复杂的数据操作。&lt;/p&gt;
&lt;h6&gt;1. 首先从&lt;span class="math"&gt;\(-5\)&lt;/span&gt;到&lt;span class="math"&gt;\(5\)&lt;/span&gt;中随机取出不重复的&lt;span class="math"&gt;\(10\)&lt;/span&gt;个数据(&lt;code&gt;sample&lt;/code&gt;函数)：&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-5&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; y &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-5&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; x&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;-2&lt;/span&gt;  &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;-3&lt;/span&gt;  &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;-5&lt;/span&gt;  &lt;span class="m"&gt;5&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;-1&lt;/span&gt;  &lt;span class="m"&gt;2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; y&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;-1&lt;/span&gt;  &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;-3&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;-4&lt;/span&gt;  &lt;span class="m"&gt;5&lt;/span&gt;  &lt;span class="m"&gt;0&lt;/span&gt;  &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;-5&lt;/span&gt; &lt;span class="m"&gt;-2&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;2. 判断&lt;span class="math"&gt;\(x\)&lt;/span&gt;中的数据是否大于&lt;span class="math"&gt;\(0\)&lt;/span&gt;(&lt;code&gt;all&lt;/code&gt;和&lt;code&gt;any&lt;/code&gt;函数)：&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; x&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;  &lt;span class="kc"&gt;TRUE&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;  &lt;span class="kc"&gt;TRUE&lt;/span&gt;  &lt;span class="kc"&gt;TRUE&lt;/span&gt;  &lt;span class="kc"&gt;TRUE&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;  &lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;any&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;3. 试试更多的逻辑运算(&lt;code&gt;&amp;amp;, |, !&lt;/code&gt;)：&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; x &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; y &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;     &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;  &lt;span class="kc"&gt;TRUE&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;  &lt;span class="kc"&gt;TRUE&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;  &lt;span class="kc"&gt;TRUE&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; x &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; y &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;  &lt;span class="kc"&gt;TRUE&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;  &lt;span class="kc"&gt;TRUE&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;  &lt;span class="kc"&gt;TRUE&lt;/span&gt;  &lt;span class="kc"&gt;TRUE&lt;/span&gt;  &lt;span class="kc"&gt;TRUE&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;  &lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;     &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="kc"&gt;TRUE&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;  &lt;span class="kc"&gt;TRUE&lt;/span&gt;  &lt;span class="kc"&gt;TRUE&lt;/span&gt;  &lt;span class="kc"&gt;TRUE&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;  &lt;span class="kc"&gt;TRUE&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;4. 找出&lt;span class="math"&gt;\(x\)&lt;/span&gt;与&lt;span class="math"&gt;\(y\)&lt;/span&gt;相等的元素(&lt;code&gt;which&lt;/code&gt;函数):&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; x &lt;span class="o"&gt;==&lt;/span&gt; y&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;  &lt;span class="kc"&gt;TRUE&lt;/span&gt;  &lt;span class="kc"&gt;TRUE&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;  &lt;span class="kc"&gt;TRUE&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;which&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x &lt;span class="o"&gt;==&lt;/span&gt; y&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 取出满足条件的位置&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;5. 从&lt;span class="math"&gt;\(-5\)&lt;/span&gt;到&lt;span class="math"&gt;\(5\)&lt;/span&gt;中随机取出允许重复的&lt;span class="math"&gt;\(10\)&lt;/span&gt;个数据(&lt;code&gt;sample&lt;/code&gt;函数)：&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; z &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-5&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; replace&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; z&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;-4&lt;/span&gt; &lt;span class="m"&gt;-1&lt;/span&gt; &lt;span class="m"&gt;-2&lt;/span&gt;  &lt;span class="m"&gt;4&lt;/span&gt;  &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="m"&gt;-3&lt;/span&gt; &lt;span class="m"&gt;-3&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;2&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;6. 取出&lt;span class="math"&gt;\(z\)&lt;/span&gt;中不同的元素(&lt;code&gt;unique&lt;/code&gt;函数)：&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; z.unique &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;z&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; z.unique&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;-4&lt;/span&gt; &lt;span class="m"&gt;-1&lt;/span&gt; &lt;span class="m"&gt;-2&lt;/span&gt;  &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="m"&gt;-3&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;2&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;7. 生成存在缺失数据的一列数据(&lt;code&gt;NA&lt;/code&gt;)：&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; x.na &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;NA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;NA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; x.na&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;2&lt;/span&gt;  &lt;span class="m"&gt;3&lt;/span&gt;  &lt;span class="m"&gt;4&lt;/span&gt;  &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="kc"&gt;NA&lt;/span&gt;  &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="kc"&gt;NA&lt;/span&gt;  &lt;span class="m"&gt;3&lt;/span&gt;  &lt;span class="m"&gt;4&lt;/span&gt;  &lt;span class="m"&gt;5&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;8. 对&lt;span class="math"&gt;\(x\)&lt;/span&gt;求和(&lt;code&gt;is.na&lt;/code&gt;函数):&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x.na&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 带着缺失数据计算&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="kc"&gt;NA&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;is.na&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x.na&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# 统计缺失数据的个数&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x.na&lt;span class="p"&gt;,&lt;/span&gt; na.rm&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 剔除缺失数据后求和&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;29&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;9. 向变量&lt;span class="math"&gt;\(x\)&lt;/span&gt;中添加数据(&lt;code&gt;append&lt;/code&gt;函数)：&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-5&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; x&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;-2&lt;/span&gt;  &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;-3&lt;/span&gt;  &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;-5&lt;/span&gt;  &lt;span class="m"&gt;5&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;-1&lt;/span&gt;  &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;-1&lt;/span&gt; &lt;span class="m"&gt;-5&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;10. 更改&lt;span class="math"&gt;\(x\)&lt;/span&gt;的数据类型(&lt;code&gt;as.character&lt;/code&gt;,&lt;code&gt;as.factor&lt;/code&gt;,&lt;code&gt;as.numeric&lt;/code&gt;函数)：&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;as.character&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; x&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;  &lt;span class="s"&gt;&amp;quot;8&amp;quot;&lt;/span&gt;  &lt;span class="s"&gt;&amp;quot;3&amp;quot;&lt;/span&gt;  &lt;span class="s"&gt;&amp;quot;5&amp;quot;&lt;/span&gt;  &lt;span class="s"&gt;&amp;quot;4&amp;quot;&lt;/span&gt;  &lt;span class="s"&gt;&amp;quot;10&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;6&amp;quot;&lt;/span&gt;  &lt;span class="s"&gt;&amp;quot;9&amp;quot;&lt;/span&gt;  &lt;span class="s"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;  &lt;span class="s"&gt;&amp;quot;7&amp;quot;&lt;/span&gt;  &lt;span class="s"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;  &lt;span class="s"&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;as.factor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; x&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;  &lt;span class="m"&gt;8&lt;/span&gt;  &lt;span class="m"&gt;3&lt;/span&gt;  &lt;span class="m"&gt;5&lt;/span&gt;  &lt;span class="m"&gt;4&lt;/span&gt;  &lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt;  &lt;span class="m"&gt;9&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;7&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;4&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;Levels&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="m"&gt;8&lt;/span&gt; &lt;span class="m"&gt;9&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;as.numeric&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;as.character&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# 如果一组因子变量是用数字表示，一般先将数字因子转换成字符后再转换成数值。&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; x&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="m"&gt;2&lt;/span&gt;  &lt;span class="m"&gt;8&lt;/span&gt;  &lt;span class="m"&gt;3&lt;/span&gt;  &lt;span class="m"&gt;5&lt;/span&gt;  &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;  &lt;span class="m"&gt;6&lt;/span&gt;  &lt;span class="m"&gt;9&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;7&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;4&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;11. 数据类型更改(&lt;code&gt;unlist&lt;/code&gt;,&lt;code&gt;as.data.frame&lt;/code&gt;)：&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; myList &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; myList&lt;span class="o"&gt;$&lt;/span&gt;x1 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; myList&lt;span class="o"&gt;$&lt;/span&gt;x2 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; myList&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;$&lt;/span&gt;x1&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;$&lt;/span&gt;x2&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# unlist&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; uList &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;unlist&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;myList&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; uList&lt;/span&gt;
&lt;span class="code-line"&gt;x11 x12 x13 x21 x22 x23&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="m"&gt;1&lt;/span&gt;   &lt;span class="m"&gt;2&lt;/span&gt;   &lt;span class="m"&gt;3&lt;/span&gt;   &lt;span class="m"&gt;2&lt;/span&gt;   &lt;span class="m"&gt;4&lt;/span&gt;   &lt;span class="m"&gt;6&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# matrix&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; mList &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;uList&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; byrow&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; mList&lt;/span&gt;
&lt;span class="code-line"&gt;     &lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;    &lt;span class="m"&gt;1&lt;/span&gt;    &lt;span class="m"&gt;2&lt;/span&gt;    &lt;span class="m"&gt;3&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;    &lt;span class="m"&gt;2&lt;/span&gt;    &lt;span class="m"&gt;4&lt;/span&gt;    &lt;span class="m"&gt;6&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# dataframe&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; dfList &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;as.data.frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;mList&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; dfList&lt;/span&gt;
&lt;span class="code-line"&gt;  V1 V2 V3&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;2&lt;/span&gt;  &lt;span class="m"&gt;3&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;2&lt;/span&gt;  &lt;span class="m"&gt;2&lt;/span&gt;  &lt;span class="m"&gt;4&lt;/span&gt;  &lt;span class="m"&gt;6&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;colnames&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dfList&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;x1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;x2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;x3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; dfList&lt;/span&gt;
&lt;span class="code-line"&gt;  x1 x2 x3&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;2&lt;/span&gt;  &lt;span class="m"&gt;3&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;2&lt;/span&gt;  &lt;span class="m"&gt;2&lt;/span&gt;  &lt;span class="m"&gt;4&lt;/span&gt;  &lt;span class="m"&gt;6&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;rownames&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dfList&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;o1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;o2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; dfList&lt;/span&gt;
&lt;span class="code-line"&gt;   x1 x2 x3&lt;/span&gt;
&lt;span class="code-line"&gt;o1  &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;2&lt;/span&gt;  &lt;span class="m"&gt;3&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;o2  &lt;span class="m"&gt;2&lt;/span&gt;  &lt;span class="m"&gt;4&lt;/span&gt;  &lt;span class="m"&gt;6&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;12. 按条件整理计算数据(&lt;code&gt;table&lt;/code&gt;,&lt;code&gt;tapply&lt;/code&gt;,&lt;code&gt;by&lt;/code&gt;,&lt;code&gt;aggregate&lt;/code&gt;函数)：&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; x&lt;span class="o"&gt;$&lt;/span&gt;a &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-10&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; replace&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; x&lt;span class="o"&gt;$&lt;/span&gt;b &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;as.factor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; replace&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; x&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;as.factor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-3&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; replace&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; x&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# 统计因子出现的频数&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="o"&gt;$&lt;/span&gt;b&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;2&lt;/span&gt;  &lt;span class="m"&gt;3&lt;/span&gt;  &lt;span class="m"&gt;4&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="m"&gt;5&lt;/span&gt;  &lt;span class="m"&gt;3&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;11&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;-3&lt;/span&gt; &lt;span class="m"&gt;-2&lt;/span&gt; &lt;span class="m"&gt;-1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="m"&gt;9&lt;/span&gt;  &lt;span class="m"&gt;7&lt;/span&gt;  &lt;span class="m"&gt;4&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="o"&gt;$&lt;/span&gt;b&lt;span class="p"&gt;,&lt;/span&gt; x&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="m"&gt;-3&lt;/span&gt; &lt;span class="m"&gt;-2&lt;/span&gt; &lt;span class="m"&gt;-1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;3&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="m"&gt;2&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;2&lt;/span&gt;  &lt;span class="m"&gt;0&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="m"&gt;3&lt;/span&gt;  &lt;span class="m"&gt;0&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;0&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="m"&gt;4&lt;/span&gt;  &lt;span class="m"&gt;7&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;3&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# 使用tapply，by以及aggregate函数根据不同因子对数据进行计算&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;tapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="o"&gt;$&lt;/span&gt;a&lt;span class="p"&gt;,&lt;/span&gt; x&lt;span class="o"&gt;$&lt;/span&gt;b&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;2&lt;/span&gt;  &lt;span class="m"&gt;3&lt;/span&gt;  &lt;span class="m"&gt;4&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="m"&gt;8&lt;/span&gt; &lt;span class="m"&gt;11&lt;/span&gt;  &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;-5&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;tapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="o"&gt;$&lt;/span&gt;a&lt;span class="p"&gt;,&lt;/span&gt; x&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;-3&lt;/span&gt; &lt;span class="m"&gt;-2&lt;/span&gt; &lt;span class="m"&gt;-1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;-7&lt;/span&gt; &lt;span class="m"&gt;16&lt;/span&gt;  &lt;span class="m"&gt;7&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;tapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="o"&gt;$&lt;/span&gt;a&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="o"&gt;$&lt;/span&gt;b&lt;span class="p"&gt;,&lt;/span&gt; x&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="kp"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 可以看到，由于b=2且c=-1的数据不存在，所有计算结果为NA(其它类似)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="m"&gt;-3&lt;/span&gt; &lt;span class="m"&gt;-2&lt;/span&gt; &lt;span class="m"&gt;-1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;-3&lt;/span&gt;  &lt;span class="m"&gt;6&lt;/span&gt;  &lt;span class="m"&gt;5&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;2&lt;/span&gt;  &lt;span class="m"&gt;5&lt;/span&gt;  &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="kc"&gt;NA&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="kc"&gt;NA&lt;/span&gt;  &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="kc"&gt;NA&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;-9&lt;/span&gt;  &lt;span class="m"&gt;2&lt;/span&gt;  &lt;span class="m"&gt;2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="o"&gt;$&lt;/span&gt;a&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="o"&gt;$&lt;/span&gt;b&lt;span class="p"&gt;,&lt;/span&gt; x&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="kp"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 输出结果太长就不给出了，可以观察一下与tapply输出的区别&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; aggregate&lt;span class="p"&gt;(&lt;/span&gt;a &lt;span class="o"&gt;~&lt;/span&gt; b&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; x&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 第一个参数为要计算的量，中间的参数为条件，第三个参数为数据集名称，最后一个为函数&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  b  &lt;span class="kt"&gt;c&lt;/span&gt;  a&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;-3&lt;/span&gt; &lt;span class="m"&gt;-3&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;-3&lt;/span&gt;  &lt;span class="m"&gt;5&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;-3&lt;/span&gt; &lt;span class="m"&gt;-9&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;-2&lt;/span&gt;  &lt;span class="m"&gt;6&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;-2&lt;/span&gt;  &lt;span class="m"&gt;6&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;-2&lt;/span&gt;  &lt;span class="m"&gt;2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;-2&lt;/span&gt;  &lt;span class="m"&gt;2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;8&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;-1&lt;/span&gt;  &lt;span class="m"&gt;5&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;9&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;-1&lt;/span&gt;  &lt;span class="m"&gt;2&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;三. 小节&lt;/h4&gt;
&lt;p&gt;这次我们介绍了R语言如何从外部读取数据，以及对得到的数据如何进行一些复杂点的操作。当然这还不是全部，比如我这里还没有讲到如何将数据集按行按列去进行合并(&lt;code&gt;rbind&lt;/code&gt;,&lt;code&gt;cbind&lt;/code&gt;函数)等等，这些都可以通过help文档得到。我觉得学习一门语言一定要学会使用&lt;code&gt;help&lt;/code&gt;，还有善用Google很重要。&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="r"></category><category term="data science"></category></entry><entry><title>R语言记录2 ：R语言中的数据</title><link href="//jacky-sj/r-series-2.html" rel="alternate"></link><published>2014-03-07T17:03:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-03-07:/r-series-2.html</id><summary type="html">&lt;p&gt;R 语言编程 2 - 数据相关&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;上一次简单地讲了一下R语言编程的一些控制语句，这次来看一看R中的数据。&lt;/p&gt;
&lt;h4&gt;一. 数据类型简介&lt;/h4&gt;
&lt;p&gt;首先，要记住，R语言中的一切都是对象，&lt;code&gt;Everything in R is an Object&lt;/code&gt;。那么对象就存在其属性，R中每一个对象包含多个属性用来描述该对象。最重要的两个属性是&lt;strong&gt;模式&lt;/strong&gt;和&lt;strong&gt;类&lt;/strong&gt;。可以使用函数&lt;code&gt;mode()&lt;/code&gt;和函数&lt;code&gt;class()&lt;/code&gt;去查看对象的模式和类。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 比如查看函数sum的模式和类&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="c1"&gt;# function&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;class&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# function&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;我们用R语言来处理数据，遇到的最多的对象模式应该是&lt;em&gt;数值型&lt;/em&gt;，&lt;em&gt;字符型&lt;/em&gt;，&lt;em&gt;逻辑型&lt;/em&gt;，&lt;em&gt;因子&lt;/em&gt;和&lt;em&gt;日期时间&lt;/em&gt;。而我们正常处理的数据中往往会存在不止一种数据模式，比如一批数据中有变量：姓名和年龄，显然姓名是字符型而年龄是数值型。那么在存储这些变量的时候，就出现一个对象需要对应多个模式。R语言中&lt;strong&gt;像矩阵，数组等等的对象只能存储相同模式的数据；而像数据框，列表等等的对象则可存储多种模式的数据&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;在R中最常遇到的数据模式是&lt;strong&gt;&lt;em&gt;列表&lt;/em&gt;&lt;/strong&gt;，因为其可以存储具有不同模式和不同长度的对象。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;create.list &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;name &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Li&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Wang&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;quot; Xue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; age &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;24&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; sex &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;factor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;g&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# 使用sapply查看模式和类（回想上一节内容）&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;sapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;create.list&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;sapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;create.list&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;class&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;二. 简单的数据操作&lt;/h4&gt;
&lt;h6&gt;1. 进入R程序，更改工作空间：&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 获取当前的路径&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;getwd&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# 更改到目标路径&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;setwd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;~/DataInR&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;2. 向量&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# c函数：连接或合并数据&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;y &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;abc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;bc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;c&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# 使用seq函数创建数据&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;z &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 或 z &amp;lt;- 1:21&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# 查看数据&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;z&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;z&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;z&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;z&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;nchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;y&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 注意空格&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;z&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;z&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# 合并数据&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;y&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;xy &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; y&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;xy&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## c函数合并不同模式的数据：logical &amp;lt; integer &amp;lt; numeric &amp;lt; complex &amp;lt; character &amp;lt; list&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## 当级别低的遇到级别高的，则转为级别高的&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## 比如logical与integer合并，则logical类型中TRUE转成1，FALSE转成0，全部转成integer&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# 简单运算&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;z &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;z &lt;span class="o"&gt;+&lt;/span&gt; x &lt;span class="c1"&gt;# 注意长度不同&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;k &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;20&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;z &lt;span class="o"&gt;+&lt;/span&gt; k &lt;span class="c1"&gt;# 注意warning&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;3. 矩阵&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 创建矩阵&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;v &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;12&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;m &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;v&lt;span class="p"&gt;,&lt;/span&gt; nrow &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; ncol &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;m1 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;v&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;m2 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;v&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;m3 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;v&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;m4 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 创建零矩阵&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;m5 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 全一矩阵&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;m6 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 行相同矩阵&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;m7 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 列相同矩阵&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;m8 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 注意warning&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# 查看数据&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;m&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;m&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;dim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;m&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;m&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;m&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;m&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;三. 小节&lt;/h4&gt;
&lt;p&gt;到此为止，我们就可以在R语言中创建录入一些数据，并对数据进行一些简单的操作。利用上一节中所讲的控制语句，我们就可以编写R语言的小程序了。试试用R语言解决一些你在学习中遇到的小问题吧。下一次我将讲讲如何从文件中导入数据，以及一些其他的处理。&lt;/p&gt;</content><category term="r"></category><category term="data science"></category></entry><entry><title>R语言记录1 ：基础</title><link href="//jacky-sj/r-series-1.html" rel="alternate"></link><published>2014-03-06T15:27:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-03-06:/r-series-1.html</id><summary type="html">&lt;p&gt;R 语言编程 1 - 基础内容&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;一. 配置与帮助&lt;/h3&gt;
&lt;p&gt;很多时候我们希望软件可以根据我们的需要输出结果，比如我想将所有的结果小数都保留三位，那么就需要自己去更改设置，这时候就需要使用函数：&lt;code&gt;options(...)&lt;/code&gt;。这个函数可以用来&lt;strong&gt;&lt;em&gt;显示或设置当前的选项&lt;/em&gt;&lt;/strong&gt;。运行&lt;code&gt;options()&lt;/code&gt;，可以查看选项当前的设置，&lt;code&gt;help(options)&lt;/code&gt;可以显示可用选项的说明。如果想要单独查看某一个设置，则需要使用函数&lt;code&gt;getOption(x, default=NULL)&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;可以运行这些代码以查看：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kp"&gt;options&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;getOption&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;digits&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;options&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;digits&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;getOption&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;digits&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在学习一个软件之前，最重要的是知道在哪里才能获取帮助。R语言提供了强大的帮助系统，提供了已安装包中所有函数的细节、参考文献以及使用示例。以和函数&lt;code&gt;sum()&lt;/code&gt;为例，你可以直接输入&lt;code&gt;help(sum)或?sum&lt;/code&gt;查看函数&lt;code&gt;sum&lt;/code&gt;的帮助，也可以输入&lt;code&gt;help.search(sum)或??sum&lt;/code&gt;在本地以关键词&lt;code&gt;sum&lt;/code&gt;进行搜索。你甚至可以直接输入&lt;code&gt;sum&lt;/code&gt;得到该函数的源代码细节（这对于学习编程来说实在是太棒了）。&lt;/p&gt;
&lt;p&gt;试试这些：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;help.start&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# 打开帮助文档首页&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="kp"&gt;sum&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;??&lt;/span&gt;&lt;span class="kp"&gt;sum&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kp"&gt;sum&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;二. 控制语句&lt;/h3&gt;
&lt;h4&gt;1. 循环语句&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;var &lt;span class="kr"&gt;in&lt;/span&gt; &lt;span class="kp"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; expr&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;即变量&lt;em&gt;var&lt;/em&gt;从&lt;em&gt;seq&lt;/em&gt;中依次取值，计算&lt;em&gt;expr&lt;/em&gt;直到结束。例如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kr"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;i &lt;span class="kr"&gt;in&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; x&lt;span class="p"&gt;[&lt;/span&gt;i&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;-&lt;/span&gt;i&lt;span class="o"&gt;*&lt;/span&gt;i&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;当然，R语言也支持&lt;code&gt;while&lt;/code&gt;和&lt;code&gt;repeat&lt;/code&gt;这类C语言风格的循环：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# while loop&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;i &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kr"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;i &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    x&lt;span class="p"&gt;[&lt;/span&gt;i&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; i&lt;span class="o"&gt;*&lt;/span&gt;i&lt;/span&gt;
&lt;span class="code-line"&gt;    i &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; i&lt;span class="m"&gt;+1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# another while loop&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;i &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kr"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    x&lt;span class="p"&gt;[&lt;/span&gt;i&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; i&lt;span class="o"&gt;*&lt;/span&gt;i&lt;/span&gt;
&lt;span class="code-line"&gt;    i &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; i&lt;span class="m"&gt;+1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;i &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;break&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# repeat loop&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;i &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kr"&gt;repeat&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    x&lt;span class="p"&gt;[&lt;/span&gt;i&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; i&lt;span class="o"&gt;*&lt;/span&gt;i&lt;/span&gt;
&lt;span class="code-line"&gt;    i &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; i&lt;span class="m"&gt;+1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;i &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;break&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;==========================&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;非向量集合上的循环&lt;/h5&gt;
&lt;p&gt;R语言并不直接支持在非向量结合上做循环，但是我们可以用函数&lt;code&gt;apply()&lt;/code&gt;,&lt;code&gt;sapply()&lt;/code&gt;,&lt;code&gt;lapply()&lt;/code&gt;以及&lt;code&gt;tapply&lt;/code&gt;来避开循环得到想要的结果。&lt;/p&gt;
&lt;p&gt;比如上面的例子，对集合{1, 2, 3}中每一个元素求平方得到新的集合：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;i &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;Fun &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    y &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; x&lt;span class="o"&gt;*&lt;/span&gt;x&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;lapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;i&lt;span class="p"&gt;,&lt;/span&gt; Fun&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;使用&lt;code&gt;apply()&lt;/code&gt;函数，还可以简单地对一个矩阵按行(按列)求和(任意函数)。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;a &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; nrow&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;b &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;a&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kt"&gt;c&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;a&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;2. 条件语句&lt;/h4&gt;
&lt;p&gt;跟C语言类似：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;r &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;r &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="kr"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;3. 自定义函数&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;formal arguments&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kp"&gt;body&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;使用上面的例子：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;Fun &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    y &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; x&lt;span class="o"&gt;*&lt;/span&gt;x&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;a &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;b &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; Fun&lt;span class="p"&gt;(&lt;/span&gt;a&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;学习这么多之后，我们就可以使用R做点小事情了。但是这还没有涉及到R语言自身的东西，毕竟上面的这些能力哪个编程语言没有。&lt;/p&gt;</content><category term="r"></category><category term="data science"></category></entry><entry><title>记录：Octopress配置修改之旅</title><link href="//jacky-sj/octopress2.html" rel="alternate"></link><published>2014-02-26T15:40:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-02-26:/octopress2.html</id><summary type="html">&lt;p&gt;记录修改 Octopress 配置的过程&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;花了两天的时间对主题进行了修改，由于对Web的东西了解的不多，查资料找东西修改代码着实累了一把(丫的，这些代码可读性很强，比起R，Python神马的可是容易学的多。只是要看懂框架还真是需要大大的一番功夫，而且怎么修改CSS做效果，作为门外汉的我是真心欲哭无泪啊)。&lt;/p&gt;
&lt;p&gt;本来想把网页做得美观大方简洁，高大上吧反正。最终出来这么个效果，虽说离高大上远了点，但我也就算是满意了，起码它是自己独有的，也算是独一无二了。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;在修改配置的过程中发现了一些东西，在这里做个小记录。&lt;/p&gt;
&lt;h4&gt;1. 安装第三方主题的结果&lt;/h4&gt;
&lt;p&gt;由于想偷懒，所以一开始就想直接使用现有的第三方主题，安装的主题多了之后，发现一个很严重的问题。那就是当我对一些配置进行修改后，发现网页根本没有作出反应。最终我在网页审查元素时发现，我做的很多修改都被其它设置覆盖掉了。很多主题同时安装会导致出现越来越多的配置文件，最终配置混乱难以修改。但是我只是遇到字体啊，颜色啊一类小的问题，大的问题倒是没有遇到。&lt;/p&gt;
&lt;p&gt;有了这个教训，我就将所有的内容重新部署之后，使用默认主题进行修改，这样的好处是，没有那么多杂七杂八的配置文件，找个什么东西也比较方便。&lt;/p&gt;
&lt;h4&gt;2. 统一文章的样式&lt;/h4&gt;
&lt;p&gt;之前发过两篇博文，第一篇很短，第二篇很长。直接发上去的结果就是列表页面太长，看起来很难受。所以就决定采用&lt;code&gt;read on&lt;/code&gt;的方法，在文中加了&lt;code&gt;&amp;lt;!-- more --&amp;gt;&lt;/code&gt;之后的确或多或少解决了这个问题。&lt;/p&gt;
&lt;p&gt;但是不同的文章无法控制其样式统一，保持好的视觉效果。后来在&lt;a href="http://beyondvincent.com/"&gt;破船之家&lt;/a&gt;网站和&lt;a href="http://www.uiweek.com/"&gt;UIWeek&lt;/a&gt;杂志上得到了启发；最终决定将博客的&lt;strong&gt;Header&lt;/strong&gt;设定成蓝色渐变，每一篇日志都以蓝色图片的形式出现在列表，更多的内容就放到博文内部。这样一来就能够保证样式统一，而且看起来比较简洁，换个专业点的话就是学习成本低（呵呵）。&lt;/p&gt;
&lt;h4&gt;3. 隐藏侧边栏&lt;/h4&gt;
&lt;p&gt;对于我这种有洁癖的人来说，大部分情况下侧边栏不存在比较好(难得看到一个侧边栏存在还好看简洁的网站)，所以打一开始就是要结束它的。要想做到这个效果，需要修改&lt;code&gt;_config.yml&lt;/code&gt;文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;# remove the sidebar&lt;/span&gt;
&lt;span class="code-line"&gt;default_asides: []&lt;/span&gt;
&lt;span class="code-line"&gt;sidebar: collapse&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;即将&lt;code&gt;default_asides&lt;/code&gt;里面的东西全删掉，然后添加&lt;code&gt;sidebar: collapse&lt;/code&gt;就可以了。&lt;/p&gt;
&lt;h4&gt;4. 添加多说评论&lt;/h4&gt;
&lt;p&gt;首先去&lt;a href="http://duoshuo.com/"&gt;多说&lt;/a&gt;注册帐号，然后多说会给你一段代码，如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- Duoshuo Comment BEGIN --&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ds-thread&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;duoshuoQuery&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;short_name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;yourname&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;ds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;script&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="nx"&gt;ds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;text/javascript&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;ds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;async&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="nx"&gt;ds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://static.duoshuo.com/embed.js&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="nx"&gt;ds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;UTF-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByTagName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;head&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;         &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByTagName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;body&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]).&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ds&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="p"&gt;})();&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c"&gt;&amp;lt;!-- Duoshuo Comment END --&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;你获得的代码跟这段唯一的区别就在于short_name不同。然后：&lt;/p&gt;
&lt;h6&gt;a. 在&lt;code&gt;_config.yml&lt;/code&gt;文件中添加：&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;# duoshuo comments&lt;/span&gt;
&lt;span class="code-line"&gt;duoshuo_comments: true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;b. 在&lt;code&gt;source/_layouts/post.html&lt;/code&gt;中添加多说的模块：&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;{% if site.duoshuo_short_name and site.duoshuo_comments == true and page.comments == true %}&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;section&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Comments&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;comments&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;aria-live&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;polite&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{% include post/abc.html %}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;section&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;{% endif %}&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c"&gt;&amp;lt;!-- 其中`abc.html`随便你起什么名字，个人建议为`duoshuo.html`. --&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;c. 创建&lt;code&gt;source/_includes/post/duoshuo.html&lt;/code&gt;，并把多说给你的代码放进去就OK了。&lt;/h6&gt;
&lt;h6&gt;d. 发布到博客上&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;rake generate&lt;/span&gt;
&lt;span class="code-line"&gt;git add .&lt;/span&gt;
&lt;span class="code-line"&gt;git commit -m &amp;#39;add duoshuo comment&amp;#39;&lt;/span&gt;
&lt;span class="code-line"&gt;git push origin source&lt;/span&gt;
&lt;span class="code-line"&gt;rake deploy&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;e. 打完收工&lt;/h6&gt;
&lt;h4&gt;5. 修改样式&lt;/h4&gt;
&lt;p&gt;对于样式的修改，需要学习CSS。以前虽然在&lt;a href="http://www.codecademy.com/"&gt;Codecademy&lt;/a&gt;上看过一点，但是从没有自己真正用过，所以也还算是初学。我对样式的修改大致就是将&lt;strong&gt;Header&lt;/strong&gt;，&lt;strong&gt;Navigation&lt;/strong&gt;以及&lt;strong&gt;Artical&lt;/strong&gt;这些部分分开来，对不同的部分使用了一些特效。有些代码是在网上搜到后自己稍作了修改，有些是原创，有兴趣可以直接到我的GitHub网站上去看，不要告诉我找不到它在哪哦。&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;总结&lt;/h3&gt;
&lt;p&gt;花了两天修改，发现其实干的事情并不很多。仔细想来大部分修改的时间都在调整不同的系数，以及在网上看材料。这两天学到的东西很多，也让我发现很多很好玩的东西，比如Web的框架，特效，还有很多很好很美的设计，大爱！&lt;/p&gt;
&lt;h4&gt;参考&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://beyondvincent.com/"&gt;破船之家&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.uiweek.com/"&gt;UIWeek&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://octopress.org/"&gt;Octopress官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://shanewfx.github.io/blog/2012/08/13/improve-blog-theme/"&gt;Octopress主题改造&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.jcodecraeer.com/a/cssjiqiaoyuguifan/2012/0628/289.html"&gt;css实现简约的纸张卷角效果&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cnblogs.com/oec2003/archive/2013/05/31/3109577.html"&gt;Octopress博客设置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.google.com.hk/search?q=Octopress%E4%B8%BB%E9%A2%98%E6%94%B9%E9%80%A0&amp;amp;oq=Octopress%E4%B8%BB%E9%A2%98%E6%94%B9%E9%80%A0&amp;amp;aqs=chrome..69i57&amp;amp;sourceid=chrome&amp;amp;espv=210&amp;amp;es_sm=119&amp;amp;ie=UTF-8"&gt;。。。&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="blog"></category></entry><entry><title>记录：Octopress建站之旅</title><link href="//jacky-sj/octopress1.html" rel="alternate"></link><published>2014-02-23T10:40:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-02-23:/octopress1.html</id><summary type="html">&lt;p&gt;记录如何使用 Octopress 建站的过程&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;“文章原创，转载请注明出处”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;博客建立好了，花了不少时间，今天就想将自己如何建立这个博客的过程梳理一遍，写在这里，当作复习回顾的同时，也与人参考。&lt;/p&gt;
&lt;p&gt;自己的这个小博客是用的Octopress搭建的，托管在github上面(没有资金但又想建立一个自己独立博客的同志们可以使用GitHub，free哦)。&lt;/p&gt;
&lt;p&gt;使用Octopress唯一的问题在于你得学一点shell commands和Git基础(其实用的内容并不很多，照着顺序搭建部署都可以搞定）。以后发博客只需要一些&lt;strong&gt;简单的&lt;/strong&gt;&lt;em&gt;每次都一样的&lt;/em&gt;步骤就可以搞定了，直接复制粘贴就好。但是我想你需要对这些命令不感到反感才行，正如Octopress官方文档开头说的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You should be comfortable running shell commands and familiar with the basics of Git. If that sounds daunting, Octopress probably isn't for you.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但是shell跟Git是很好的东东，shell可以帮你很大限度地减少重复工作，而且学习shell的过程会让你对计算机有更深入的了解；Git是一个开源的分布式版本控制系统，它让我一次性放弃了CVS而投入它的怀抱（变得是不是太快了）。GitHub就是为开源项目免费提供Git存储的网站，看看现在无数的开源项目在GitHub里面活跃，你就知道不是我变得太快，而是它的优秀让你无法抗拒。&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;一、准备工作&lt;/h3&gt;
&lt;p&gt;在安装Octopress之前，你必须得先安装上Git和Ruby。安装很简单，直接百度就可以了。如果你用的是Mac，那么恭喜你，你的电脑里面已经自带了Ruby。当然你仍然可以选择用rvm或者rbenv去安装更新Ruby，这些命令在官网上都有，就不多说了。&lt;/p&gt;
&lt;p&gt;安装完成后，在终端中运行命令：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;git --version&lt;/span&gt;
&lt;span class="code-line"&gt;ruby --version&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果能正确显示版本号，类似于我的输出：分别是&lt;code&gt;git version 1.8.3.4 (Apple Git-47)&lt;/code&gt;和&lt;code&gt;ruby 2.0.0p247 (2013-06-27 revision 41674) [universal.x86_64-darwin13]&lt;/code&gt;，就没有问题了，继续往下吧！&lt;/p&gt;
&lt;h3&gt;二、安装Octopress&lt;/h3&gt;
&lt;p&gt;首先在终端进入你想安装Octopress的文件夹中，然后使用git命令将Octopress clone到本地：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;git clone git://github.com/imathis/octopress.git octopress&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;进入octopress文件夹：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;cd octopress&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装依赖项:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;gem install bundler&lt;/span&gt;
&lt;span class="code-line"&gt;rbenv rehash    # If you use rbenv, rehash to be able to run the bundle command&lt;/span&gt;
&lt;span class="code-line"&gt;bundle install&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;当然你有可能跟我一样遇到权限不足，操作无法完成的情况，那么你需要在命令前面加上&lt;code&gt;sudo&lt;/code&gt;，第一次终端会要求你输入密码，输入成功后就可以正常安装了。&lt;/p&gt;
&lt;p&gt;安装好依赖项后，你需要安装主题：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;rake install&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;上面命令会安装默认主题，当然你可以选择安装第三方主题，在&lt;a href="https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes"&gt;这里&lt;/a&gt;有很多第三方的主题，你可以挑选自己喜欢的主题，然后安装：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;git clone GIT_URL .themes/THEME_NAME&lt;/span&gt;
&lt;span class="code-line"&gt;rake install[&amp;#39;THEME_NAME&amp;#39;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;比如我的用的是CleanPress主题：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;git clone git://github.com/macjasp/cleanpress.git .themes/cleanpress&lt;/span&gt;
&lt;span class="code-line"&gt;rake install[&amp;#39;cleanpress&amp;#39;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;三、注册GitHub&lt;/h3&gt;
&lt;p&gt;到&lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt;网站上注册一个免费账户，然后新建一个repository。&lt;strong&gt;repository一定要使用这样的格式命名：&lt;code&gt;yourname.github.io&lt;/code&gt;，其中&lt;code&gt;yourname&lt;/code&gt;是你注册时的用户名。&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;四、部署到GitHub&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;rake setup_github_pages&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;输入上述的命令会要求你输入SSH(你注册GitHub时会有)或者是你的repository的url，找到复制粘贴就好。&lt;/p&gt;
&lt;p&gt;然后就可以开始部署了：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;rake generate&lt;/span&gt;
&lt;span class="code-line"&gt;rake deploy&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;此时可能会让你登录你的github，按照提示进行输入即可。&lt;/p&gt;
&lt;p&gt;到此为止，就差博客的source还没有提交了：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;git add .&lt;/span&gt;
&lt;span class="code-line"&gt;git commit -m &amp;#39;your message&amp;#39;&lt;/span&gt;
&lt;span class="code-line"&gt;git push origin source&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;五、配置Octopress&lt;/h3&gt;
&lt;p&gt;我对Octopress没有做很大的配置改动，只是设置了博客名称，以及添加了Home页及其它一些页面的内容(其实就是给了一个空网页，里面神马都没有，以后再慢慢填充吧)。&lt;/p&gt;
&lt;p&gt;在octopress文件夹中，需要在&lt;code&gt;_config.yml&lt;/code&gt;中设置自己博客的名称等等的内容：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nl"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nl"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nl"&gt;subtitle&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;subtitle&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nl"&gt;author&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nl"&gt;simple_search&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//google.com/search&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;some&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;want&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;除此之外，我还将里面有关twitter、facebook等等的社交信息全部给删除掉了(谢谢&lt;a href="http://beyondvincent.com/"&gt;船哥&lt;/a&gt;，这个明显的是偷师啊～)。当然你要是有这些帐号也可以设置，只是在国内用处不大呀。&lt;/p&gt;
&lt;p&gt;之后，我对&lt;code&gt;octopress/source/_includes/custom&lt;/code&gt;下的&lt;code&gt;navigation.html&lt;/code&gt;进行了简单的修改，就是添加了&lt;code&gt;Home&lt;/code&gt;，以及变换了&lt;code&gt;About&lt;/code&gt;的位置：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{ root_url }}/home&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Home&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{ root_url }}/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Blog&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{ root_url }}/portfolio&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Portfolio&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{ root_url }}/archives&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Archive&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{ root_url }}/about&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;About&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;现在添加了Home页，但是Home页其实还是不存在的，所有需要建立一个新的page：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;rake new_page[home]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;上述命令会在&lt;code&gt;octopress/source&lt;/code&gt;文件夹下生成一个新的文件夹&lt;code&gt;home&lt;/code&gt;，&lt;code&gt;home&lt;/code&gt;文件夹下面有一个markdown文件&lt;code&gt;index.markdown&lt;/code&gt;。编辑该文件，将你想放在Home页上的东西写进去就OK了。&lt;/p&gt;
&lt;p&gt;默认情况下，&lt;code&gt;About&lt;/code&gt;,&lt;code&gt;porfolio&lt;/code&gt;页面都是不存在的，所以需要自己设置，方法与设置&lt;code&gt;home&lt;/code&gt;页面的一样，就不多说了。&lt;/p&gt;
&lt;p&gt;根据自己的需求，修改完成后，不要忘了：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;rake generate&lt;/span&gt;
&lt;span class="code-line"&gt;git add .&lt;/span&gt;
&lt;span class="code-line"&gt;git commit -m &amp;#39;customise octopress&amp;#39;&lt;/span&gt;
&lt;span class="code-line"&gt;git push origin source&lt;/span&gt;
&lt;span class="code-line"&gt;rake deploy&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;六、发布新博客&lt;/h3&gt;
&lt;p&gt;根据Jekyll的命名规则，文章命名必须有这样的格式：&lt;code&gt;YYYY-MM-DD-post-title.markdown&lt;/code&gt;，使用Octopress的rake task可以简单解决这个问题：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;rake new_post[&amp;quot;title&amp;quot;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;命令会生成这样的文件：&lt;code&gt;source/_posts/YYYY-MM-DD-title.markdown&lt;/code&gt;，然后你可以修改markdown文件，写自己的博文。写好后，别忘记部署到GitHub：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;rake generate&lt;/span&gt;
&lt;span class="code-line"&gt;git add .&lt;/span&gt;
&lt;span class="code-line"&gt;git commit -am &amp;#39;YYYY-MM_DD post&amp;#39;&lt;/span&gt;
&lt;span class="code-line"&gt;git push origin source&lt;/span&gt;
&lt;span class="code-line"&gt;rake deploy&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;至此文章就部署好了，过两分钟去自己的博客看看吧。&lt;/p&gt;
&lt;h3&gt;七、最后&lt;/h3&gt;
&lt;p&gt;利用Octopress搭建一个GitHub博客的简单流程差不多就像上述。但是对于自己的博客，可能我们还需要做更多的一些配置，比如添加评论系统，社交分享啊等等。这些内容网上有很多，可以到Google里面百度一下～&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;参考资源以及更多配置Octopress的资源推荐&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://octopress.org/docs/setup/"&gt;Octopress官方文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://beyondvincent.com/"&gt;破船之家&lt;/a&gt;：&lt;a href="http://beyondvincent.com/blog/2013/08/03/108-creating-a-github-blog-using-octopress/"&gt;利用Octopress搭建一个Github博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://never.doubting.me/"&gt;Never Doubting Me&lt;/a&gt;：&lt;a href="http://never.doubting.me/2013/04/18/2013-04-18-setup-octopress-on-github-step-by-step/"&gt;教程:一步步在github上建立octopress博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://williamherry.com/"&gt;William's Blog with Octopress&lt;/a&gt;：&lt;a href="http://williamherry.com/blog/2012/07/20/octopress-setup/"&gt;Octopress - 像黑客一样写博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.yanjiuyanjiu.com/"&gt;研究研究&lt;/a&gt;：&lt;a href="http://www.yanjiuyanjiu.com/blog/20130402/"&gt;我的Octopress配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://agiledon.github.io/"&gt;简单文本&lt;/a&gt;：&lt;a href="http://agiledon.github.io/blog/2012/12/25/octopress-issues-solution-and-tips/"&gt;Octopress博客问题解决方案与技巧&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.google.com.hk/search?newwindow=1&amp;amp;safe=strict&amp;amp;espv=210&amp;amp;es_sm=119&amp;amp;q=octopress%E6%95%99%E7%A8%8B&amp;amp;oq=octopress%E6%95%99%E7%A8%8B&amp;amp;gs_l=serp.12..35i39.5308.6241.0.8806.10.8.0.0.0.1.237.921.0j3j2.5.0....0...1c.1j4.35.serp..6.4.789.PMKW2jRRdPI"&gt;。。。&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;如果有什么问题或者建议，可以直接回复我或者给我发邮件：&lt;code&gt;jackycodemsc@gmail.com&lt;/code&gt;。&lt;/strong&gt;&lt;/p&gt;</content><category term="blog"></category></entry><entry><title>Hello, my blog</title><link href="//jacky-sj/hello.html" rel="alternate"></link><published>2014-02-21T14:17:00+08:00</published><updated>2017-03-29T20:30:00+08:00</updated><author><name>Jacky Gong</name></author><id>tag:jacky-sj,2014-02-21:/hello.html</id><summary type="html">&lt;p&gt;Hello, my blog!&lt;/p&gt;</summary><content type="html">&lt;p&gt;花了一个晚上以及一个上午的时间，总算是把这个博客弄出来了(对一个数学系的孩子不容易啊！)。这里要非常感谢&lt;a href="http://beyondvincent.com/"&gt;破船之家&lt;/a&gt;，&lt;a href="http://williamherry.com/"&gt;William's Blog with Octopress&lt;/a&gt;以及&lt;a href="http://octopress.org/"&gt;Octopress&lt;/a&gt;的官方文档和一些其它网站上的材料(翻了不少材料，没记住那么多，sorry！)。我大致是照着做了两遍，其中大错了一次(对Git掌握有待加强啊)，小错蛮多次(对Web这些语言实在是不甚了了，需要好好摸索学习)，一路错下来倒也是把这个小站弄出来了。非常感谢Github，不然我一个穷学生还真没钱去买个域名建博客，非常感谢Octopress，不然我也没本事弄出个博客系统来～哈哈！&lt;/p&gt;</content><category term="blog"></category></entry></feed>